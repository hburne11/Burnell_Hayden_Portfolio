%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 25.4.1
%%For: (Hayden Burnell) ()
%%Title: (logo_concepts3.ai)
%%CreationDate: 11/3/2021 11:08 PM
%%Canvassize: 16383
%%BoundingBox: 658 -843 1218 -147
%%HiResBoundingBox: 658.1416 -842.1875 1217.1816 -147.084
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 960.5 -540.5 960.5 -540.5
%AI3_TileBox: 564 -846 1356 -234
%AI3_DocumentPreview: None
%AI5_ArtSize: 1920 1080
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -522 292 0.489583 1453 874 18 0 0 96 151 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:560 -840
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 104 128 8
%%BeginData: 9672 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD45FFA87E5353282800220001000100282853537E7EFD52FF7D53
%FD0B000100220000F8FD04002853A9FD4BFF7D53FD050022282800220000
%7DFFFFFFA8A97E7D4C28FD050053A8FD46FF7D53FD0400F801287EA8FF52
%00000021FD09FFA8A828FD050028FD42FFA87D280000010000227EA9FFFF
%FFA8220022007EFD0CFFA8530001000022CBFD40FF53F8FD0400287DFD06
%FF5300000028FD0FFF53FD0500A8FD40FF4C00000053CBFD07FF00010000
%7DFD10FF770001000000FD41FF7D4CA8FD08FF53FD0400FD12FF28FD0400
%28FD4BFF280022007DFD12FFA80000220000A8FD49FF7EFD0400A8FD13FF
%280000010053FD49FF2200000028FD14FF7D0001000122FD48FF7DFD0400
%7EFD14FF77FD0500A8FD47FF5300220028FD15FFA80001002200A8FD46FF
%A9FD040053FD15FF7EFD05007DFD46FF5300000100A9FD15FFA800010001
%007EFD45FFA82200000028FD16FF7DFD05007DFD45FF7E0022000077FD16
%FF7E0022000100A8FD45FF28FD0400A9FD16FF5300000100007EFD44FFA8
%0100010053FD17FF280001000100FD45FF53F800000053FD16FFA8FD0500
%28FD45FF0001000100FD17FF4C00000100007DFD44FF7D0000010028FD16
%FFA8000001000000FD45FF53000100007DFD16FF2800010022007EFD44FF
%A8FD0500A9FD15FF4CF8000000F852FD45FF530000010053FD15FF530022
%00220028FD46FF280001000053FD13FFA84C000000010022A8FD45FFA800
%01000100A9FD12FF7E28002200000028A9FD46FF28FD040028FD11FFA828
%FD060053A8FD2AFFA2A8A8FD19FFA9280001000053FD0FFFA85300000001
%000028A8FD28FFA95328FD0500A8FD17FF7EFD0500A8FD0CFFA87D28FD06
%00287DFD28FFA8530000F8000001000000FD17FF280000220028FD0AFF7E
%7D2822FD05002853A8FD29FF5300F80028535328FD040053FD15FFA8FD05
%004CFFA8A97E7E53532828FD050001002853A8A9FD2AFF280000287EFFFF
%FFA80000220053FD15FF7E00010022002800280001FD0500010001002853
%A8A8FD2BFF7E00000028A8FD04FFA8FD040028FD15FF22FD180028527EA8
%FD25FF7E00000028FD06FF770000010053FD14FFA8000022000021A8A8A8
%7EA8A8A87EA8A8A87D7E53532828FD050001287EA8FD21FF77F8000000A8
%FD06FF4CFD040053FD14FF53FD050053FD12FF7E7D28220000F80152A8FD
%1EFF7E002200007DFD07FF0001000100A9FD14FF2800002200007EFD16FF
%A828010000007EFD1CFFA8FD040028FD07FF7D0000010028A9FD13FF7EFD
%0600FD19FF7E2800000028A8FD1AFF0000000100A9FD07FF530001000053
%FD14FF53002200010053FD1BFF7700000028FD19FF28FD040053FD07FFA9
%FD0500A2FD14FFFD060053FD1CFF7D0000F828FD17FF7E0000220000A8FD
%07FF7D0000010028FD14FFA8000022000100FD1EFF530022007DFD16FF28
%FD040028FD08FF4C0001000028FD14FF53000000010028FD1EFFA8FD0400
%A9FD14FFA800010001007EFD08FF00000022007EFD14FF00010001000053
%FD1FFF5300000053FD14FF52FD0500A8FD07FF53FD0500A8FD13FF7EFD06
%007EFD1FFF7E00000028FD14FF280022000028FD08FF530001000128FD14
%FF53002200010028A9FD1FFFA801000100FD14FF000000010053FD07FFA9
%FD05007DFD14FF00000001000028FD20FFCBFD0400A8FD12FFA928000100
%007EFD07FF7D0000220001A8FD13FF7E0000010022007DFD20FFA8220001
%00A8FD13FFFD0500A8FD07FF28FD040022FD14FF53F8FD05007EFD20FFA8
%FD04007DFD13FF5300220028A8FD07FF00010022007DFD14FF2801000100
%0101FD21FF7D00000100A8FD13FF7DFD0400A8FD06FF53FD05007EFD13FF
%A800000100000053FD21FF4C000100007EFD14FF530000007DFD06FF2800
%22000000FD14FF7D0001002200007DFD21FF0000000100FD16FF7D53007D
%FD05FFA8FD050053FD14FFFD0700A8FD20FF53FD040028FD1FFF53000022
%00007EFD13FFA822000100220028FD20FFA8280001000053FD1FFF28FD05
%00FD14FF7D0001FD040052FD20FF5300010000007EFD1EFFA90001000100
%53FD14FF28000022000100A8FD1FFF7E000100220028FD1FFF53FD050077
%FD13FFA801FD0600A8FD1EFFA8FD060053FD1FFF280022000100FD14FF7E
%00010022000028FD1FFF00010001000122FD1FFFA9000000010028FD14FF
%28FD040001007DFD1DFFA800000001000000A8FD1FFF53000001000077FD
%14FF28002200010001A8FD1CFFA20000000100220053FD20FF28FD0500FD
%15FFFD0700FD1CFF53FD070028FD20FFA9002200010028FD0B537D777E7D
%A8A8A9A8FFA82200220001007DFD1AFFA8280001002200220028A9FD1EFF
%7D5300000001FD1700280000000100004CA87EA8A2FD15FF530000010000
%00010022A8FD1CFFA8530000000100010022000100220001002200010022
%00010022000100010000002200010022000000010028A8FD12FF7D000000
%01002200010028A8FD1CFF7D00F8FD280053A8FD10FFA85222FD090028A8
%FD1CFFA80000220001002200010022FD0700010001002800220028002800
%280028002200010028285353A9FD10FF7D5300000001002200010001007D
%FD1EFF28F8FD06000100000053537D7D7E7DA87EA87EA8A8A9A8A8A8FFFF
%FFA8FF530000010053FD10FFA9A8774CFD05000100000001000000A8FD1F
%FF2853537D7D7E000000220028FD15FF2800010000A8FD0CFFA97D7D4C28
%FD050022000100220001000153FD26FF7DFD050028FD14FFA8FD05005353
%7D537D537D5253282800220000F8FD0E0053A8FD27FF5300010022007EFD
%14FF530000010022FD0B00010001002200010022000100220001000128A8
%FD29FFFD050001A8FD14FF28000100000001000000010000000100000001
%0000000100000001FD050053A8FD2AFF7E000022000028FD15FF00000022
%0001002200010022000100220001002200010022FD0500287DFD2DFF53FD
%05007DFD14FF7DFD1A002853A8FD2FFF000100220001A8FD14FF53000100
%22000000220001002200010022FD05000100537DCBFD31FF7DFD050028FD
%15FFFD0500535328FD0900222252537EA8FD35FF5300220001007DFD14FF
%A800002200007DFFFFFFA8A87D7E7DA8A8A9A9FD3AFFFD06007EFD14FF7D
%FD0500A8FD45FFA8000022000028FD15FF280000220028A9FD45FF530000
%00010053FD14FFA801FD040028FD46FF280000010001A8FD14FF7E000100
%010053FD45FFA8FD0600FD15FF52FD050053FD45FF7E002200010077FD15
%FF280022000100A9FD45FF2800000100007DFD14FFA9000000010000A8FD
%44FFA8220001000100FD15FF7D000001000028FD45FF7EFD050053FD15FF
%53FD050053FD45FF5300000100007EFD15FF2201000100007DFD45FF2800
%01000000FD15FFA8000001000000A8FD44FFA9000100220053FD15FFA800
%0100220001A8FD44FF53FD05007DFD15FF53FD0600FD45FF530001002200
%FD16FF5300010022004CFD45FFFD05004CFD16FFFD06004CFD44FF7E0000
%22000053FD15FFA92200220001007DFD44FF53FD0500A8FD15FFA8FD0600
%53FD44FF280000220028FD16FF7E000022000100A8FD43FFA801FD040053
%FD16FF7E000000010000A2FD43FFA80001000100A8FD16FF530000010001
%00FD44FF53FD040028A8FD16FF7DF8FD040022A8FD43FF4C0022000053FD
%17FF53000001000128FD44FFFD05007EFD17FF7DFD050028FD43FFA80100
%010028FD18FF7E000022000028FD43FF7DFD040053FD19FFFD05004CFD43
%FF5300000028FD1AFF7D0022000028FD43FF28F80028FD1CFF5300000028
%FD43FF00287DFD1EFFA8282828FD42FFA8A9FD22FFA8A9FDFCFFFDFCFFFD
%49FFA8A8FD05FFA8FD17FFA8FD15FFA8A87DA8A2FD25FFA8FD07FF535328
%A8FFFFFF7D7EFD16FF5328FD13FFA8287D2853A87D28CBFD22FF5300A8FF
%A87EFFFF2853A900FFFFFFA828A8FD15FFA80053FD13FFA8A8A828A8FFFF
%7D00FD21FF7D0021A8FF2200FFA800FF5353FFFFFFA828FD16FF5300FD16
%FF7D4CFFFFFFA801A8FD20FF28537DFF532853A95328FF2853FFFFFF287D
%FD16FF007DFD16FF00A8FFFFFFA800FD20FF5300A877A800A853FFFFA8A8
%00FD04FF28A8FD15FF5300A8FD15FF7E28FFFFFFCB007DFD20FF00A853FF
%28537D7EFFFFFF5228A8FFA8A800FD16FF2252FD16FF5228FF7D53287EFD
%0BFFA2A8FD13FF53287E7DA800A853A8FFFF53280028012800287DFFFFFF
%7E7EA9FD0BFFA97D537E00FD04FF7E287EFD10FF0053535328537EFD0BFF
%22A8FD0EFF7D5353FFFF287D7DFF53527E7DFFFFA95300A8A8FFA82853FF
%FFFF28535328A9FFA853A8FFA8FFFFFF7E2877FF284CFFFFFF2828A800FF
%A8FFFFA953A8FD08FF7D00A8FFFFFFA84C53FFFF7DA8FD05FFA92828A9FD
%06FF7D7EFD04FF52287E28A8A800537EFF005353FD04FF5328FD04FF00CB
%FFFF007DFFFF52FFFF5300FFFF534CFFA9227DFFFF017DFFFF5328FF5352
%FF287DA8220122FD08FF5328FD06FF28FF7E00FFFF7D28FFFFA8A85328FF
%FFA800FF5328007DFFFF5322FFA800FF530053FF7E0052FD05FF2853FFFF
%FF7D00A8FF2228FFFF5253FFFF0053FFFF007DFF2828FFFF5300FFFFA800
%A85228A9A9002853FF5300A8FFA8FD05FF0077FD06FF00A92877FFFF007D
%FFFF53FF5322FFFF5300287EFF2828FFA8007D7E00A8FF2252FFFF5300FF
%FFFFA9FFFF00A8FFFFFF5328FF7E00A8FFA8007EFF7D00A8FF5300A9A900
%A9FFA9004CFFFF2828527DFFFF530053FFFF7D22FFA87EFD04FF7E00A8FD
%05FF5328A828A8FF5301FFFF7D7EFF2853FFFF2800A8FFFF007EFF7D0053
%53FFFF7E00FFFFFF007EFFFF7DFFFF5328FD04FF0053FF5328FFA80028FF
%7E4C007D532828FF2101FFA8522852FF7D0053FFFFFF7D0000FFFFFF007D
%FF53A8FD04FF7D00FD05FF5200A8A800FFA80028FFA853FFA800FFFF53F8
%53FFFFA200A8FF004CFFFFFFA82801A8FF53007DFF7D7EFFFF4C28FFFFFF
%CB017DFF28287D5328287D53A97E4CA9284C7E7D005352FF5222537E2828
%FFFF775300A8FFFFFF28287D7EFD05FFA8A8FFFFA87D00007EFFFF28287D
%53287D53A8FF7E01537D2828FFFFFFCB007D535300FFA87E53A9005353A8
%28287D7DFFFFFF00A8FD04FF007DFFA82853A8FF537EFD04FFA80077FFFF
%7D53FFFFFF77A8FFFF285353A8FFA9FD04FFA87EA8FD06FF28FD050053A8
%FFFFFFA853A8FF537DA8FFFFFF7D7DA8FFA8FD04FFA87DFFFF5328537DFF
%FF7E52A8FFA8527EFD04FFA8FD05FFA9A8FD0BFF7D2828FD1FFFA87D537E
%7EFD3FFFA953A822A8FD63FF53A85253FD64FF7D0053A9FD52FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Deform.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (PlanetX.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligraphicBrushTool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathfinderS.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
3 Bn
%AI5_BeginGradient: (Blue Sky)
(Blue Sky) 0 2 Bd
[
0.56173
0
0.12668
0
0.239216
0.870588
0.929412
4 %_Br
[
0.56173 0 0.12668 0 0.239216 0.870588 0.929412 2 50 100 %_BS
%_0.56173 0 0.12668 0 0.239216 0.870588 0.929412 2 50 100 Bs
0.56173 0 0.12668 0 0.239216 0.870588 0.929412 2 50 0 %_BS
%_0.56173 0 0.12668 0 0.239216 0.870588 0.929412 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Gold Dust)
(Gold Dust) 0 4 Bd
[
<
20202121212122222323222424252526262727272828292929292A2A2A2A2A2B2B2C2C2D2D2E2E2E
2F2F302F302F30302F30303130313132323132323333333333333433333434343435343535343535
353536363636
>
<
2E30313233353637383A3C3C3E3F41414344464748494A4B4C4E4F50515354555758595A5C5C5D5F
6162636667696A6B6D6E6F70717374757778797A7B7D7E80818283858687898A8B8C8E8F90929395
9697999A9B9D
>
1
<
00000000000000000000000000000000000000000000000001010101010101010101010102020202
0202030303030303030404040505050606060606070708080909090A0A0B0B0B0C0C0D0D0E0E0E0E
0F0F10101111
>
<
E5E5E4E4E3E3E2E2E1E1E1E0E0DFDFDEDEDDDDDDDCDCDBDBDADAD9D9D8D8D8D7D7D6D6D5D5D4D4D4
D3D3D2D2D1D1D0D0D0CFCFCECECDCDCCCCCCCBCBCACAC9C9C8C8C7C7C7C6C6C5C5C4C4C3C3C3C2C2
C1C1C0C0BFBF
>
<
C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E
9D9C9B999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978777675
74737271706F
>
0
4 %_Br
<
18191919191A1A1A1A1B1B1B1B1B1C1C1C1C1C1C1D1D1D1D1E1E1E1E1E1E1E1E1E1F1F20202020
>
<
6866656362615F5E5C5B595856545352504F4E4B4A4846454442413F3E3C3B393836343331302E
>
1
<
000000000000000000000000000000000000000000000000000000000000000000000000000000
>
0.898039
<
9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5
>
<
030303030303030202020202020202020202020101010101010101010101010100000000000000
>
4 %_Br
<
0000000000000000000000000000000000000000000000000000000101020304040505060709090A
090A0A0C0C0D0E0E10101212131515161718
>
<
ADADADACACACACAAAAA9A9A7A7A6A4A4A3A2A2A09E9E9D9C9A9A989695959492918F8E8D8B898886
858381817F7D7B7977767472706F6D6B6A68
>
1
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000
>
<
FFFFFFFEFEFEFEFDFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F1F0F0EF
EFEEEEEDEDECEBEBEAEAE9E9E8E7E7E6E6E5
>
<
73737374747575767677777878797A7A7B7C7C7D7E7E7F808181828384848586878889898A8B8C8D
8E8F90909192939495969798999A9B9C9D9E
>
<
00000000000000000000000000000001010101010101010101010101010101010101020202020202
020202020202020202020303030303030303
>
4 %_Br
[
0.211002 0.616449 1 0.068025 0.74902 0.435294 0 2 50 99.4382 %_BS
%_0.211002 0.616449 1 0.068025 0.74902 0.435294 0 2 50 99.4382 Bs
0.125551 0.181674 1 0 0.898039 0.772549 0 2 50 86.5168 %_BS
%_0.125551 0.181674 1 0 0.898039 0.772549 0 2 50 86.5168 Bs
0.095399 0.407141 1 0.001007 0.898039 0.619608 0.011765 2 50 55.211 %_BS
%_0.095399 0.407141 1 0.001007 0.898039 0.619608 0.011765 2 50 55.211 Bs
0 0.67895 1 0.000031 1 0.45098 0 2 59.5506 0 %_BS
%_0 0.67895 1 0.000031 1 0.45098 0 2 59.5506 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (White, Black)
(White, Black) 0 2 Bd
[
<
00000001020304050506070809090A0B0C0E0F101112131314161718191A1B1C1C1D1F2020212324
252627292A2A2B2D2E2F3032333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F5052
5354555658585A5B5D5E6061626364666768696A6B6C6D6E6F70707172737475767778797A7B7C7D
7E7F8081828283848585868787888A8A8B8C8D8E8F8F909192929394959596979898999A9A9B9C9D
9D9E9E9E9FA0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A7A8A8A9AAAAAAABABABACACADADADAEAEAFAFB0
B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B5B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBB
BCBCBCBDBDBDBDBDBEBEBEBEBEBFBFBF
>
<
00000000010102030304040506060708090A0A0B0C0D0E0E0F1010111213131415161718191A1B1B
1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343436363738393A3B3C3D3E3F4041
424344454647484A4B4D4E4E4F505253535455565758595A5B5C5C5D5E5F60616162636465666768
696A6A6B6C6C6D6E6F6F7071727374757677787879797A7B7C7D7D7E7F8081818283838485868687
8888898A8B8B8C8D8D8E8F8F90909192939394959596969798989899999A9A9B9B9C9C9D9D9E9E9F
9FA0A0A1A1A2A2A2A3A3A3A3A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAABABABABABABABAB
ACACACACACACACACACACADADADADADAD
>
<
00000000010102030304040506060708090A0A0B0C0D0E0F1011121213141516171718191A1B1C1C
1D1E1F20212122232425262829292A2B2D2E2E2F30313233343536373838393A3B3C3D3E3F404142
4345454647484A4B4D4E4F4F515253545455565758595A5B5C5D5D5E5F6061626363646566666768
696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7E7F808181828383848586
8687878788898A8B8B8C8D8E8E8F8F909090919192929394949595959697979899999A9A9B9C9C9D
9D9D9E9E9E9F9FA0A0A1A1A1A2A2A2A3A3A3A3A4A4A4A5A5A5A6A6A6A6A6A7A7A7A7A7A7A7A7A8A8
A8A8A9A9A9A9A9AAAAAAAAAAABABABAB
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C
0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D
3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E8083858789
8C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4
D5D6D8D9DADBDCDDDEDFE0E1E3E4E5E6
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
0.749721 0.679194 0.670497 0.901457 0 0 0 2 50 100 %_BS
%_0.749721 0.679194 0.670497 0.901457 0 0 0 2 50 100 Bs
0 0 0 0 1 1 1 2 50 0 %_BS
%_0 0 0 0 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Jive)
(Jive) 47.5615 109.6396 155.9004 219.2813 [
%AI3_Tile
(0 O 0 R 1 0.829862 0.242649 0.080476 0 0.258824 0.494118 Xa
 1 0.829862 0.242649 0.080476 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
135.0352 74.9453 m
135.0566 75.0645 135.1602 75.1504 135.2813 75.1523 c
148.1875 75.2871 160.0352 78.4199 169.2529 86.667 C
161.2227 81.1094 146.3105 79.1563 137.7256 83.0488 c
137.6152 83.0986 137.5566 83.2188 137.584 83.3369 c
137.6104 83.4551 137.7168 83.5371 137.8379 83.5332 c
148.5176 83.2441 157.1172 86.54 163.8223 92.498 C
156.9531 92.9199 151.248 97.2383 151.2656 102.3428 c
151.2656 102.4619 151.3496 102.5645 151.4668 102.5898 c
151.583 102.6152 151.7012 102.5547 151.75 102.4463 c
152.8711 99.957 156.498 98.666 160.333 99.5664 c
164.5127 100.5469 167.333 103.7559 166.6338 106.7314 c
166.1621 108.7461 164.1973 110.1348 161.6816 110.5186 c
161.5547 110.5371 161.4619 110.6484 161.4648 110.7764 c
161.4688 110.9043 161.5674 111.0098 161.6953 111.0215 c
162.7637 111.124 163.875 111.1279 165.0127 111.0195 c
171.5029 110.4023 176.5264 106.4238 176.9619 101.8418 C
181.6748 102.3887 185.8457 104.998 187.3398 108.6152 c
187.3848 108.7236 187.5 108.7871 187.6152 108.7695 c
187.7305 108.75 187.8184 108.6553 187.8281 108.5391 c
188.2051 103.7871 186.5703 100.7002 182.8584 97.6846 C
188.2422 99.7441 194.3027 99.8496 200.1133 97.1465 c
200.2188 97.0977 200.2773 96.9824 200.2559 96.8672 c
200.2324 96.752 200.1328 96.668 200.0156 96.6641 c
195.1367 96.4736 191.5996 94.9082 188.2852 91.5918 C
206.5391 96.7256 221.3711 85.3906 216.2383 68.5391 c
216.2031 68.4238 216.0918 68.3486 215.9707 68.3613 c
215.8496 68.373 215.7539 68.4688 215.7441 68.5898 c
214.8262 78.3037 208.041 84.7051 197.8828 85.666 C
203.2695 83.6055 208.8828 78.6895 209.4395 70.1318 c
209.4473 70.0098 209.3672 69.8984 209.248 69.8691 c
209.1289 69.8398 209.0059 69.8984 208.9551 70.0098 c
206.1563 76.1641 200.6582 79.2754 194.7949 79.8223 C
201.1289 77.2422 205.1914 71.2207 206.3652 63.4023 c
206.3848 63.2793 206.3105 63.1602 206.1914 63.123 c
206.0742 63.084 205.9453 63.1387 205.8887 63.248 c
202.0234 70.8311 193.7324 76.042 183.4424 72.0605 c
172.8252 67.9512 168.168 55.6738 167.1387 47.0195 c
167.124 46.8984 167.0234 46.8047 166.9004 46.7969 c
166.7783 46.7891 166.668 46.8711 166.6396 46.9922 c
162.9199 62.6797 170.2227 78.9414 183.2764 85.832 C
176.1807 83.8291 169.8369 79.5723 166.249 72.4775 C
157.9551 71.459 152.2451 68.6152 149.3916 63.2383 c
149.335 63.1309 149.2109 63.0781 149.0957 63.1133 c
148.9805 63.1465 148.9043 63.2578 148.9141 63.3789 c
149.0967 65.4883 149.8555 69.709 152.9883 71.6494 C
146.0234 71.6387 140.4824 72.543 135.1895 74.6621 c
135.0781 74.708 135.0127 74.8262 135.0352 74.9453 c
f
164.5215 21.4746 m
164.4229 21.541 164.293 21.5293 164.2061 21.4492 c
164.1201 21.3672 164.1016 21.2383 164.1602 21.1367 c
165.7803 18.3398 164.3008 14.3223 161.1094 14.3223 c
155.3887 14.3223 152.6387 25.0918 153.5137 34.916 C
155.6768 29.1602 157.5469 26.8613 160.8613 24.1211 c
160.9551 24.043 161.0898 24.043 161.1836 24.1191 c
161.2773 24.1973 161.3047 24.3281 161.2471 24.4355 c
156.3906 33.5156 155.3496 40.502 155.3496 48.5215 C
156.8125 42.5625 158.5449 39.1992 163.4766 34.1406 c
163.5625 34.0527 163.6992 34.0391 163.8018 34.1074 c
163.9033 34.1777 163.9404 34.3105 163.8887 34.4238 c
158.5908 46.0137 158.9951 58.8711 162.9414 68.6875 c
162.9805 68.7852 162.9561 68.8965 162.8789 68.9688 c
162.8018 69.0391 162.6895 69.0566 162.5938 69.0098 c
157.3887 66.459 154.3301 64.7832 149.8418 58.6211 C
151.1992 51.2227 150.0703 47.5723 146.6699 41.4258 C
150.6074 51.3438 148.5117 65.3203 138.4824 71.0176 c
138.373 71.0791 138.2344 71.0518 138.1582 70.9531 c
138.0801 70.8535 138.0869 70.7119 138.1738 70.6211 c
141.9551 66.666 144.7051 59.9863 142.3301 52.6934 C
143.8594 63.082 134.7344 71.8086 124.5508 71.8086 c
114.9512 71.8086 108.4004 64.2988 108.9414 56.8672 c
109.4785 49.502 114.3848 45.8984 118.6133 44.3691 c
118.7246 44.3301 118.8496 44.3711 118.9131 44.4707 c
118.9766 44.5723 118.9629 44.7012 118.8799 44.7871 c
113.2695 50.4785 112.502 61.2793 122.4629 64.5469 C
116.6035 59.4902 118.7734 47.7168 128.1523 46.8223 c
128.2695 46.8105 128.3789 46.8809 128.417 46.9922 c
128.4551 47.1035 128.4121 47.2266 128.3135 47.2891 c
126.3047 48.5664 124.6348 51.0605 124.6348 53.8633 c
124.6348 58.5371 128.0566 60.373 130.3105 60.373 c
133.7324 60.373 136.5703 57.1172 136.5703 52.1934 c
136.5703 46.3496 131.3105 41.5098 124.5508 40.7578 c
117.9248 40.0234 111.7686 42.9121 108.8008 47.2168 c
108.7314 47.3184 108.5996 47.3555 108.4873 47.3047 c
108.375 47.2539 108.3164 47.1289 108.3467 47.0098 c
111.3652 35.3066 125.1426 30.1328 135.2344 37.5039 C
128.6211 30.002 118.2285 29.8984 109.5127 37.5898 c
109.4219 37.6699 109.2871 37.6738 109.1904 37.5996 c
109.0938 37.5273 109.0635 37.3945 109.1172 37.2871 c
111.7842 31.8789 118.3701 25.4668 127.7227 26.4023 c
136.2793 27.2578 141.2441 35.416 142.2461 42.0938 C
142.8027 33.5723 140.8525 27.5566 133.4922 21.9473 c
133.3955 21.873 133.3652 21.7402 133.4199 21.6309 c
133.4746 21.5234 133.5996 21.4688 133.7168 21.502 c
140.502 23.4629 145.9473 26.9277 148.7656 34.0469 C
148.7656 27.8848 146.627 21.6738 141.2402 17.5352 c
141.1426 17.4609 141.1133 17.3301 141.168 17.2207 c
141.2227 17.1113 141.3467 17.0566 141.4639 17.0898 c
144.917 18.0742 147.6348 19.5781 149.6016 22.2754 C
150.9121 11.1758 156.123 4.58398 162.127 4.58398 c
166.252 4.58398 169.332 7.61719 169.332 12.4551 c
169.332 15.2852 167.8438 19.2578 164.5215 21.4746 c
f
263.748 113.0938 m
260.5859 116.998 254.209 118.4863 247.3164 117.082 C
247.8262 121.3828 246.9824 125.873 245.7051 128.5664 c
245.6523 128.6758 245.5313 128.7334 245.4141 128.7051 c
245.2969 128.6758 245.2168 128.5684 245.2207 128.4473 c
245.5957 119.6807 240.5977 112.6035 231.7715 109.5371 C
238.6777 114.293 240.6973 123.7305 237.4102 128.6035 c
237.3418 128.7021 237.2148 128.7412 237.1035 128.6953 c
236.9922 128.6504 236.9277 128.5332 236.9492 128.416 c
237.3223 126.3555 236.3438 123.7314 234.2363 121.6895 c
231.3301 118.875 227.3867 118.2363 225.4258 120.2598 c
223.4648 122.2852 224.2285 126.207 227.1328 129.0215 c
228.1934 130.0488 229.3926 130.7832 230.582 131.2061 c
230.6953 131.2461 230.7637 131.3594 230.748 131.4775 c
230.7344 131.5967 230.6387 131.6885 230.5195 131.6982 c
224.1309 132.2529 219.75 128.4463 217.0039 123.8203 c
214.209 119.1152 209.4336 115.4102 203.793 116.1504 c
203.6738 116.166 203.5605 116.0957 203.5195 115.9824 c
203.4805 115.8691 203.5254 115.7422 203.6289 115.6807 c
206.4258 113.9961 209.5 113.2969 213.4922 114.6289 C
207.6973 109.7197 199.4453 106.8867 191.6523 109.4014 c
191.543 109.4375 191.4238 109.3945 191.3613 109.2979 c
191.2988 109.2012 191.3105 109.0752 191.3867 108.9902 c
197.2949 102.4258 209.0762 102.2949 216.4961 107.6172 C
213.459 103.3008 209.4277 100.1328 202.2031 99.1387 c
202.0879 99.123 201.998 99.0313 201.9844 98.916 c
201.9727 98.7998 202.0391 98.6904 202.1484 98.6504 c
210.4395 95.5723 218.748 98.6953 225.5938 106.8652 C
222.6016 100.4883 217.6875 95.3809 210.8262 92.8535 c
210.7109 92.8115 210.6426 92.6934 210.6641 92.5742 c
210.6836 92.4531 210.7871 92.3643 210.9082 92.3613 c
214.8516 92.2803 218.3945 93.2188 223.1738 95.9316 C
219.666 90.2422 220.4336 80.293 225.543 73.6738 c
225.6133 73.582 225.7383 73.5498 225.8457 73.5957 c
225.9512 73.6426 226.0137 73.7549 225.9941 73.8691 c
224.8145 81.0703 227.293 89.1992 231.6035 93.5117 C
229.4512 85.8799 231.5977 78.9355 237.5 73.8672 c
237.5703 73.8066 237.6699 73.79 237.7559 73.8232 c
237.8438 73.8564 237.9043 73.9355 237.918 74.0273 c
239.1523 83.4453 249.6875 93.002 258.5195 93.8027 c
258.6445 93.8135 258.7422 93.9141 258.75 94.0381 c
258.7578 94.1621 258.6758 94.2754 258.5527 94.3027 c
254.2734 95.2715 249.8613 94.793 246.1641 93.2715 C
248.8242 96.2051 252.1035 98.3828 255.7188 99.5176 c
255.8359 99.5537 255.9082 99.668 255.8945 99.7891 c
255.8809 99.9102 255.7813 100.0039 255.6602 100.0127 c
251.1504 100.3242 246.7363 99.0068 242.9297 96.4746 C
247.291 103.0957 253.9102 108.0195 262.3574 109.9805 c
262.4785 110.0088 262.5605 110.1191 262.5547 110.2432 c
262.5469 110.3672 262.4512 110.4668 262.3281 110.4805 c
250.4102 111.7822 240.582 107.1621 234.1074 98.5625 C
235.7559 103.4629 240.4727 108.3184 247.0527 111.1816 c
252.8984 113.7266 258.9023 114.1279 263.4746 112.6914 c
263.5801 112.6582 263.6973 112.6982 263.7598 112.791 c
263.8223 112.8828 263.8184 113.0059 263.748 113.0938 c
f
210.8438 37.5215 m
215.6504 48.0078 215.3086 56.207 211.4375 66.5762 c
211.3926 66.6934 211.2715 66.7607 211.1484 66.7363 c
211.0254 66.7109 210.9395 66.5996 210.9453 66.4746 c
211.5664 53.8535 208.1191 44.8203 200.6465 38.668 C
208.8965 48.5195 205 68.2275 191.8242 68.2275 c
182.2393 68.2275 174.3086 60.252 172.3691 50.7031 c
172.3447 50.582 172.4111 50.459 172.5273 50.416 c
172.6426 50.3711 172.7734 50.416 172.8359 50.5215 c
175.6787 55.2832 180.2451 58.373 185.2939 58.373 c
193.4277 58.373 195.834 51.9063 195.834 47.375 c
195.834 41.1875 190.9082 36.0313 187.127 36.0313 c
183.6904 36.0313 182.0869 38.8555 182.0869 40.959 c
182.0869 44.8574 185.085 48.125 188.4629 49.123 c
188.582 49.1582 188.6602 49.2773 188.6426 49.4023 c
188.623 49.5273 188.5176 49.6191 188.3926 49.6211 c
184.2861 49.6465 180.8154 47.7656 178.7627 44.0527 C
178.4932 46.9277 178.4902 48.7383 179.4033 51.7754 c
179.4385 51.8926 179.3848 52.0176 179.2773 52.0742 c
179.168 52.1309 179.0352 52.1016 178.9609 52.0059 c
171.6045 42.6133 175.125 26.3809 180.9404 19.6484 C
175.4082 23.6309 170.5234 32.2813 170.6006 44.041 c
170.6016 44.1641 170.5156 44.2676 170.3955 44.291 c
170.2754 44.3164 170.1563 44.25 170.1113 44.1367 c
166.0029 33.8848 168.1826 14.8887 179.3926 4.28516 C
176.5088 3.88867 173.5254 3.93945 170.2676 4.97852 c
170.1523 5.01367 170.0273 4.96484 169.9688 4.85938 c
169.9102 4.75195 169.9336 4.61914 170.0273 4.54102 c
174.1191 1.08594 179.8418 0 185.2939 0 C
180.5967 5.5 182.1572 16.5547 189.6484 16.5547 c
194.9961 16.5547 197.4238 8.25586 193.2949 3.77344 c
193.2168 3.6875 193.207 3.55859 193.2695 3.46289 c
193.334 3.36523 193.4551 3.32227 193.5664 3.36133 c
198.3457 5.01563 203.5117 9.15039 203.5117 14.377 c
203.5117 19.4199 198.6992 23.7715 191.7109 23.4277 C
200.5293 25.9336 209.7617 23.1602 214.5918 17.1758 c
214.666 17.082 214.7969 17.0547 214.9023 17.1074 c
215.0098 17.1621 215.0645 17.2832 215.0352 17.3984 c
212.2441 28.1152 203.0684 32.5977 191.5957 31.1055 C
200.877 34.8613 214.8457 31.5859 221.0195 23.7949 c
221.0918 23.7031 221.2188 23.6738 221.3262 23.7227 c
221.4316 23.7734 221.4902 23.8906 221.4668 24.0039 c
220.0957 30.6191 216.6035 35.5664 210.8438 37.5215 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.343297 0.001404 0 0 0.615686 0.862745 0.976471 Xa
 0.343297 0.001404 0 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
237.2266 56.8086 m
237.2051 56.6895 237.1016 56.6016 236.9805 56.6016 c
224.0742 56.4648 212.2266 53.334 203.0098 45.0859 C
211.0391 50.6445 225.9512 52.5957 234.5371 48.7051 c
234.6465 48.6543 234.7051 48.5332 234.6777 48.416 c
234.6523 48.2988 234.5449 48.2168 234.4238 48.2188 c
223.7441 48.5098 215.1445 45.2129 208.4395 39.2559 C
215.3086 38.832 221.0137 34.5156 220.9961 29.4102 c
220.9961 29.291 220.9121 29.1875 220.7949 29.1621 c
220.6797 29.1387 220.5605 29.1973 220.5117 29.3066 c
219.3906 31.7949 215.7637 33.0879 211.9297 32.1875 c
207.75 31.2051 204.9297 27.998 205.6289 25.0215 c
206.0996 23.0078 208.0645 21.6191 210.5801 21.2344 c
210.707 21.2148 210.8008 21.1055 210.7969 20.9766 c
210.793 20.8496 210.6953 20.7441 210.5664 20.7305 c
209.498 20.6289 208.3867 20.625 207.25 20.7344 c
200.7598 21.3516 195.7363 25.3281 195.3008 29.9121 C
190.5879 29.3652 186.416 26.7539 184.9229 23.1387 c
184.8779 23.0293 184.7646 22.9668 184.6475 22.9844 c
184.5322 23.002 184.4443 23.0977 184.4346 23.2148 c
184.0576 27.9648 185.6924 31.0527 189.4043 34.0684 C
184.0205 32.0098 177.959 31.9043 172.1484 34.6055 c
172.043 34.6563 171.9844 34.7715 172.0059 34.8867 c
172.0293 35.002 172.1289 35.0859 172.2461 35.0898 c
177.125 35.2793 180.6631 36.8457 183.9795 40.1621 C
165.7227 35.0273 150.8906 46.3633 156.0234 63.2129 c
156.0586 63.3301 156.1699 63.4043 156.291 63.3926 c
156.4121 63.3809 156.5078 63.2852 156.5176 63.1641 c
157.4355 53.4492 164.2207 47.0469 174.3789 46.0879 C
168.9922 48.1465 163.3789 53.0625 162.8223 61.6211 c
162.8145 61.7441 162.8945 61.8535 163.0137 61.8848 c
163.1328 61.9141 163.2559 61.8535 163.3066 61.7422 c
166.1055 55.5879 171.6035 52.4785 177.4668 51.9297 C
171.1328 54.5117 167.0703 60.5332 165.8965 68.3516 c
165.877 68.4746 165.9512 68.5918 166.0703 68.6309 c
166.1875 68.668 166.3164 68.6152 166.373 68.5039 c
170.2383 60.9219 178.5293 55.7109 188.8203 59.6934 c
199.4375 63.8027 204.0938 76.0781 205.123 84.7324 c
205.1387 84.8555 205.2383 84.9492 205.3613 84.957 c
205.4844 84.9629 205.5938 84.8809 205.623 84.7617 c
209.3418 69.0723 202.0391 52.8125 188.9863 45.9219 C
196.082 47.9238 202.4258 52.1816 206.0137 59.2754 C
214.3066 60.293 220.0176 63.1387 222.8711 68.5156 c
222.9277 68.6211 223.0508 68.6738 223.166 68.6406 c
223.2813 68.6055 223.3574 68.4941 223.3477 68.375 c
223.166 66.2656 222.4063 62.0449 219.2734 60.1035 C
226.2383 60.1152 231.7793 59.2109 237.0723 57.0898 c
237.1836 57.0449 237.25 56.9277 237.2266 56.8086 c
f
207.7402 110.2773 m
207.8398 110.2129 207.9688 110.2227 208.0566 110.3047 c
208.1426 110.3848 208.1602 110.5137 208.1016 110.6172 c
206.4824 113.4141 207.9609 117.4297 211.1523 117.4297 c
216.873 117.4297 219.623 106.6602 218.748 96.8379 C
216.5859 102.5918 214.7148 104.8926 211.4004 107.6328 c
211.3066 107.709 211.1719 107.7109 211.0781 107.6328 c
210.9844 107.5566 210.957 107.4238 211.0156 107.3164 c
215.8711 98.2383 216.9121 91.252 216.9121 83.2324 C
215.4492 89.1895 213.7168 92.5527 208.7852 97.6133 c
208.6992 97.7012 208.5625 97.7148 208.4609 97.6445 c
208.3594 97.5742 208.3223 97.4414 208.373 97.3301 c
213.6719 85.7383 213.2676 72.8828 209.3203 63.0664 c
209.2813 62.9688 209.3066 62.8574 209.3828 62.7852 c
209.4609 62.7129 209.5723 62.6973 209.668 62.7422 c
214.873 65.293 217.9316 66.9688 222.4199 73.1328 C
221.0625 80.5313 222.1914 84.1797 225.5918 90.3262 C
221.6543 80.4102 223.75 66.4336 233.7793 60.7363 c
233.8887 60.6738 234.0273 60.7012 234.1035 60.8008 c
234.1816 60.9004 234.1758 61.041 234.0879 61.1328 c
230.3066 65.0879 227.5566 71.7676 229.9316 79.0586 C
228.4023 68.6699 237.5273 59.9453 247.7109 59.9453 c
257.3105 59.9453 263.8613 67.4531 263.3203 74.8848 c
262.7832 82.25 257.877 85.8555 253.6484 87.3828 c
253.5371 87.4238 253.4121 87.3809 253.3496 87.2813 c
253.2852 87.1816 253.2988 87.0508 253.3828 86.9668 c
258.9922 81.2734 259.7598 70.4746 249.7988 67.207 C
255.6582 72.2637 253.4883 84.0352 244.1094 84.9316 c
243.9922 84.9414 243.8828 84.8711 243.8457 84.7598 c
243.8066 84.6504 243.8496 84.5273 243.9492 84.4648 c
245.957 83.1855 247.627 80.6934 247.627 77.8906 c
247.627 73.2168 244.2051 71.3789 241.9512 71.3789 c
238.5293 71.3789 235.6914 74.6348 235.6914 79.5605 c
235.6914 85.4023 240.9512 90.2441 247.7109 90.9941 c
254.3379 91.7305 260.4941 88.8398 263.4609 84.5352 c
263.5313 84.4336 263.6621 84.3984 263.7754 84.4492 c
263.8867 84.5 263.9453 84.623 263.916 84.7422 c
260.8965 96.4453 247.1191 101.6191 237.0273 94.25 C
243.6406 101.75 254.0332 101.8555 262.75 94.1641 c
262.8398 94.084 262.9746 94.0781 263.0723 94.1523 c
263.168 94.2266 263.1992 94.3574 263.1445 94.4668 c
260.4785 99.873 253.8926 106.2852 244.5391 105.3516 c
235.9824 104.4961 231.0176 96.3359 230.0156 89.6602 C
229.459 98.1816 231.4102 104.1953 238.7695 109.8047 c
238.8672 109.8789 238.8965 110.0117 238.8418 110.1211 c
238.7871 110.2305 238.6621 110.2852 238.5449 110.25 c
231.7598 108.291 226.3145 104.8262 223.4961 97.707 C
223.4961 103.8672 225.6348 110.0781 231.0215 114.2168 c
231.1191 114.291 231.1484 114.4238 231.0938 114.5332 c
231.0391 114.6406 230.916 114.6953 230.7988 114.6621 c
227.3457 113.6797 224.627 112.1738 222.6602 109.4785 C
221.3496 120.5781 216.1387 127.168 210.1348 127.168 c
206.0098 127.168 202.9297 124.1348 202.9297 119.2988 c
202.9297 116.4688 204.418 112.4961 207.7402 110.2773 c
f
108.5137 18.6602 m
111.6758 14.7559 118.0527 13.2676 124.9453 14.6719 C
124.4355 10.3691 125.2793 5.88086 126.5566 3.18555 c
126.6094 3.07813 126.7305 3.01953 126.8477 3.04883 c
126.9648 3.07813 127.0449 3.18555 127.041 3.30664 c
126.666 12.0723 131.6641 19.1484 140.4902 22.2148 C
133.584 17.459 131.5645 8.02148 134.8516 3.15039 c
134.9199 3.05078 135.0469 3.01172 135.1582 3.05664 c
135.2695 3.10156 135.334 3.21875 135.3125 3.33789 c
134.9395 5.39844 135.918 8.02148 138.0254 10.0625 c
140.9316 12.877 144.875 13.5156 146.8359 11.4922 c
148.7969 9.4668 148.0332 5.54492 145.1289 2.73242 c
144.0684 1.70508 142.8691 0.96875 141.6797 0.546875 c
141.5664 0.505859 141.498 0.392578 141.5137 0.275391 c
141.5273 0.15625 141.623 0.064453 141.7422 0.054688 c
148.1309 -0.5 152.5117 3.30664 155.2578 7.93164 c
158.0527 12.6367 162.8281 16.3438 168.4688 15.6035 c
168.5879 15.5879 168.7012 15.6582 168.7422 15.7715 c
168.7813 15.8848 168.7363 16.0098 168.6328 16.0723 c
165.8359 17.7559 162.7617 18.4551 158.7695 17.125 C
164.5645 22.0332 172.8164 24.8652 180.6104 22.3516 c
180.7197 22.3164 180.8389 22.3594 180.9014 22.4551 c
180.9639 22.5508 180.9541 22.6777 180.876 22.7637 c
174.9668 29.3281 163.1855 29.459 155.7656 24.1348 C
158.8027 28.4512 162.834 31.6211 170.0586 32.6133 c
170.1738 32.6289 170.2637 32.7227 170.2773 32.8379 c
170.2891 32.9531 170.2227 33.0625 170.1133 33.1035 c
161.8223 36.1797 153.5137 33.0586 146.668 24.8867 C
149.6602 31.2656 154.5742 36.373 161.4355 38.9004 c
161.5508 38.9414 161.6191 39.0586 161.5977 39.1797 c
161.5781 39.3008 161.4746 39.3887 161.3535 39.3906 c
157.4102 39.4727 153.8672 38.5332 149.0879 35.8203 C
152.5957 41.5117 151.8281 51.459 146.7188 58.0801 c
146.6484 58.1719 146.5234 58.2031 146.416 58.1582 c
146.3105 58.1113 146.248 57.998 146.2676 57.8828 c
147.4473 50.6836 144.9688 42.5547 140.6582 38.2422 C
142.8105 45.873 140.6641 52.8184 134.7617 57.8848 c
134.6914 57.9453 134.5918 57.9629 134.5059 57.9297 c
134.418 57.8965 134.3574 57.8184 134.3438 57.7266 c
133.1094 48.3086 122.5742 38.752 113.7422 37.9512 c
113.6172 37.9395 113.5195 37.8398 113.5117 37.7148 c
113.5039 37.5898 113.5859 37.4785 113.709 37.4512 c
117.9883 36.4824 122.4004 36.9609 126.0977 38.4805 C
123.4375 35.5488 120.1582 33.3711 116.543 32.2363 c
116.4258 32.1992 116.3535 32.0859 116.3672 31.9648 c
116.3809 31.8438 116.4805 31.748 116.6016 31.7402 c
121.1113 31.4297 125.5254 32.7461 129.332 35.2793 C
124.9707 28.6582 118.3516 23.7344 109.9043 21.7715 c
109.7832 21.7441 109.7012 21.6328 109.707 21.5098 c
109.7148 21.3867 109.8105 21.2871 109.9336 21.2734 c
121.8516 19.9707 131.6797 24.5918 138.1543 33.1914 C
136.5059 28.2891 131.7891 23.4355 125.209 20.5723 c
119.3633 18.0273 113.3594 17.625 108.7871 19.0625 c
108.6816 19.0957 108.5645 19.0547 108.502 18.9629 c
108.4395 18.8691 108.4434 18.7461 108.5137 18.6602 c
f
161.418 94.2324 m
156.6113 83.7461 156.9531 75.5469 160.8242 65.1777 c
160.8691 65.0605 160.9902 64.9922 161.1133 65.0176 c
161.2363 65.043 161.3223 65.1543 161.3164 65.2773 c
160.6953 77.9004 164.1426 86.9316 171.6152 93.0859 C
163.3652 83.2324 167.2617 63.5254 180.4385 63.5254 c
190.0234 63.5254 197.9531 71.502 199.8926 81.0508 c
199.918 81.1719 199.8516 81.293 199.7344 81.3379 c
199.6191 81.3828 199.4883 81.3379 199.4258 81.2305 c
196.584 76.4688 192.0176 73.3789 186.9688 73.3789 c
178.834 73.3789 176.4277 79.8457 176.4277 84.3789 c
176.4277 90.5645 181.3545 95.7207 185.1357 95.7207 c
188.5723 95.7207 190.1758 92.8984 190.1758 90.7949 c
190.1758 86.8965 187.1777 83.6289 183.8018 82.6309 c
183.6807 82.5938 183.6045 82.4766 183.6221 82.3516 c
183.6396 82.2266 183.7451 82.1328 183.8721 82.1328 c
187.9766 82.1074 191.4473 83.9863 193.5 87.7012 C
193.7695 84.8262 193.7715 83.0156 192.8594 79.9766 c
192.8242 79.8594 192.877 79.7344 192.9844 79.6777 c
193.0938 79.623 193.2266 79.6504 193.3008 79.748 c
200.6582 89.1406 197.1367 105.3711 191.3223 112.1055 C
196.8535 108.123 201.7383 99.4707 201.6621 87.7109 c
201.6602 87.5898 201.7461 87.4844 201.8672 87.4609 c
201.9863 87.4375 202.1055 87.502 202.1504 87.6152 c
206.2598 97.8691 204.0801 116.8633 192.8691 127.4668 C
195.7539 127.8652 198.7363 127.8145 201.9941 126.7754 c
202.1094 126.7383 202.2344 126.7891 202.293 126.8945 c
202.3516 127 202.3281 127.1328 202.2344 127.2109 c
198.1426 130.666 192.4199 131.752 186.9688 131.752 C
191.666 126.252 190.1055 115.1992 182.6162 115.1992 c
177.2656 115.1992 174.8379 123.498 178.9668 127.9805 c
179.0449 128.0664 179.0547 128.1934 178.9922 128.291 c
178.9277 128.3887 178.8066 128.4297 178.6953 128.3926 c
173.916 126.7363 168.75 122.6035 168.75 117.375 c
168.75 112.334 173.5625 107.9805 180.5537 108.3242 C
171.7324 105.8203 162.5 108.5918 157.6699 114.5781 c
157.5957 114.6699 157.4648 114.6992 157.3594 114.6445 c
157.252 114.5918 157.1973 114.4707 157.2266 114.3535 c
160.0176 103.6387 169.1934 99.1543 180.667 100.6484 C
171.3848 96.8906 157.416 100.166 151.2422 107.957 c
151.1699 108.0488 151.043 108.0801 150.9355 108.0293 c
150.8301 107.9805 150.7715 107.8633 150.7949 107.748 c
152.166 101.1328 155.6582 96.1875 161.418 94.2324 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.829862 0.242649 0.080476 0 0.258824 0.494118 Xa
 1 0.829862 0.242649 0.080476 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
26.6963 74.9453 m
26.7178 75.0645 26.8213 75.1504 26.9424 75.1523 c
39.8486 75.2871 51.6963 78.4199 60.9141 86.667 C
52.8838 81.1094 37.9717 79.1563 29.3867 83.0488 c
29.2764 83.0986 29.2178 83.2188 29.2451 83.3369 c
29.2715 83.4551 29.3779 83.5371 29.499 83.5332 c
40.1787 83.2441 48.7783 86.54 55.4834 92.498 C
48.6143 92.9199 42.9092 97.2383 42.9268 102.3428 c
42.9268 102.4619 43.0107 102.5645 43.1279 102.5898 c
43.2441 102.6152 43.3623 102.5547 43.4111 102.4463 c
44.5322 99.957 48.1592 98.666 51.9941 99.5664 c
56.1738 100.5469 58.9941 103.7559 58.2949 106.7314 c
57.8232 108.7461 55.8584 110.1348 53.3428 110.5186 c
53.2158 110.5371 53.123 110.6484 53.126 110.7764 c
53.1299 110.9043 53.2285 111.0098 53.3564 111.0215 c
54.4248 111.124 55.5361 111.1279 56.6738 111.0195 c
63.1641 110.4023 68.1875 106.4238 68.623 101.8418 C
73.3359 102.3887 77.5078 104.998 79.002 108.6152 c
79.0469 108.7236 79.1621 108.7871 79.2773 108.7695 c
79.3926 108.75 79.4805 108.6553 79.4902 108.5391 c
79.8672 103.7871 78.2324 100.7002 74.5195 97.6846 C
79.9043 99.7441 85.9648 99.8496 91.7754 97.1465 c
91.8809 97.0977 91.9395 96.9824 91.918 96.8672 c
91.8945 96.752 91.7949 96.668 91.6777 96.6641 c
86.7988 96.4736 83.2617 94.9082 79.9473 91.5918 C
98.2012 96.7256 113.0332 85.3906 107.9004 68.5391 c
107.8652 68.4238 107.7539 68.3486 107.6328 68.3613 c
107.5117 68.373 107.416 68.4688 107.4063 68.5898 c
106.4883 78.3037 99.7031 84.7051 89.5449 85.666 C
94.9316 83.6055 100.5449 78.6895 101.1016 70.1318 c
101.1094 70.0098 101.0293 69.8984 100.9102 69.8691 c
100.791 69.8398 100.668 69.8984 100.6172 70.0098 c
97.8184 76.1641 92.3203 79.2754 86.457 79.8223 C
92.791 77.2422 96.8535 71.2207 98.0273 63.4023 c
98.0469 63.2793 97.9727 63.1602 97.8535 63.123 c
97.7363 63.084 97.6074 63.1387 97.5508 63.248 c
93.6855 70.8311 85.3945 76.042 75.1035 72.0605 c
64.4863 67.9512 59.8291 55.6738 58.7998 47.0195 c
58.7852 46.8984 58.6846 46.8047 58.5615 46.7969 c
58.4395 46.7891 58.3291 46.8711 58.3008 46.9922 c
54.5811 62.6797 61.8838 78.9414 74.9375 85.832 C
67.8418 83.8291 61.498 79.5723 57.9102 72.4775 C
49.6162 71.459 43.9063 68.6152 41.0527 63.2383 c
40.9961 63.1309 40.8721 63.0781 40.7568 63.1133 c
40.6416 63.1465 40.5654 63.2578 40.5752 63.3789 c
40.7578 65.4883 41.5166 69.709 44.6494 71.6494 C
37.6846 71.6387 32.1436 72.543 26.8506 74.6621 c
26.7393 74.708 26.6738 74.8262 26.6963 74.9453 c
f
56.1826 21.4746 m
56.084 21.541 55.9541 21.5293 55.8672 21.4492 c
55.7813 21.3672 55.7627 21.2383 55.8213 21.1367 c
57.4414 18.3398 55.9619 14.3223 52.7705 14.3223 c
47.0498 14.3223 44.2998 25.0918 45.1748 34.916 C
47.3379 29.1602 49.208 26.8613 52.5225 24.1211 c
52.6162 24.043 52.751 24.043 52.8447 24.1191 c
52.9385 24.1973 52.9658 24.3281 52.9082 24.4355 c
48.0518 33.5156 47.0107 40.502 47.0107 48.5215 C
48.4736 42.5625 50.2061 39.1992 55.1377 34.1406 c
55.2236 34.0527 55.3604 34.0391 55.4629 34.1074 c
55.5645 34.1777 55.6016 34.3105 55.5498 34.4238 c
50.252 46.0137 50.6563 58.8711 54.6025 68.6875 c
54.6416 68.7852 54.6172 68.8965 54.54 68.9688 c
54.4629 69.0391 54.3506 69.0566 54.2549 69.0098 c
49.0498 66.459 45.9912 64.7832 41.5029 58.6211 C
42.8604 51.2227 41.7314 47.5723 38.3311 41.4258 C
42.2686 51.3438 40.1729 65.3203 30.1436 71.0176 c
30.0342 71.0791 29.8955 71.0518 29.8193 70.9531 c
29.7412 70.8535 29.748 70.7119 29.835 70.6211 c
33.6162 66.666 36.3662 59.9863 33.9912 52.6934 C
35.5205 63.082 26.3955 71.8086 16.2119 71.8086 c
6.6123 71.8086 0.061523 64.2988 0.602539 56.8672 c
1.13965 49.502 6.0459 45.8984 10.2744 44.3691 c
10.3857 44.3301 10.5107 44.3711 10.5742 44.4707 c
10.6377 44.5723 10.624 44.7012 10.541 44.7871 c
4.93066 50.4785 4.16309 61.2793 14.124 64.5469 C
8.26465 59.4902 10.4346 47.7168 19.8135 46.8223 c
19.9307 46.8105 20.04 46.8809 20.0781 46.9922 c
20.1162 47.1035 20.0732 47.2266 19.9746 47.2891 c
17.9658 48.5664 16.2959 51.0605 16.2959 53.8633 c
16.2959 58.5371 19.7178 60.373 21.9717 60.373 c
25.3936 60.373 28.2314 57.1172 28.2314 52.1934 c
28.2314 46.3496 22.9717 41.5098 16.2119 40.7578 c
9.58594 40.0234 3.42969 42.9121 0.461914 47.2168 c
0.392578 47.3184 0.260742 47.3555 0.148438 47.3047 c
0.036133 47.2539 -0.022461 47.1289 0.007813 47.0098 c
3.02637 35.3066 16.8037 30.1328 26.8955 37.5039 C
20.2822 30.002 9.88965 29.8984 1.17383 37.5898 c
1.08301 37.6699 0.948242 37.6738 0.851563 37.5996 c
0.754883 37.5273 0.724609 37.3945 0.77832 37.2871 c
3.44531 31.8789 10.0313 25.4668 19.3838 26.4023 c
27.9404 27.2578 32.9053 35.416 33.9072 42.0938 C
34.4639 33.5723 32.5137 27.5566 25.1533 21.9473 c
25.0566 21.873 25.0264 21.7402 25.0811 21.6309 c
25.1357 21.5234 25.2607 21.4688 25.3779 21.502 c
32.1631 23.4629 37.6084 26.9277 40.4268 34.0469 C
40.4268 27.8848 38.2881 21.6738 32.9014 17.5352 c
32.8037 17.4609 32.7744 17.3301 32.8291 17.2207 c
32.8838 17.1113 33.0078 17.0566 33.125 17.0898 c
36.5781 18.0742 39.2959 19.5781 41.2627 22.2754 C
42.5732 11.1758 47.7842 4.58398 53.7881 4.58398 c
57.9131 4.58398 60.9932 7.61719 60.9932 12.4551 c
60.9932 15.2852 59.5049 19.2578 56.1826 21.4746 c
f
155.4102 113.0938 m
152.248 116.998 145.8711 118.4863 138.9785 117.082 C
139.4883 121.3828 138.6445 125.873 137.3672 128.5664 c
137.3145 128.6758 137.1934 128.7334 137.0762 128.7051 c
136.959 128.6758 136.8789 128.5684 136.8828 128.4473 c
137.2578 119.6807 132.2598 112.6035 123.4336 109.5371 C
130.3398 114.293 132.3594 123.7305 129.0723 128.6035 c
129.0039 128.7021 128.877 128.7412 128.7656 128.6953 c
128.6543 128.6504 128.5898 128.5332 128.6113 128.416 c
128.9844 126.3555 128.0059 123.7314 125.8984 121.6895 c
122.9922 118.875 119.0488 118.2363 117.0879 120.2598 c
115.127 122.2852 115.8906 126.207 118.7949 129.0215 c
119.8555 130.0488 121.0547 130.7832 122.2441 131.2061 c
122.3574 131.2461 122.4258 131.3594 122.4102 131.4775 c
122.3965 131.5967 122.3008 131.6885 122.1816 131.6982 c
115.793 132.2529 111.4121 128.4463 108.666 123.8203 c
105.8711 119.1152 101.0957 115.4102 95.4551 116.1504 c
95.3359 116.166 95.2227 116.0957 95.1816 115.9824 c
95.1426 115.8691 95.1875 115.7422 95.291 115.6807 c
98.0879 113.9961 101.1621 113.2969 105.1543 114.6289 C
99.3594 109.7197 91.1074 106.8867 83.3145 109.4014 c
83.2051 109.4375 83.0859 109.3945 83.0234 109.2979 c
82.9609 109.2012 82.9727 109.0752 83.0488 108.9902 c
88.957 102.4258 100.7383 102.2949 108.1582 107.6172 C
105.1211 103.3008 101.0898 100.1328 93.8652 99.1387 c
93.75 99.123 93.6602 99.0313 93.6465 98.916 c
93.6348 98.7998 93.7012 98.6904 93.8105 98.6504 c
102.1016 95.5723 110.4102 98.6953 117.2559 106.8652 C
114.2637 100.4883 109.3496 95.3809 102.4883 92.8535 c
102.373 92.8115 102.3047 92.6934 102.3262 92.5742 c
102.3457 92.4531 102.4492 92.3643 102.5703 92.3613 c
106.5137 92.2803 110.0566 93.2188 114.8359 95.9316 C
111.3281 90.2422 112.0957 80.293 117.2051 73.6738 c
117.2754 73.582 117.4004 73.5498 117.5078 73.5957 c
117.6133 73.6426 117.6758 73.7549 117.6563 73.8691 c
116.4766 81.0703 118.9551 89.1992 123.2656 93.5117 C
121.1133 85.8799 123.2598 78.9355 129.1621 73.8672 c
129.2324 73.8066 129.332 73.79 129.418 73.8232 c
129.5059 73.8564 129.5664 73.9355 129.5801 74.0273 c
130.8145 83.4453 141.3496 93.002 150.1816 93.8027 c
150.3066 93.8135 150.4043 93.9141 150.4121 94.0381 c
150.4199 94.1621 150.3379 94.2754 150.2148 94.3027 c
145.9355 95.2715 141.5234 94.793 137.8262 93.2715 C
140.4863 96.2051 143.7656 98.3828 147.3809 99.5176 c
147.498 99.5537 147.5703 99.668 147.5566 99.7891 c
147.543 99.9102 147.4434 100.0039 147.3223 100.0127 c
142.8125 100.3242 138.3984 99.0068 134.5918 96.4746 C
138.9531 103.0957 145.5723 108.0195 154.0195 109.9805 c
154.1406 110.0088 154.2227 110.1191 154.2168 110.2432 c
154.209 110.3672 154.1133 110.4668 153.9902 110.4805 c
142.0723 111.7822 132.2441 107.1621 125.7695 98.5625 C
127.418 103.4629 132.1348 108.3184 138.7148 111.1816 c
144.5605 113.7266 150.5645 114.1279 155.1367 112.6914 c
155.2422 112.6582 155.3594 112.6982 155.4219 112.791 c
155.4844 112.8828 155.4805 113.0059 155.4102 113.0938 c
f
102.5059 37.5215 m
107.3125 48.0078 106.9707 56.207 103.0996 66.5762 c
103.0547 66.6934 102.9336 66.7607 102.8105 66.7363 c
102.6875 66.7109 102.6016 66.5996 102.6074 66.4746 c
103.2285 53.8535 99.7813 44.8203 92.3086 38.668 C
100.5586 48.5195 96.6621 68.2275 83.4863 68.2275 c
73.9004 68.2275 65.9697 60.252 64.0303 50.7031 c
64.0059 50.582 64.0723 50.459 64.1885 50.416 c
64.3037 50.3711 64.4346 50.416 64.4971 50.5215 c
67.3398 55.2832 71.9063 58.373 76.9551 58.373 c
85.0898 58.373 87.4961 51.9063 87.4961 47.375 c
87.4961 41.1875 82.5703 36.0313 78.7891 36.0313 c
75.3516 36.0313 73.748 38.8555 73.748 40.959 c
73.748 44.8574 76.7461 48.125 80.125 49.123 c
80.2441 49.1582 80.3223 49.2773 80.3047 49.4023 c
80.2852 49.5273 80.1797 49.6191 80.0547 49.6211 c
75.9473 49.6465 72.4766 47.7656 70.4238 44.0527 C
70.1543 46.9277 70.1514 48.7383 71.0645 51.7754 c
71.0996 51.8926 71.0459 52.0176 70.9385 52.0742 c
70.8291 52.1309 70.6963 52.1016 70.6221 52.0059 c
63.2656 42.6133 66.7861 26.3809 72.6016 19.6484 C
67.0693 23.6309 62.1846 32.2813 62.2617 44.041 c
62.2627 44.1641 62.1768 44.2676 62.0566 44.291 c
61.9365 44.3164 61.8174 44.25 61.7725 44.1367 c
57.6641 33.8848 59.8438 14.8887 71.0537 4.28516 C
68.1699 3.88867 65.1865 3.93945 61.9287 4.97852 c
61.8135 5.01367 61.6885 4.96484 61.6299 4.85938 c
61.5713 4.75195 61.5947 4.61914 61.6885 4.54102 c
65.7803 1.08594 71.5029 0 76.9551 0 C
72.2578 5.5 73.8184 16.5547 81.3105 16.5547 c
86.6582 16.5547 89.0859 8.25586 84.957 3.77344 c
84.8789 3.6875 84.8691 3.55859 84.9316 3.46289 c
84.9961 3.36523 85.1172 3.32227 85.2285 3.36133 c
90.0078 5.01563 95.1738 9.15039 95.1738 14.377 c
95.1738 19.4199 90.3613 23.7715 83.373 23.4277 C
92.1914 25.9336 101.4238 23.1602 106.2539 17.1758 c
106.3281 17.082 106.459 17.0547 106.5645 17.1074 c
106.6719 17.1621 106.7266 17.2832 106.6973 17.3984 c
103.9063 28.1152 94.7305 32.5977 83.2578 31.1055 C
92.5391 34.8613 106.5078 31.5859 112.6816 23.7949 c
112.7539 23.7031 112.8809 23.6738 112.9883 23.7227 c
113.0938 23.7734 113.1523 23.8906 113.1289 24.0039 c
111.7578 30.6191 108.2656 35.5664 102.5059 37.5215 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.343297 0.001404 0 0 0.615686 0.862745 0.976471 Xa
 0.343297 0.001404 0 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
128.8887 56.8086 m
128.8672 56.6895 128.7637 56.6016 128.6426 56.6016 c
115.7363 56.4648 103.8887 53.334 94.6719 45.0859 C
102.7012 50.6445 117.6133 52.5957 126.1992 48.7051 c
126.3086 48.6543 126.3672 48.5332 126.3398 48.416 c
126.3145 48.2988 126.207 48.2168 126.0859 48.2188 c
115.4063 48.5098 106.8066 45.2129 100.1016 39.2559 C
106.9707 38.832 112.6758 34.5156 112.6582 29.4102 c
112.6582 29.291 112.5742 29.1875 112.457 29.1621 c
112.3418 29.1387 112.2227 29.1973 112.1738 29.3066 c
111.0527 31.7949 107.4258 33.0879 103.5918 32.1875 c
99.4121 31.2051 96.5918 27.998 97.291 25.0215 c
97.7617 23.0078 99.7266 21.6191 102.2422 21.2344 c
102.3691 21.2148 102.4629 21.1055 102.459 20.9766 c
102.4551 20.8496 102.3574 20.7441 102.2285 20.7305 c
101.1602 20.6289 100.0488 20.625 98.9121 20.7344 c
92.4219 21.3516 87.3984 25.3281 86.9629 29.9121 C
82.25 29.3652 78.0781 26.7539 76.584 23.1387 c
76.5391 23.0293 76.4258 22.9668 76.3086 22.9844 c
76.1934 23.002 76.1055 23.0977 76.0957 23.2148 c
75.7188 27.9648 77.3535 31.0527 81.0664 34.0684 C
75.6816 32.0098 69.6201 31.9043 63.8096 34.6055 c
63.7041 34.6563 63.6455 34.7715 63.667 34.8867 c
63.6904 35.002 63.79 35.0859 63.9072 35.0898 c
68.7861 35.2793 72.3242 36.8457 75.6406 40.1621 C
57.3838 35.0273 42.5518 46.3633 47.6846 63.2129 c
47.7197 63.3301 47.8311 63.4043 47.9521 63.3926 c
48.0732 63.3809 48.1689 63.2852 48.1787 63.1641 c
49.0967 53.4492 55.8818 47.0469 66.04 46.0879 C
60.6533 48.1465 55.04 53.0625 54.4834 61.6211 c
54.4756 61.7441 54.5557 61.8535 54.6748 61.8848 c
54.7939 61.9141 54.917 61.8535 54.9678 61.7422 c
57.7666 55.5879 63.2646 52.4785 69.1279 51.9297 C
62.7939 54.5117 58.7314 60.5332 57.5576 68.3516 c
57.5381 68.4746 57.6123 68.5918 57.7314 68.6309 c
57.8486 68.668 57.9775 68.6152 58.0342 68.5039 c
61.8994 60.9219 70.1904 55.7109 80.4824 59.6934 c
91.0996 63.8027 95.7559 76.0781 96.7852 84.7324 c
96.8008 84.8555 96.9004 84.9492 97.0234 84.957 c
97.1465 84.9629 97.2559 84.8809 97.2852 84.7617 c
101.0039 69.0723 93.7012 52.8125 80.6484 45.9219 C
87.7441 47.9238 94.0879 52.1816 97.6758 59.2754 C
105.9688 60.293 111.6797 63.1387 114.5332 68.5156 c
114.5898 68.6211 114.7129 68.6738 114.8281 68.6406 c
114.9434 68.6055 115.0195 68.4941 115.0098 68.375 c
114.8281 66.2656 114.0684 62.0449 110.9355 60.1035 C
117.9004 60.1152 123.4414 59.2109 128.7344 57.0898 c
128.8457 57.0449 128.9121 56.9277 128.8887 56.8086 c
f
99.4023 110.2773 m
99.502 110.2129 99.6309 110.2227 99.7188 110.3047 c
99.8047 110.3848 99.8223 110.5137 99.7637 110.6172 c
98.1445 113.4141 99.623 117.4297 102.8145 117.4297 c
108.5352 117.4297 111.2852 106.6602 110.4102 96.8379 C
108.248 102.5918 106.377 104.8926 103.0625 107.6328 c
102.9688 107.709 102.834 107.7109 102.7402 107.6328 c
102.6465 107.5566 102.6191 107.4238 102.6777 107.3164 c
107.5332 98.2383 108.5742 91.252 108.5742 83.2324 C
107.1113 89.1895 105.3789 92.5527 100.4473 97.6133 c
100.3613 97.7012 100.2246 97.7148 100.123 97.6445 c
100.0215 97.5742 99.9844 97.4414 100.0352 97.3301 c
105.334 85.7383 104.9297 72.8828 100.9824 63.0664 c
100.9434 62.9688 100.9688 62.8574 101.0449 62.7852 c
101.123 62.7129 101.2344 62.6973 101.3301 62.7422 c
106.5352 65.293 109.5938 66.9688 114.082 73.1328 C
112.7246 80.5313 113.8535 84.1797 117.2539 90.3262 C
113.3164 80.4102 115.4121 66.4336 125.4414 60.7363 c
125.5508 60.6738 125.6895 60.7012 125.7656 60.8008 c
125.8438 60.9004 125.8379 61.041 125.75 61.1328 c
121.9688 65.0879 119.2188 71.7676 121.5938 79.0586 C
120.0645 68.6699 129.1895 59.9453 139.373 59.9453 c
148.9727 59.9453 155.5234 67.4531 154.9824 74.8848 c
154.4453 82.25 149.5391 85.8555 145.3105 87.3828 c
145.1992 87.4238 145.0742 87.3809 145.0117 87.2813 c
144.9473 87.1816 144.9609 87.0508 145.0449 86.9668 c
150.6543 81.2734 151.4219 70.4746 141.4609 67.207 C
147.3203 72.2637 145.1504 84.0352 135.7715 84.9316 c
135.6543 84.9414 135.5449 84.8711 135.5078 84.7598 c
135.4688 84.6504 135.5117 84.5273 135.6113 84.4648 c
137.6191 83.1855 139.2891 80.6934 139.2891 77.8906 c
139.2891 73.2168 135.8672 71.3789 133.6133 71.3789 c
130.1914 71.3789 127.3535 74.6348 127.3535 79.5605 c
127.3535 85.4023 132.6133 90.2441 139.373 90.9941 c
146 91.7305 152.1563 88.8398 155.123 84.5352 c
155.1934 84.4336 155.3242 84.3984 155.4375 84.4492 c
155.5488 84.5 155.6074 84.623 155.5781 84.7422 c
152.5586 96.4453 138.7813 101.6191 128.6895 94.25 C
135.3027 101.75 145.6953 101.8555 154.4121 94.1641 c
154.502 94.084 154.6367 94.0781 154.7344 94.1523 c
154.8301 94.2266 154.8613 94.3574 154.8066 94.4668 c
152.1406 99.873 145.5547 106.2852 136.2012 105.3516 c
127.6445 104.4961 122.6797 96.3359 121.6777 89.6602 C
121.1211 98.1816 123.0723 104.1953 130.4316 109.8047 c
130.5293 109.8789 130.5586 110.0117 130.5039 110.1211 c
130.4492 110.2305 130.3242 110.2852 130.207 110.25 c
123.4219 108.291 117.9766 104.8262 115.1582 97.707 C
115.1582 103.8672 117.2969 110.0781 122.6836 114.2168 c
122.7813 114.291 122.8105 114.4238 122.7559 114.5332 c
122.7012 114.6406 122.5781 114.6953 122.4609 114.6621 c
119.0078 113.6797 116.2891 112.1738 114.3223 109.4785 C
113.0117 120.5781 107.8008 127.168 101.7969 127.168 c
97.6719 127.168 94.5918 124.1348 94.5918 119.2988 c
94.5918 116.4688 96.0801 112.4961 99.4023 110.2773 c
f
0.174805 18.6602 m
3.33691 14.7559 9.71387 13.2676 16.6064 14.6719 C
16.0967 10.3691 16.9404 5.88086 18.2178 3.18555 c
18.2705 3.07813 18.3916 3.01953 18.5088 3.04883 c
18.626 3.07813 18.7061 3.18555 18.7021 3.30664 c
18.3271 12.0723 23.3252 19.1484 32.1514 22.2148 C
25.2451 17.459 23.2256 8.02148 26.5127 3.15039 c
26.5811 3.05078 26.708 3.01172 26.8193 3.05664 c
26.9307 3.10156 26.9951 3.21875 26.9736 3.33789 c
26.6006 5.39844 27.5791 8.02148 29.6865 10.0625 c
32.5928 12.877 36.5361 13.5156 38.4971 11.4922 c
40.458 9.4668 39.6943 5.54492 36.79 2.73242 c
35.7295 1.70508 34.5303 0.96875 33.3408 0.546875 c
33.2275 0.505859 33.1592 0.392578 33.1748 0.275391 c
33.1885 0.15625 33.2842 0.064453 33.4033 0.054688 c
39.792 -0.5 44.1729 3.30664 46.9189 7.93164 c
49.7139 12.6367 54.4893 16.3438 60.1299 15.6035 c
60.249 15.5879 60.3623 15.6582 60.4033 15.7715 c
60.4424 15.8848 60.3975 16.0098 60.2939 16.0723 c
57.4971 17.7559 54.4229 18.4551 50.4307 17.125 C
56.2256 22.0332 64.4775 24.8652 72.2715 22.3516 c
72.3809 22.3164 72.5 22.3594 72.5625 22.4551 c
72.625 22.5508 72.6152 22.6777 72.5371 22.7637 c
66.6279 29.3281 54.8467 29.459 47.4268 24.1348 C
50.4639 28.4512 54.4951 31.6211 61.7197 32.6133 c
61.835 32.6289 61.9248 32.7227 61.9385 32.8379 c
61.9502 32.9531 61.8838 33.0625 61.7744 33.1035 c
53.4834 36.1797 45.1748 33.0586 38.3291 24.8867 C
41.3213 31.2656 46.2354 36.373 53.0967 38.9004 c
53.2119 38.9414 53.2803 39.0586 53.2588 39.1797 c
53.2393 39.3008 53.1357 39.3887 53.0146 39.3906 c
49.0713 39.4727 45.5283 38.5332 40.749 35.8203 C
44.2568 41.5117 43.4893 51.459 38.3799 58.0801 c
38.3096 58.1719 38.1846 58.2031 38.0771 58.1582 c
37.9717 58.1113 37.9092 57.998 37.9287 57.8828 c
39.1084 50.6836 36.6299 42.5547 32.3193 38.2422 C
34.4717 45.873 32.3252 52.8184 26.4229 57.8848 c
26.3525 57.9453 26.2529 57.9629 26.167 57.9297 c
26.0791 57.8965 26.0186 57.8184 26.0049 57.7266 c
24.7705 48.3086 14.2354 38.752 5.40332 37.9512 c
5.27832 37.9395 5.18066 37.8398 5.17285 37.7148 c
5.16504 37.5898 5.24707 37.4785 5.37012 37.4512 c
9.64941 36.4824 14.0615 36.9609 17.7588 38.4805 C
15.0986 35.5488 11.8193 33.3711 8.2041 32.2363 c
8.08691 32.1992 8.01465 32.0859 8.02832 31.9648 c
8.04199 31.8438 8.1416 31.748 8.2627 31.7402 c
12.7725 31.4297 17.1865 32.7461 20.9932 35.2793 C
16.6318 28.6582 10.0127 23.7344 1.56543 21.7715 c
1.44434 21.7441 1.3623 21.6328 1.36816 21.5098 c
1.37598 21.3867 1.47168 21.2871 1.59473 21.2734 c
13.5127 19.9707 23.3408 24.5918 29.8154 33.1914 C
28.167 28.2891 23.4502 23.4355 16.8701 20.5723 c
11.0244 18.0273 5.02051 17.625 0.448242 19.0625 c
0.342773 19.0957 0.225586 19.0547 0.163086 18.9629 c
0.100586 18.8691 0.104492 18.7461 0.174805 18.6602 c
f
53.0791 94.2324 m
48.2725 83.7461 48.6143 75.5469 52.4854 65.1777 c
52.5303 65.0605 52.6514 64.9922 52.7744 65.0176 c
52.8975 65.043 52.9834 65.1543 52.9775 65.2773 c
52.3564 77.9004 55.8037 86.9316 63.2764 93.0859 C
55.0264 83.2324 58.9229 63.5254 72.0996 63.5254 c
81.6855 63.5254 89.6152 71.502 91.5547 81.0508 c
91.5801 81.1719 91.5137 81.293 91.3965 81.3379 c
91.2813 81.3828 91.1504 81.3379 91.0879 81.2305 c
88.2461 76.4688 83.6797 73.3789 78.6309 73.3789 c
70.4951 73.3789 68.0889 79.8457 68.0889 84.3789 c
68.0889 90.5645 73.0156 95.7207 76.7969 95.7207 c
80.2344 95.7207 81.8379 92.8984 81.8379 90.7949 c
81.8379 86.8965 78.8398 83.6289 75.4629 82.6309 c
75.3418 82.5938 75.2656 82.4766 75.2832 82.3516 c
75.3008 82.2266 75.4063 82.1328 75.5332 82.1328 c
79.6387 82.1074 83.1094 83.9863 85.1621 87.7012 C
85.4316 84.8262 85.4336 83.0156 84.5215 79.9766 c
84.4863 79.8594 84.5391 79.7344 84.6465 79.6777 c
84.7559 79.623 84.8887 79.6504 84.9629 79.748 c
92.3203 89.1406 88.7988 105.3711 82.9844 112.1055 C
88.5156 108.123 93.4004 99.4707 93.3242 87.7109 c
93.3223 87.5898 93.4082 87.4844 93.5293 87.4609 c
93.6484 87.4375 93.7676 87.502 93.8125 87.6152 c
97.9219 97.8691 95.7422 116.8633 84.5313 127.4668 C
87.416 127.8652 90.3984 127.8145 93.6563 126.7754 c
93.7715 126.7383 93.8965 126.7891 93.9551 126.8945 c
94.0137 127 93.9902 127.1328 93.8965 127.2109 c
89.8047 130.666 84.082 131.752 78.6309 131.752 C
83.3281 126.252 81.7676 115.1992 74.2773 115.1992 c
68.9268 115.1992 66.499 123.498 70.6279 127.9805 c
70.7061 128.0664 70.7158 128.1934 70.6533 128.291 c
70.5889 128.3887 70.4678 128.4297 70.3564 128.3926 c
65.5771 126.7363 60.4111 122.6035 60.4111 117.375 c
60.4111 112.334 65.2236 107.9805 72.2148 108.3242 C
63.3936 105.8203 54.1611 108.5918 49.3311 114.5781 c
49.2568 114.6699 49.126 114.6992 49.0205 114.6445 c
48.9131 114.5918 48.8584 114.4707 48.8877 114.3535 c
51.6787 103.6387 60.8545 99.1543 72.3281 100.6484 C
63.0459 96.8906 49.0771 100.166 42.9033 107.957 c
42.8311 108.0488 42.7041 108.0801 42.5967 108.0293 c
42.4912 107.9805 42.4326 107.8633 42.4561 107.748 c
43.8271 101.1328 47.3193 96.1875 53.0791 94.2324 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.829862 0.242649 0.080476 0 0.258824 0.494118 Xa
 1 0.829862 0.242649 0.080476 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
135.0352 184.5869 m
135.0566 184.7061 135.1602 184.792 135.2813 184.7939 c
148.1875 184.9287 160.0352 188.0615 169.2529 196.3086 C
161.2227 190.751 146.3105 188.7979 137.7256 192.6904 c
137.6152 192.7402 137.5566 192.8604 137.584 192.9785 c
137.6104 193.0967 137.7168 193.1787 137.8379 193.1748 c
148.5176 192.8857 157.1172 196.1816 163.8223 202.1396 C
156.9531 202.5615 151.248 206.8799 151.2656 211.9844 c
151.2656 212.1035 151.3496 212.2061 151.4668 212.2314 c
151.583 212.2568 151.7012 212.1963 151.75 212.0879 c
152.8711 209.5986 156.498 208.3076 160.333 209.208 c
164.5127 210.1885 167.333 213.3975 166.6338 216.373 c
166.1621 218.3877 164.1973 219.7764 161.6816 220.1602 c
161.5547 220.1787 161.4619 220.29 161.4648 220.418 c
161.4688 220.5459 161.5674 220.6514 161.6953 220.6631 c
162.7637 220.7656 163.875 220.7695 165.0127 220.6611 c
171.5029 220.0439 176.5264 216.0654 176.9619 211.4834 C
181.6748 212.0303 185.8457 214.6396 187.3398 218.2568 c
187.3848 218.3652 187.5 218.4287 187.6152 218.4111 c
187.7305 218.3916 187.8184 218.2969 187.8281 218.1807 c
188.2051 213.4287 186.5703 210.3418 182.8584 207.3262 C
188.2422 209.3857 194.3027 209.4912 200.1133 206.7881 c
200.2188 206.7393 200.2773 206.624 200.2559 206.5088 c
200.2324 206.3936 200.1328 206.3096 200.0156 206.3057 c
195.1367 206.1152 191.5996 204.5498 188.2852 201.2334 C
206.5391 206.3672 221.3711 195.0322 216.2383 178.1807 c
216.2031 178.0654 216.0918 177.9902 215.9707 178.0029 c
215.8496 178.0146 215.7539 178.1104 215.7441 178.2314 c
214.8262 187.9453 208.041 194.3467 197.8828 195.3076 C
203.2695 193.2471 208.8828 188.3311 209.4395 179.7734 c
209.4473 179.6514 209.3672 179.54 209.248 179.5107 c
209.1289 179.4814 209.0059 179.54 208.9551 179.6514 c
206.1563 185.8057 200.6582 188.917 194.7949 189.4639 C
201.1289 186.8838 205.1914 180.8623 206.3652 173.0439 c
206.3848 172.9209 206.3105 172.8018 206.1914 172.7646 c
206.0742 172.7256 205.9453 172.7803 205.8887 172.8896 c
202.0234 180.4727 193.7324 185.6836 183.4424 181.7021 c
172.8252 177.5928 168.168 165.3154 167.1387 156.6611 c
167.124 156.54 167.0234 156.4463 166.9004 156.4385 c
166.7783 156.4307 166.668 156.5127 166.6396 156.6338 c
162.9199 172.3213 170.2227 188.583 183.2764 195.4736 C
176.1807 193.4707 169.8369 189.2139 166.249 182.1191 C
157.9551 181.1006 152.2451 178.2568 149.3916 172.8799 c
149.335 172.7725 149.2109 172.7197 149.0957 172.7549 c
148.9805 172.7881 148.9043 172.8994 148.9141 173.0205 c
149.0967 175.1299 149.8555 179.3506 152.9883 181.291 C
146.0234 181.2803 140.4824 182.1846 135.1895 184.3037 c
135.0781 184.3496 135.0127 184.4678 135.0352 184.5869 c
f
164.5215 131.1162 m
164.4229 131.1826 164.293 131.1709 164.2061 131.0908 c
164.1201 131.0088 164.1016 130.8799 164.1602 130.7783 c
165.7803 127.9814 164.3008 123.9639 161.1094 123.9639 c
155.3887 123.9639 152.6387 134.7334 153.5137 144.5576 C
155.6768 138.8018 157.5469 136.5029 160.8613 133.7627 c
160.9551 133.6846 161.0898 133.6846 161.1836 133.7607 c
161.2773 133.8389 161.3047 133.9697 161.2471 134.0771 c
156.3906 143.1572 155.3496 150.1436 155.3496 158.1631 C
156.8125 152.2041 158.5449 148.8408 163.4766 143.7822 c
163.5625 143.6943 163.6992 143.6807 163.8018 143.749 c
163.9033 143.8193 163.9404 143.9521 163.8887 144.0654 c
158.5908 155.6553 158.9951 168.5127 162.9414 178.3291 c
162.9805 178.4268 162.9561 178.5381 162.8789 178.6104 c
162.8018 178.6807 162.6895 178.6982 162.5938 178.6514 c
157.3887 176.1006 154.3301 174.4248 149.8418 168.2627 C
151.1992 160.8643 150.0703 157.2139 146.6699 151.0674 C
150.6074 160.9854 148.5117 174.9619 138.4824 180.6592 c
138.373 180.7207 138.2344 180.6934 138.1582 180.5947 c
138.0801 180.4951 138.0869 180.3535 138.1738 180.2627 c
141.9551 176.3076 144.7051 169.6279 142.3301 162.335 C
143.8594 172.7236 134.7344 181.4502 124.5508 181.4502 c
114.9512 181.4502 108.4004 173.9404 108.9414 166.5088 c
109.4785 159.1436 114.3848 155.54 118.6133 154.0107 c
118.7246 153.9717 118.8496 154.0127 118.9131 154.1123 c
118.9766 154.2139 118.9629 154.3428 118.8799 154.4287 c
113.2695 160.1201 112.502 170.9209 122.4629 174.1885 C
116.6035 169.1318 118.7734 157.3584 128.1523 156.4639 c
128.2695 156.4521 128.3789 156.5225 128.417 156.6338 c
128.4551 156.7451 128.4121 156.8682 128.3135 156.9307 c
126.3047 158.208 124.6348 160.7021 124.6348 163.5049 c
124.6348 168.1787 128.0566 170.0146 130.3105 170.0146 c
133.7324 170.0146 136.5703 166.7588 136.5703 161.835 c
136.5703 155.9912 131.3105 151.1514 124.5508 150.3994 c
117.9248 149.665 111.7686 152.5537 108.8008 156.8584 c
108.7314 156.96 108.5996 156.9971 108.4873 156.9463 c
108.375 156.8955 108.3164 156.7705 108.3467 156.6514 c
111.3652 144.9482 125.1426 139.7744 135.2344 147.1455 C
128.6211 139.6436 118.2285 139.54 109.5127 147.2314 c
109.4219 147.3115 109.2871 147.3154 109.1904 147.2412 c
109.0938 147.1689 109.0635 147.0361 109.1172 146.9287 c
111.7842 141.5205 118.3701 135.1084 127.7227 136.0439 c
136.2793 136.8994 141.2441 145.0576 142.2461 151.7354 C
142.8027 143.2139 140.8525 137.1982 133.4922 131.5889 c
133.3955 131.5146 133.3652 131.3818 133.4199 131.2725 c
133.4746 131.165 133.5996 131.1104 133.7168 131.1436 c
140.502 133.1045 145.9473 136.5693 148.7656 143.6885 C
148.7656 137.5264 146.627 131.3154 141.2402 127.1768 c
141.1426 127.1025 141.1133 126.9717 141.168 126.8623 c
141.2227 126.7529 141.3467 126.6982 141.4639 126.7314 c
144.917 127.7158 147.6348 129.2197 149.6016 131.917 C
150.9121 120.8174 156.123 114.2256 162.127 114.2256 c
166.252 114.2256 169.332 117.2588 169.332 122.0967 c
169.332 124.9268 167.8438 128.8994 164.5215 131.1162 c
f
263.748 222.7354 m
260.5859 226.6396 254.209 228.1279 247.3164 226.7236 C
247.8262 231.0244 246.9824 235.5146 245.7051 238.208 c
245.6523 238.3174 245.5313 238.375 245.4141 238.3467 c
245.2969 238.3174 245.2168 238.21 245.2207 238.0889 c
245.5957 229.3223 240.5977 222.2451 231.7715 219.1787 C
238.6777 223.9346 240.6973 233.3721 237.4102 238.2451 c
237.3418 238.3438 237.2148 238.3828 237.1035 238.3369 c
236.9922 238.292 236.9277 238.1748 236.9492 238.0576 c
237.3223 235.9971 236.3438 233.373 234.2363 231.3311 c
231.3301 228.5166 227.3867 227.8779 225.4258 229.9014 c
223.4648 231.9268 224.2285 235.8486 227.1328 238.6631 c
228.1934 239.6904 229.3926 240.4248 230.582 240.8477 c
230.6953 240.8877 230.7637 241.001 230.748 241.1191 c
230.7344 241.2383 230.6387 241.3301 230.5195 241.3398 c
224.1309 241.8945 219.75 238.0879 217.0039 233.4619 c
214.209 228.7568 209.4336 225.0518 203.793 225.792 c
203.6738 225.8076 203.5605 225.7373 203.5195 225.624 c
203.4805 225.5107 203.5254 225.3838 203.6289 225.3223 c
206.4258 223.6377 209.5 222.9385 213.4922 224.2705 C
207.6973 219.3613 199.4453 216.5283 191.6523 219.043 c
191.543 219.0791 191.4238 219.0361 191.3613 218.9395 c
191.2988 218.8428 191.3105 218.7168 191.3867 218.6318 c
197.2949 212.0674 209.0762 211.9365 216.4961 217.2588 C
213.459 212.9424 209.4277 209.7744 202.2031 208.7803 c
202.0879 208.7646 201.998 208.6729 201.9844 208.5576 c
201.9727 208.4414 202.0391 208.332 202.1484 208.292 c
210.4395 205.2139 218.748 208.3369 225.5938 216.5068 C
222.6016 210.1299 217.6875 205.0225 210.8262 202.4951 c
210.7109 202.4531 210.6426 202.335 210.6641 202.2158 c
210.6836 202.0947 210.7871 202.0059 210.9082 202.0029 c
214.8516 201.9219 218.3945 202.8604 223.1738 205.5732 C
219.666 199.8838 220.4336 189.9346 225.543 183.3154 c
225.6133 183.2236 225.7383 183.1914 225.8457 183.2373 c
225.9512 183.2842 226.0137 183.3965 225.9941 183.5107 c
224.8145 190.7119 227.293 198.8408 231.6035 203.1533 C
229.4512 195.5215 231.5977 188.5771 237.5 183.5088 c
237.5703 183.4482 237.6699 183.4316 237.7559 183.4648 c
237.8438 183.498 237.9043 183.5771 237.918 183.6689 c
239.1523 193.0869 249.6875 202.6436 258.5195 203.4443 c
258.6445 203.4551 258.7422 203.5557 258.75 203.6797 c
258.7578 203.8037 258.6758 203.917 258.5527 203.9443 c
254.2734 204.9131 249.8613 204.4346 246.1641 202.9131 C
248.8242 205.8467 252.1035 208.0244 255.7188 209.1592 c
255.8359 209.1953 255.9082 209.3096 255.8945 209.4307 c
255.8809 209.5518 255.7813 209.6455 255.6602 209.6543 c
251.1504 209.9658 246.7363 208.6484 242.9297 206.1162 C
247.291 212.7373 253.9102 217.6611 262.3574 219.6221 c
262.4785 219.6504 262.5605 219.7607 262.5547 219.8848 c
262.5469 220.0088 262.4512 220.1084 262.3281 220.1221 c
250.4102 221.4238 240.582 216.8037 234.1074 208.2041 C
235.7559 213.1045 240.4727 217.96 247.0527 220.8232 c
252.8984 223.3682 258.9023 223.7695 263.4746 222.333 c
263.5801 222.2998 263.6973 222.3398 263.7598 222.4326 c
263.8223 222.5244 263.8184 222.6475 263.748 222.7354 c
f
210.8438 147.1631 m
215.6504 157.6494 215.3086 165.8486 211.4375 176.2178 c
211.3926 176.335 211.2715 176.4023 211.1484 176.3779 c
211.0254 176.3525 210.9395 176.2412 210.9453 176.1162 c
211.5664 163.4951 208.1191 154.4619 200.6465 148.3096 C
208.8965 158.1611 205 177.8691 191.8242 177.8691 c
182.2393 177.8691 174.3086 169.8936 172.3691 160.3447 c
172.3447 160.2236 172.4111 160.1006 172.5273 160.0576 c
172.6426 160.0127 172.7734 160.0576 172.8359 160.1631 c
175.6787 164.9248 180.2451 168.0146 185.2939 168.0146 c
193.4277 168.0146 195.834 161.5479 195.834 157.0166 c
195.834 150.8291 190.9082 145.6729 187.127 145.6729 c
183.6904 145.6729 182.0869 148.4971 182.0869 150.6006 c
182.0869 154.499 185.085 157.7666 188.4629 158.7646 c
188.582 158.7998 188.6602 158.9189 188.6426 159.0439 c
188.623 159.1689 188.5176 159.2607 188.3926 159.2627 c
184.2861 159.2881 180.8154 157.4072 178.7627 153.6943 C
178.4932 156.5693 178.4902 158.3799 179.4033 161.417 c
179.4385 161.5342 179.3848 161.6592 179.2773 161.7158 c
179.168 161.7725 179.0352 161.7432 178.9609 161.6475 c
171.6045 152.2549 175.125 136.0225 180.9404 129.29 C
175.4082 133.2725 170.5234 141.9229 170.6006 153.6826 c
170.6016 153.8057 170.5156 153.9092 170.3955 153.9326 c
170.2754 153.958 170.1563 153.8916 170.1113 153.7783 c
166.0029 143.5264 168.1826 124.5303 179.3926 113.9268 C
176.5088 113.5303 173.5254 113.5811 170.2676 114.6201 c
170.1523 114.6553 170.0273 114.6064 169.9688 114.501 c
169.9102 114.3936 169.9336 114.2607 170.0273 114.1826 c
174.1191 110.7275 179.8418 109.6416 185.2939 109.6416 C
180.5967 115.1416 182.1572 126.1963 189.6484 126.1963 c
194.9961 126.1963 197.4238 117.8975 193.2949 113.415 c
193.2168 113.3291 193.207 113.2002 193.2695 113.1045 c
193.334 113.0068 193.4551 112.9639 193.5664 113.0029 c
198.3457 114.6572 203.5117 118.792 203.5117 124.0186 c
203.5117 129.0615 198.6992 133.4131 191.7109 133.0693 C
200.5293 135.5752 209.7617 132.8018 214.5918 126.8174 c
214.666 126.7236 214.7969 126.6963 214.9023 126.749 c
215.0098 126.8037 215.0645 126.9248 215.0352 127.04 c
212.2441 137.7568 203.0684 142.2393 191.5957 140.7471 C
200.877 144.5029 214.8457 141.2275 221.0195 133.4365 c
221.0918 133.3447 221.2188 133.3154 221.3262 133.3643 c
221.4316 133.415 221.4902 133.5322 221.4668 133.6455 c
220.0957 140.2607 216.6035 145.208 210.8438 147.1631 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.343297 0.001404 0 0 0.615686 0.862745 0.976471 Xa
 0.343297 0.001404 0 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
237.2266 166.4502 m
237.2051 166.3311 237.1016 166.2432 236.9805 166.2432 c
224.0742 166.1064 212.2266 162.9756 203.0098 154.7275 C
211.0391 160.2861 225.9512 162.2373 234.5371 158.3467 c
234.6465 158.2959 234.7051 158.1748 234.6777 158.0576 c
234.6523 157.9404 234.5449 157.8584 234.4238 157.8604 c
223.7441 158.1514 215.1445 154.8545 208.4395 148.8975 C
215.3086 148.4736 221.0137 144.1572 220.9961 139.0518 c
220.9961 138.9326 220.9121 138.8291 220.7949 138.8037 c
220.6797 138.7803 220.5605 138.8389 220.5117 138.9482 c
219.3906 141.4365 215.7637 142.7295 211.9297 141.8291 c
207.75 140.8467 204.9297 137.6396 205.6289 134.6631 c
206.0996 132.6494 208.0645 131.2607 210.5801 130.876 c
210.707 130.8564 210.8008 130.7471 210.7969 130.6182 c
210.793 130.4912 210.6953 130.3857 210.5664 130.3721 c
209.498 130.2705 208.3867 130.2666 207.25 130.376 c
200.7598 130.9932 195.7363 134.9697 195.3008 139.5537 C
190.5879 139.0068 186.416 136.3955 184.9229 132.7803 c
184.8779 132.6709 184.7646 132.6084 184.6475 132.626 c
184.5322 132.6436 184.4443 132.7393 184.4346 132.8564 c
184.0576 137.6064 185.6924 140.6943 189.4043 143.71 C
184.0205 141.6514 177.959 141.5459 172.1484 144.2471 c
172.043 144.2979 171.9844 144.4131 172.0059 144.5283 c
172.0293 144.6436 172.1289 144.7275 172.2461 144.7314 c
177.125 144.9209 180.6631 146.4873 183.9795 149.8037 C
165.7227 144.6689 150.8906 156.0049 156.0234 172.8545 c
156.0586 172.9717 156.1699 173.0459 156.291 173.0342 c
156.4121 173.0225 156.5078 172.9268 156.5176 172.8057 c
157.4355 163.0908 164.2207 156.6885 174.3789 155.7295 C
168.9922 157.7881 163.3789 162.7041 162.8223 171.2627 c
162.8145 171.3857 162.8945 171.4951 163.0137 171.5264 c
163.1328 171.5557 163.2559 171.4951 163.3066 171.3838 c
166.1055 165.2295 171.6035 162.1201 177.4668 161.5713 C
171.1328 164.1533 167.0703 170.1748 165.8965 177.9932 c
165.877 178.1162 165.9512 178.2334 166.0703 178.2725 c
166.1875 178.3096 166.3164 178.2568 166.373 178.1455 c
170.2383 170.5635 178.5293 165.3525 188.8203 169.335 c
199.4375 173.4443 204.0938 185.7197 205.123 194.374 c
205.1387 194.4971 205.2383 194.5908 205.3613 194.5986 c
205.4844 194.6045 205.5938 194.5225 205.623 194.4033 c
209.3418 178.7139 202.0391 162.4541 188.9863 155.5635 C
196.082 157.5654 202.4258 161.8232 206.0137 168.917 C
214.3066 169.9346 220.0176 172.7803 222.8711 178.1572 c
222.9277 178.2627 223.0508 178.3154 223.166 178.2822 c
223.2813 178.2471 223.3574 178.1357 223.3477 178.0166 c
223.166 175.9072 222.4063 171.6865 219.2734 169.7451 C
226.2383 169.7568 231.7793 168.8525 237.0723 166.7314 c
237.1836 166.6865 237.25 166.5693 237.2266 166.4502 c
f
207.7402 219.9189 m
207.8398 219.8545 207.9688 219.8643 208.0566 219.9463 c
208.1426 220.0264 208.1602 220.1553 208.1016 220.2588 c
206.4824 223.0557 207.9609 227.0713 211.1523 227.0713 c
216.873 227.0713 219.623 216.3018 218.748 206.4795 C
216.5859 212.2334 214.7148 214.5342 211.4004 217.2744 c
211.3066 217.3506 211.1719 217.3525 211.0781 217.2744 c
210.9844 217.1982 210.957 217.0654 211.0156 216.958 c
215.8711 207.8799 216.9121 200.8936 216.9121 192.874 C
215.4492 198.8311 213.7168 202.1943 208.7852 207.2549 c
208.6992 207.3428 208.5625 207.3564 208.4609 207.2861 c
208.3594 207.2158 208.3223 207.083 208.373 206.9717 c
213.6719 195.3799 213.2676 182.5244 209.3203 172.708 c
209.2813 172.6104 209.3066 172.499 209.3828 172.4268 c
209.4609 172.3545 209.5723 172.3389 209.668 172.3838 c
214.873 174.9346 217.9316 176.6104 222.4199 182.7744 C
221.0625 190.1729 222.1914 193.8213 225.5918 199.9678 C
221.6543 190.0518 223.75 176.0752 233.7793 170.3779 c
233.8887 170.3154 234.0273 170.3428 234.1035 170.4424 c
234.1816 170.542 234.1758 170.6826 234.0879 170.7744 c
230.3066 174.7295 227.5566 181.4092 229.9316 188.7002 C
228.4023 178.3115 237.5273 169.5869 247.7109 169.5869 c
257.3105 169.5869 263.8613 177.0947 263.3203 184.5264 c
262.7832 191.8916 257.877 195.4971 253.6484 197.0244 c
253.5371 197.0654 253.4121 197.0225 253.3496 196.9229 c
253.2852 196.8232 253.2988 196.6924 253.3828 196.6084 c
258.9922 190.915 259.7598 180.1162 249.7988 176.8486 C
255.6582 181.9053 253.4883 193.6768 244.1094 194.5732 c
243.9922 194.583 243.8828 194.5127 243.8457 194.4014 c
243.8066 194.292 243.8496 194.1689 243.9492 194.1064 c
245.957 192.8271 247.627 190.335 247.627 187.5322 c
247.627 182.8584 244.2051 181.0205 241.9512 181.0205 c
238.5293 181.0205 235.6914 184.2764 235.6914 189.2021 c
235.6914 195.0439 240.9512 199.8857 247.7109 200.6357 c
254.3379 201.3721 260.4941 198.4814 263.4609 194.1768 c
263.5313 194.0752 263.6621 194.04 263.7754 194.0908 c
263.8867 194.1416 263.9453 194.2646 263.916 194.3838 c
260.8965 206.0869 247.1191 211.2607 237.0273 203.8916 C
243.6406 211.3916 254.0332 211.4971 262.75 203.8057 c
262.8398 203.7256 262.9746 203.7197 263.0723 203.7939 c
263.168 203.8682 263.1992 203.999 263.1445 204.1084 c
260.4785 209.5146 253.8926 215.9268 244.5391 214.9932 c
235.9824 214.1377 231.0176 205.9775 230.0156 199.3018 C
229.459 207.8232 231.4102 213.8369 238.7695 219.4463 c
238.8672 219.5205 238.8965 219.6533 238.8418 219.7627 c
238.7871 219.8721 238.6621 219.9268 238.5449 219.8916 c
231.7598 217.9326 226.3145 214.4678 223.4961 207.3486 C
223.4961 213.5088 225.6348 219.7197 231.0215 223.8584 c
231.1191 223.9326 231.1484 224.0654 231.0938 224.1748 c
231.0391 224.2822 230.916 224.3369 230.7988 224.3037 c
227.3457 223.3213 224.627 221.8154 222.6602 219.1201 C
221.3496 230.2197 216.1387 236.8096 210.1348 236.8096 c
206.0098 236.8096 202.9297 233.7764 202.9297 228.9404 c
202.9297 226.1104 204.418 222.1377 207.7402 219.9189 c
f
108.5137 128.3018 m
111.6758 124.3975 118.0527 122.9092 124.9453 124.3135 C
124.4355 120.0107 125.2793 115.5225 126.5566 112.8271 c
126.6094 112.7197 126.7305 112.6611 126.8477 112.6904 c
126.9648 112.7197 127.0449 112.8271 127.041 112.9482 c
126.666 121.7139 131.6641 128.79 140.4902 131.8564 C
133.584 127.1006 131.5645 117.6631 134.8516 112.792 c
134.9199 112.6924 135.0469 112.6533 135.1582 112.6982 c
135.2695 112.7432 135.334 112.8604 135.3125 112.9795 c
134.9395 115.04 135.918 117.6631 138.0254 119.7041 c
140.9316 122.5186 144.875 123.1572 146.8359 121.1338 c
148.7969 119.1084 148.0332 115.1865 145.1289 112.374 c
144.0684 111.3467 142.8691 110.6104 141.6797 110.1885 c
141.5664 110.1475 141.498 110.0342 141.5137 109.917 c
141.5273 109.7979 141.623 109.7061 141.7422 109.6963 c
148.1309 109.1416 152.5117 112.9482 155.2578 117.5732 c
158.0527 122.2783 162.8281 125.9854 168.4688 125.2451 c
168.5879 125.2295 168.7012 125.2998 168.7422 125.4131 c
168.7813 125.5264 168.7363 125.6514 168.6328 125.7139 c
165.8359 127.3975 162.7617 128.0967 158.7695 126.7666 C
164.5645 131.6748 172.8164 134.5068 180.6104 131.9932 c
180.7197 131.958 180.8389 132.001 180.9014 132.0967 c
180.9639 132.1924 180.9541 132.3193 180.876 132.4053 c
174.9668 138.9697 163.1855 139.1006 155.7656 133.7764 C
158.8027 138.0928 162.834 141.2627 170.0586 142.2549 c
170.1738 142.2705 170.2637 142.3643 170.2773 142.4795 c
170.2891 142.5947 170.2227 142.7041 170.1133 142.7451 c
161.8223 145.8213 153.5137 142.7002 146.668 134.5283 C
149.6602 140.9072 154.5742 146.0146 161.4355 148.542 c
161.5508 148.583 161.6191 148.7002 161.5977 148.8213 c
161.5781 148.9424 161.4746 149.0303 161.3535 149.0322 c
157.4102 149.1143 153.8672 148.1748 149.0879 145.4619 C
152.5957 151.1533 151.8281 161.1006 146.7188 167.7217 c
146.6484 167.8135 146.5234 167.8447 146.416 167.7998 c
146.3105 167.7529 146.248 167.6396 146.2676 167.5244 c
147.4473 160.3252 144.9688 152.1963 140.6582 147.8838 C
142.8105 155.5146 140.6641 162.46 134.7617 167.5264 c
134.6914 167.5869 134.5918 167.6045 134.5059 167.5713 c
134.418 167.5381 134.3574 167.46 134.3438 167.3682 c
133.1094 157.9502 122.5742 148.3936 113.7422 147.5928 c
113.6172 147.5811 113.5195 147.4814 113.5117 147.3564 c
113.5039 147.2314 113.5859 147.1201 113.709 147.0928 c
117.9883 146.124 122.4004 146.6025 126.0977 148.1221 C
123.4375 145.1904 120.1582 143.0127 116.543 141.8779 c
116.4258 141.8408 116.3535 141.7275 116.3672 141.6064 c
116.3809 141.4854 116.4805 141.3896 116.6016 141.3818 c
121.1113 141.0713 125.5254 142.3877 129.332 144.9209 C
124.9707 138.2998 118.3516 133.376 109.9043 131.4131 c
109.7832 131.3857 109.7012 131.2744 109.707 131.1514 c
109.7148 131.0283 109.8105 130.9287 109.9336 130.915 c
121.8516 129.6123 131.6797 134.2334 138.1543 142.833 C
136.5059 137.9307 131.7891 133.0771 125.209 130.2139 c
119.3633 127.6689 113.3594 127.2666 108.7871 128.7041 c
108.6816 128.7373 108.5645 128.6963 108.502 128.6045 c
108.4395 128.5107 108.4434 128.3877 108.5137 128.3018 c
f
161.418 203.874 m
156.6113 193.3877 156.9531 185.1885 160.8242 174.8193 c
160.8691 174.7021 160.9902 174.6338 161.1133 174.6592 c
161.2363 174.6846 161.3223 174.7959 161.3164 174.9189 c
160.6953 187.542 164.1426 196.5732 171.6152 202.7275 C
163.3652 192.874 167.2617 173.167 180.4385 173.167 c
190.0234 173.167 197.9531 181.1436 199.8926 190.6924 c
199.918 190.8135 199.8516 190.9346 199.7344 190.9795 c
199.6191 191.0244 199.4883 190.9795 199.4258 190.8721 c
196.584 186.1104 192.0176 183.0205 186.9688 183.0205 c
178.834 183.0205 176.4277 189.4873 176.4277 194.0205 c
176.4277 200.2061 181.3545 205.3623 185.1357 205.3623 c
188.5723 205.3623 190.1758 202.54 190.1758 200.4365 c
190.1758 196.5381 187.1777 193.2705 183.8018 192.2725 c
183.6807 192.2354 183.6045 192.1182 183.6221 191.9932 c
183.6396 191.8682 183.7451 191.7744 183.8721 191.7744 c
187.9766 191.749 191.4473 193.6279 193.5 197.3428 C
193.7695 194.4678 193.7715 192.6572 192.8594 189.6182 c
192.8242 189.501 192.877 189.376 192.9844 189.3193 c
193.0938 189.2646 193.2266 189.292 193.3008 189.3896 c
200.6582 198.7822 197.1367 215.0127 191.3223 221.7471 C
196.8535 217.7646 201.7383 209.1123 201.6621 197.3525 c
201.6602 197.2314 201.7461 197.126 201.8672 197.1025 c
201.9863 197.0791 202.1055 197.1436 202.1504 197.2568 c
206.2598 207.5107 204.0801 226.5049 192.8691 237.1084 C
195.7539 237.5068 198.7363 237.4561 201.9941 236.417 c
202.1094 236.3799 202.2344 236.4307 202.293 236.5361 c
202.3516 236.6416 202.3281 236.7744 202.2344 236.8525 c
198.1426 240.3076 192.4199 241.3936 186.9688 241.3936 C
191.666 235.8936 190.1055 224.8408 182.6162 224.8408 c
177.2656 224.8408 174.8379 233.1396 178.9668 237.6221 c
179.0449 237.708 179.0547 237.835 178.9922 237.9326 c
178.9277 238.0303 178.8066 238.0713 178.6953 238.0342 c
173.916 236.3779 168.75 232.2451 168.75 227.0166 c
168.75 221.9756 173.5625 217.6221 180.5537 217.9658 C
171.7324 215.4619 162.5 218.2334 157.6699 224.2197 c
157.5957 224.3115 157.4648 224.3408 157.3594 224.2861 c
157.252 224.2334 157.1973 224.1123 157.2266 223.9951 c
160.0176 213.2803 169.1934 208.7959 180.667 210.29 C
171.3848 206.5322 157.416 209.8076 151.2422 217.5986 c
151.1699 217.6904 151.043 217.7217 150.9355 217.6709 c
150.8301 217.6221 150.7715 217.5049 150.7949 217.3896 c
152.166 210.7744 155.6582 205.8291 161.418 203.874 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.829862 0.242649 0.080476 0 0.258824 0.494118 Xa
 1 0.829862 0.242649 0.080476 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
26.6963 184.5869 m
26.7178 184.7061 26.8213 184.792 26.9424 184.7939 c
39.8486 184.9287 51.6963 188.0615 60.9141 196.3086 C
52.8838 190.751 37.9717 188.7979 29.3867 192.6904 c
29.2764 192.7402 29.2178 192.8604 29.2451 192.9785 c
29.2715 193.0967 29.3779 193.1787 29.499 193.1748 c
40.1787 192.8857 48.7783 196.1816 55.4834 202.1396 C
48.6143 202.5615 42.9092 206.8799 42.9268 211.9844 c
42.9268 212.1035 43.0107 212.2061 43.1279 212.2314 c
43.2441 212.2568 43.3623 212.1963 43.4111 212.0879 c
44.5322 209.5986 48.1592 208.3076 51.9941 209.208 c
56.1738 210.1885 58.9941 213.3975 58.2949 216.373 c
57.8232 218.3877 55.8584 219.7764 53.3428 220.1602 c
53.2158 220.1787 53.123 220.29 53.126 220.418 c
53.1299 220.5459 53.2285 220.6514 53.3564 220.6631 c
54.4248 220.7656 55.5361 220.7695 56.6738 220.6611 c
63.1641 220.0439 68.1875 216.0654 68.623 211.4834 C
73.3359 212.0303 77.5078 214.6396 79.002 218.2568 c
79.0469 218.3652 79.1621 218.4287 79.2773 218.4111 c
79.3926 218.3916 79.4805 218.2969 79.4902 218.1807 c
79.8672 213.4287 78.2324 210.3418 74.5195 207.3262 C
79.9043 209.3857 85.9648 209.4912 91.7754 206.7881 c
91.8809 206.7393 91.9395 206.624 91.918 206.5088 c
91.8945 206.3936 91.7949 206.3096 91.6777 206.3057 c
86.7988 206.1152 83.2617 204.5498 79.9473 201.2334 C
98.2012 206.3672 113.0332 195.0322 107.9004 178.1807 c
107.8652 178.0654 107.7539 177.9902 107.6328 178.0029 c
107.5117 178.0146 107.416 178.1104 107.4063 178.2314 c
106.4883 187.9453 99.7031 194.3467 89.5449 195.3076 C
94.9316 193.2471 100.5449 188.3311 101.1016 179.7734 c
101.1094 179.6514 101.0293 179.54 100.9102 179.5107 c
100.791 179.4814 100.668 179.54 100.6172 179.6514 c
97.8184 185.8057 92.3203 188.917 86.457 189.4639 C
92.791 186.8838 96.8535 180.8623 98.0273 173.0439 c
98.0469 172.9209 97.9727 172.8018 97.8535 172.7646 c
97.7363 172.7256 97.6074 172.7803 97.5508 172.8896 c
93.6855 180.4727 85.3945 185.6836 75.1035 181.7021 c
64.4863 177.5928 59.8291 165.3154 58.7998 156.6611 c
58.7852 156.54 58.6846 156.4463 58.5615 156.4385 c
58.4395 156.4307 58.3291 156.5127 58.3008 156.6338 c
54.5811 172.3213 61.8838 188.583 74.9375 195.4736 C
67.8418 193.4707 61.498 189.2139 57.9102 182.1191 C
49.6162 181.1006 43.9063 178.2568 41.0527 172.8799 c
40.9961 172.7725 40.8721 172.7197 40.7568 172.7549 c
40.6416 172.7881 40.5654 172.8994 40.5752 173.0205 c
40.7578 175.1299 41.5166 179.3506 44.6494 181.291 C
37.6846 181.2803 32.1436 182.1846 26.8506 184.3037 c
26.7393 184.3496 26.6738 184.4678 26.6963 184.5869 c
f
56.1826 131.1162 m
56.084 131.1826 55.9541 131.1709 55.8672 131.0908 c
55.7813 131.0088 55.7627 130.8799 55.8213 130.7783 c
57.4414 127.9814 55.9619 123.9639 52.7705 123.9639 c
47.0498 123.9639 44.2998 134.7334 45.1748 144.5576 C
47.3379 138.8018 49.208 136.5029 52.5225 133.7627 c
52.6162 133.6846 52.751 133.6846 52.8447 133.7607 c
52.9385 133.8389 52.9658 133.9697 52.9082 134.0771 c
48.0518 143.1572 47.0107 150.1436 47.0107 158.1631 C
48.4736 152.2041 50.2061 148.8408 55.1377 143.7822 c
55.2236 143.6943 55.3604 143.6807 55.4629 143.749 c
55.5645 143.8193 55.6016 143.9521 55.5498 144.0654 c
50.252 155.6553 50.6563 168.5127 54.6025 178.3291 c
54.6416 178.4268 54.6172 178.5381 54.54 178.6104 c
54.4629 178.6807 54.3506 178.6982 54.2549 178.6514 c
49.0498 176.1006 45.9912 174.4248 41.5029 168.2627 C
42.8604 160.8643 41.7314 157.2139 38.3311 151.0674 C
42.2686 160.9854 40.1729 174.9619 30.1436 180.6592 c
30.0342 180.7207 29.8955 180.6934 29.8193 180.5947 c
29.7412 180.4951 29.748 180.3535 29.835 180.2627 c
33.6162 176.3076 36.3662 169.6279 33.9912 162.335 C
35.5205 172.7236 26.3955 181.4502 16.2119 181.4502 c
6.6123 181.4502 0.061523 173.9404 0.602539 166.5088 c
1.13965 159.1436 6.0459 155.54 10.2744 154.0107 c
10.3857 153.9717 10.5107 154.0127 10.5742 154.1123 c
10.6377 154.2139 10.624 154.3428 10.541 154.4287 c
4.93066 160.1201 4.16309 170.9209 14.124 174.1885 C
8.26465 169.1318 10.4346 157.3584 19.8135 156.4639 c
19.9307 156.4521 20.04 156.5225 20.0781 156.6338 c
20.1162 156.7451 20.0732 156.8682 19.9746 156.9307 c
17.9658 158.208 16.2959 160.7021 16.2959 163.5049 c
16.2959 168.1787 19.7178 170.0146 21.9717 170.0146 c
25.3936 170.0146 28.2314 166.7588 28.2314 161.835 c
28.2314 155.9912 22.9717 151.1514 16.2119 150.3994 c
9.58594 149.665 3.42969 152.5537 0.461914 156.8584 c
0.392578 156.96 0.260742 156.9971 0.148438 156.9463 c
0.036133 156.8955 -0.022461 156.7705 0.007813 156.6514 c
3.02637 144.9482 16.8037 139.7744 26.8955 147.1455 C
20.2822 139.6436 9.88965 139.54 1.17383 147.2314 c
1.08301 147.3115 0.948242 147.3154 0.851563 147.2412 c
0.754883 147.1689 0.724609 147.0361 0.77832 146.9287 c
3.44531 141.5205 10.0313 135.1084 19.3838 136.0439 c
27.9404 136.8994 32.9053 145.0576 33.9072 151.7354 C
34.4639 143.2139 32.5137 137.1982 25.1533 131.5889 c
25.0566 131.5146 25.0264 131.3818 25.0811 131.2725 c
25.1357 131.165 25.2607 131.1104 25.3779 131.1436 c
32.1631 133.1045 37.6084 136.5693 40.4268 143.6885 C
40.4268 137.5264 38.2881 131.3154 32.9014 127.1768 c
32.8037 127.1025 32.7744 126.9717 32.8291 126.8623 c
32.8838 126.7529 33.0078 126.6982 33.125 126.7314 c
36.5781 127.7158 39.2959 129.2197 41.2627 131.917 C
42.5732 120.8174 47.7842 114.2256 53.7881 114.2256 c
57.9131 114.2256 60.9932 117.2588 60.9932 122.0967 c
60.9932 124.9268 59.5049 128.8994 56.1826 131.1162 c
f
155.4102 222.7354 m
152.248 226.6396 145.8711 228.1279 138.9785 226.7236 C
139.4883 231.0244 138.6445 235.5146 137.3672 238.208 c
137.3145 238.3174 137.1934 238.375 137.0762 238.3467 c
136.959 238.3174 136.8789 238.21 136.8828 238.0889 c
137.2578 229.3223 132.2598 222.2451 123.4336 219.1787 C
130.3398 223.9346 132.3594 233.3721 129.0723 238.2451 c
129.0039 238.3438 128.877 238.3828 128.7656 238.3369 c
128.6543 238.292 128.5898 238.1748 128.6113 238.0576 c
128.9844 235.9971 128.0059 233.373 125.8984 231.3311 c
122.9922 228.5166 119.0488 227.8779 117.0879 229.9014 c
115.127 231.9268 115.8906 235.8486 118.7949 238.6631 c
119.8555 239.6904 121.0547 240.4248 122.2441 240.8477 c
122.3574 240.8877 122.4258 241.001 122.4102 241.1191 c
122.3965 241.2383 122.3008 241.3301 122.1816 241.3398 c
115.793 241.8945 111.4121 238.0879 108.666 233.4619 c
105.8711 228.7568 101.0957 225.0518 95.4551 225.792 c
95.3359 225.8076 95.2227 225.7373 95.1816 225.624 c
95.1426 225.5107 95.1875 225.3838 95.291 225.3223 c
98.0879 223.6377 101.1621 222.9385 105.1543 224.2705 C
99.3594 219.3613 91.1074 216.5283 83.3145 219.043 c
83.2051 219.0791 83.0859 219.0361 83.0234 218.9395 c
82.9609 218.8428 82.9727 218.7168 83.0488 218.6318 c
88.957 212.0674 100.7383 211.9365 108.1582 217.2588 C
105.1211 212.9424 101.0898 209.7744 93.8652 208.7803 c
93.75 208.7646 93.6602 208.6729 93.6465 208.5576 c
93.6348 208.4414 93.7012 208.332 93.8105 208.292 c
102.1016 205.2139 110.4102 208.3369 117.2559 216.5068 C
114.2637 210.1299 109.3496 205.0225 102.4883 202.4951 c
102.373 202.4531 102.3047 202.335 102.3262 202.2158 c
102.3457 202.0947 102.4492 202.0059 102.5703 202.0029 c
106.5137 201.9219 110.0566 202.8604 114.8359 205.5732 C
111.3281 199.8838 112.0957 189.9346 117.2051 183.3154 c
117.2754 183.2236 117.4004 183.1914 117.5078 183.2373 c
117.6133 183.2842 117.6758 183.3965 117.6563 183.5107 c
116.4766 190.7119 118.9551 198.8408 123.2656 203.1533 C
121.1133 195.5215 123.2598 188.5771 129.1621 183.5088 c
129.2324 183.4482 129.332 183.4316 129.418 183.4648 c
129.5059 183.498 129.5664 183.5771 129.5801 183.6689 c
130.8145 193.0869 141.3496 202.6436 150.1816 203.4443 c
150.3066 203.4551 150.4043 203.5557 150.4121 203.6797 c
150.4199 203.8037 150.3379 203.917 150.2148 203.9443 c
145.9355 204.9131 141.5234 204.4346 137.8262 202.9131 C
140.4863 205.8467 143.7656 208.0244 147.3809 209.1592 c
147.498 209.1953 147.5703 209.3096 147.5566 209.4307 c
147.543 209.5518 147.4434 209.6455 147.3223 209.6543 c
142.8125 209.9658 138.3984 208.6484 134.5918 206.1162 C
138.9531 212.7373 145.5723 217.6611 154.0195 219.6221 c
154.1406 219.6504 154.2227 219.7607 154.2168 219.8848 c
154.209 220.0088 154.1133 220.1084 153.9902 220.1221 c
142.0723 221.4238 132.2441 216.8037 125.7695 208.2041 C
127.418 213.1045 132.1348 217.96 138.7148 220.8232 c
144.5605 223.3682 150.5645 223.7695 155.1367 222.333 c
155.2422 222.2998 155.3594 222.3398 155.4219 222.4326 c
155.4844 222.5244 155.4805 222.6475 155.4102 222.7354 c
f
102.5059 147.1631 m
107.3125 157.6494 106.9707 165.8486 103.0996 176.2178 c
103.0547 176.335 102.9336 176.4023 102.8105 176.3779 c
102.6875 176.3525 102.6016 176.2412 102.6074 176.1162 c
103.2285 163.4951 99.7813 154.4619 92.3086 148.3096 C
100.5586 158.1611 96.6621 177.8691 83.4863 177.8691 c
73.9004 177.8691 65.9697 169.8936 64.0303 160.3447 c
64.0059 160.2236 64.0723 160.1006 64.1885 160.0576 c
64.3037 160.0127 64.4346 160.0576 64.4971 160.1631 c
67.3398 164.9248 71.9063 168.0146 76.9551 168.0146 c
85.0898 168.0146 87.4961 161.5479 87.4961 157.0166 c
87.4961 150.8291 82.5703 145.6729 78.7891 145.6729 c
75.3516 145.6729 73.748 148.4971 73.748 150.6006 c
73.748 154.499 76.7461 157.7666 80.125 158.7646 c
80.2441 158.7998 80.3223 158.9189 80.3047 159.0439 c
80.2852 159.1689 80.1797 159.2607 80.0547 159.2627 c
75.9473 159.2881 72.4766 157.4072 70.4238 153.6943 C
70.1543 156.5693 70.1514 158.3799 71.0645 161.417 c
71.0996 161.5342 71.0459 161.6592 70.9385 161.7158 c
70.8291 161.7725 70.6963 161.7432 70.6221 161.6475 c
63.2656 152.2549 66.7861 136.0225 72.6016 129.29 C
67.0693 133.2725 62.1846 141.9229 62.2617 153.6826 c
62.2627 153.8057 62.1768 153.9092 62.0566 153.9326 c
61.9365 153.958 61.8174 153.8916 61.7725 153.7783 c
57.6641 143.5264 59.8438 124.5303 71.0537 113.9268 C
68.1699 113.5303 65.1865 113.5811 61.9287 114.6201 c
61.8135 114.6553 61.6885 114.6064 61.6299 114.501 c
61.5713 114.3936 61.5947 114.2607 61.6885 114.1826 c
65.7803 110.7275 71.5029 109.6416 76.9551 109.6416 C
72.2578 115.1416 73.8184 126.1963 81.3105 126.1963 c
86.6582 126.1963 89.0859 117.8975 84.957 113.415 c
84.8789 113.3291 84.8691 113.2002 84.9316 113.1045 c
84.9961 113.0068 85.1172 112.9639 85.2285 113.0029 c
90.0078 114.6572 95.1738 118.792 95.1738 124.0186 c
95.1738 129.0615 90.3613 133.4131 83.373 133.0693 C
92.1914 135.5752 101.4238 132.8018 106.2539 126.8174 c
106.3281 126.7236 106.459 126.6963 106.5645 126.749 c
106.6719 126.8037 106.7266 126.9248 106.6973 127.04 c
103.9063 137.7568 94.7305 142.2393 83.2578 140.7471 C
92.5391 144.5029 106.5078 141.2275 112.6816 133.4365 c
112.7539 133.3447 112.8809 133.3154 112.9883 133.3643 c
113.0938 133.415 113.1523 133.5322 113.1289 133.6455 c
111.7578 140.2607 108.2656 145.208 102.5059 147.1631 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.343297 0.001404 0 0 0.615686 0.862745 0.976471 Xa
 0.343297 0.001404 0 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
128.8887 166.4502 m
128.8672 166.3311 128.7637 166.2432 128.6426 166.2432 c
115.7363 166.1064 103.8887 162.9756 94.6719 154.7275 C
102.7012 160.2861 117.6133 162.2373 126.1992 158.3467 c
126.3086 158.2959 126.3672 158.1748 126.3398 158.0576 c
126.3145 157.9404 126.207 157.8584 126.0859 157.8604 c
115.4063 158.1514 106.8066 154.8545 100.1016 148.8975 C
106.9707 148.4736 112.6758 144.1572 112.6582 139.0518 c
112.6582 138.9326 112.5742 138.8291 112.457 138.8037 c
112.3418 138.7803 112.2227 138.8389 112.1738 138.9482 c
111.0527 141.4365 107.4258 142.7295 103.5918 141.8291 c
99.4121 140.8467 96.5918 137.6396 97.291 134.6631 c
97.7617 132.6494 99.7266 131.2607 102.2422 130.876 c
102.3691 130.8564 102.4629 130.7471 102.459 130.6182 c
102.4551 130.4912 102.3574 130.3857 102.2285 130.3721 c
101.1602 130.2705 100.0488 130.2666 98.9121 130.376 c
92.4219 130.9932 87.3984 134.9697 86.9629 139.5537 C
82.25 139.0068 78.0781 136.3955 76.584 132.7803 c
76.5391 132.6709 76.4258 132.6084 76.3086 132.626 c
76.1934 132.6436 76.1055 132.7393 76.0957 132.8564 c
75.7188 137.6064 77.3535 140.6943 81.0664 143.71 C
75.6816 141.6514 69.6201 141.5459 63.8096 144.2471 c
63.7041 144.2979 63.6455 144.4131 63.667 144.5283 c
63.6904 144.6436 63.79 144.7275 63.9072 144.7314 c
68.7861 144.9209 72.3242 146.4873 75.6406 149.8037 C
57.3838 144.6689 42.5518 156.0049 47.6846 172.8545 c
47.7197 172.9717 47.8311 173.0459 47.9521 173.0342 c
48.0732 173.0225 48.1689 172.9268 48.1787 172.8057 c
49.0967 163.0908 55.8818 156.6885 66.04 155.7295 C
60.6533 157.7881 55.04 162.7041 54.4834 171.2627 c
54.4756 171.3857 54.5557 171.4951 54.6748 171.5264 c
54.7939 171.5557 54.917 171.4951 54.9678 171.3838 c
57.7666 165.2295 63.2646 162.1201 69.1279 161.5713 C
62.7939 164.1533 58.7314 170.1748 57.5576 177.9932 c
57.5381 178.1162 57.6123 178.2334 57.7314 178.2725 c
57.8486 178.3096 57.9775 178.2568 58.0342 178.1455 c
61.8994 170.5635 70.1904 165.3525 80.4824 169.335 c
91.0996 173.4443 95.7559 185.7197 96.7852 194.374 c
96.8008 194.4971 96.9004 194.5908 97.0234 194.5986 c
97.1465 194.6045 97.2559 194.5225 97.2852 194.4033 c
101.0039 178.7139 93.7012 162.4541 80.6484 155.5635 C
87.7441 157.5654 94.0879 161.8232 97.6758 168.917 C
105.9688 169.9346 111.6797 172.7803 114.5332 178.1572 c
114.5898 178.2627 114.7129 178.3154 114.8281 178.2822 c
114.9434 178.2471 115.0195 178.1357 115.0098 178.0166 c
114.8281 175.9072 114.0684 171.6865 110.9355 169.7451 C
117.9004 169.7568 123.4414 168.8525 128.7344 166.7314 c
128.8457 166.6865 128.9121 166.5693 128.8887 166.4502 c
f
99.4023 219.9189 m
99.502 219.8545 99.6309 219.8643 99.7188 219.9463 c
99.8047 220.0264 99.8223 220.1553 99.7637 220.2588 c
98.1445 223.0557 99.623 227.0713 102.8145 227.0713 c
108.5352 227.0713 111.2852 216.3018 110.4102 206.4795 C
108.248 212.2334 106.377 214.5342 103.0625 217.2744 c
102.9688 217.3506 102.834 217.3525 102.7402 217.2744 c
102.6465 217.1982 102.6191 217.0654 102.6777 216.958 c
107.5332 207.8799 108.5742 200.8936 108.5742 192.874 C
107.1113 198.8311 105.3789 202.1943 100.4473 207.2549 c
100.3613 207.3428 100.2246 207.3564 100.123 207.2861 c
100.0215 207.2158 99.9844 207.083 100.0352 206.9717 c
105.334 195.3799 104.9297 182.5244 100.9824 172.708 c
100.9434 172.6104 100.9688 172.499 101.0449 172.4268 c
101.123 172.3545 101.2344 172.3389 101.3301 172.3838 c
106.5352 174.9346 109.5938 176.6104 114.082 182.7744 C
112.7246 190.1729 113.8535 193.8213 117.2539 199.9678 C
113.3164 190.0518 115.4121 176.0752 125.4414 170.3779 c
125.5508 170.3154 125.6895 170.3428 125.7656 170.4424 c
125.8438 170.542 125.8379 170.6826 125.75 170.7744 c
121.9688 174.7295 119.2188 181.4092 121.5938 188.7002 C
120.0645 178.3115 129.1895 169.5869 139.373 169.5869 c
148.9727 169.5869 155.5234 177.0947 154.9824 184.5264 c
154.4453 191.8916 149.5391 195.4971 145.3105 197.0244 c
145.1992 197.0654 145.0742 197.0225 145.0117 196.9229 c
144.9473 196.8232 144.9609 196.6924 145.0449 196.6084 c
150.6543 190.915 151.4219 180.1162 141.4609 176.8486 C
147.3203 181.9053 145.1504 193.6768 135.7715 194.5732 c
135.6543 194.583 135.5449 194.5127 135.5078 194.4014 c
135.4688 194.292 135.5117 194.1689 135.6113 194.1064 c
137.6191 192.8271 139.2891 190.335 139.2891 187.5322 c
139.2891 182.8584 135.8672 181.0205 133.6133 181.0205 c
130.1914 181.0205 127.3535 184.2764 127.3535 189.2021 c
127.3535 195.0439 132.6133 199.8857 139.373 200.6357 c
146 201.3721 152.1563 198.4814 155.123 194.1768 c
155.1934 194.0752 155.3242 194.04 155.4375 194.0908 c
155.5488 194.1416 155.6074 194.2646 155.5781 194.3838 c
152.5586 206.0869 138.7813 211.2607 128.6895 203.8916 C
135.3027 211.3916 145.6953 211.4971 154.4121 203.8057 c
154.502 203.7256 154.6367 203.7197 154.7344 203.7939 c
154.8301 203.8682 154.8613 203.999 154.8066 204.1084 c
152.1406 209.5146 145.5547 215.9268 136.2012 214.9932 c
127.6445 214.1377 122.6797 205.9775 121.6777 199.3018 C
121.1211 207.8232 123.0723 213.8369 130.4316 219.4463 c
130.5293 219.5205 130.5586 219.6533 130.5039 219.7627 c
130.4492 219.8721 130.3242 219.9268 130.207 219.8916 c
123.4219 217.9326 117.9766 214.4678 115.1582 207.3486 C
115.1582 213.5088 117.2969 219.7197 122.6836 223.8584 c
122.7813 223.9326 122.8105 224.0654 122.7559 224.1748 c
122.7012 224.2822 122.5781 224.3369 122.4609 224.3037 c
119.0078 223.3213 116.2891 221.8154 114.3223 219.1201 C
113.0117 230.2197 107.8008 236.8096 101.7969 236.8096 c
97.6719 236.8096 94.5918 233.7764 94.5918 228.9404 c
94.5918 226.1104 96.0801 222.1377 99.4023 219.9189 c
f
0.174805 128.3018 m
3.33691 124.3975 9.71387 122.9092 16.6064 124.3135 C
16.0967 120.0107 16.9404 115.5225 18.2178 112.8271 c
18.2705 112.7197 18.3916 112.6611 18.5088 112.6904 c
18.626 112.7197 18.7061 112.8271 18.7021 112.9482 c
18.3271 121.7139 23.3252 128.79 32.1514 131.8564 C
25.2451 127.1006 23.2256 117.6631 26.5127 112.792 c
26.5811 112.6924 26.708 112.6533 26.8193 112.6982 c
26.9307 112.7432 26.9951 112.8604 26.9736 112.9795 c
26.6006 115.04 27.5791 117.6631 29.6865 119.7041 c
32.5928 122.5186 36.5361 123.1572 38.4971 121.1338 c
40.458 119.1084 39.6943 115.1865 36.79 112.374 c
35.7295 111.3467 34.5303 110.6104 33.3408 110.1885 c
33.2275 110.1475 33.1592 110.0342 33.1748 109.917 c
33.1885 109.7979 33.2842 109.7061 33.4033 109.6963 c
39.792 109.1416 44.1729 112.9482 46.9189 117.5732 c
49.7139 122.2783 54.4893 125.9854 60.1299 125.2451 c
60.249 125.2295 60.3623 125.2998 60.4033 125.4131 c
60.4424 125.5264 60.3975 125.6514 60.2939 125.7139 c
57.4971 127.3975 54.4229 128.0967 50.4307 126.7666 C
56.2256 131.6748 64.4775 134.5068 72.2715 131.9932 c
72.3809 131.958 72.5 132.001 72.5625 132.0967 c
72.625 132.1924 72.6152 132.3193 72.5371 132.4053 c
66.6279 138.9697 54.8467 139.1006 47.4268 133.7764 C
50.4639 138.0928 54.4951 141.2627 61.7197 142.2549 c
61.835 142.2705 61.9248 142.3643 61.9385 142.4795 c
61.9502 142.5947 61.8838 142.7041 61.7744 142.7451 c
53.4834 145.8213 45.1748 142.7002 38.3291 134.5283 C
41.3213 140.9072 46.2354 146.0146 53.0967 148.542 c
53.2119 148.583 53.2803 148.7002 53.2588 148.8213 c
53.2393 148.9424 53.1357 149.0303 53.0146 149.0322 c
49.0713 149.1143 45.5283 148.1748 40.749 145.4619 C
44.2568 151.1533 43.4893 161.1006 38.3799 167.7217 c
38.3096 167.8135 38.1846 167.8447 38.0771 167.7998 c
37.9717 167.7529 37.9092 167.6396 37.9287 167.5244 c
39.1084 160.3252 36.6299 152.1963 32.3193 147.8838 C
34.4717 155.5146 32.3252 162.46 26.4229 167.5264 c
26.3525 167.5869 26.2529 167.6045 26.167 167.5713 c
26.0791 167.5381 26.0186 167.46 26.0049 167.3682 c
24.7705 157.9502 14.2354 148.3936 5.40332 147.5928 c
5.27832 147.5811 5.18066 147.4814 5.17285 147.3564 c
5.16504 147.2314 5.24707 147.1201 5.37012 147.0928 c
9.64941 146.124 14.0615 146.6025 17.7588 148.1221 C
15.0986 145.1904 11.8193 143.0127 8.2041 141.8779 c
8.08691 141.8408 8.01465 141.7275 8.02832 141.6064 c
8.04199 141.4854 8.1416 141.3896 8.2627 141.3818 c
12.7725 141.0713 17.1865 142.3877 20.9932 144.9209 C
16.6318 138.2998 10.0127 133.376 1.56543 131.4131 c
1.44434 131.3857 1.3623 131.2744 1.36816 131.1514 c
1.37598 131.0283 1.47168 130.9287 1.59473 130.915 c
13.5127 129.6123 23.3408 134.2334 29.8154 142.833 C
28.167 137.9307 23.4502 133.0771 16.8701 130.2139 c
11.0244 127.6689 5.02051 127.2666 0.448242 128.7041 c
0.342773 128.7373 0.225586 128.6963 0.163086 128.6045 c
0.100586 128.5107 0.104492 128.3877 0.174805 128.3018 c
f
53.0791 203.874 m
48.2725 193.3877 48.6143 185.1885 52.4854 174.8193 c
52.5303 174.7021 52.6514 174.6338 52.7744 174.6592 c
52.8975 174.6846 52.9834 174.7959 52.9775 174.9189 c
52.3564 187.542 55.8037 196.5732 63.2764 202.7275 C
55.0264 192.874 58.9229 173.167 72.0996 173.167 c
81.6855 173.167 89.6152 181.1436 91.5547 190.6924 c
91.5801 190.8135 91.5137 190.9346 91.3965 190.9795 c
91.2813 191.0244 91.1504 190.9795 91.0879 190.8721 c
88.2461 186.1104 83.6797 183.0205 78.6309 183.0205 c
70.4951 183.0205 68.0889 189.4873 68.0889 194.0205 c
68.0889 200.2061 73.0156 205.3623 76.7969 205.3623 c
80.2344 205.3623 81.8379 202.54 81.8379 200.4365 c
81.8379 196.5381 78.8398 193.2705 75.4629 192.2725 c
75.3418 192.2354 75.2656 192.1182 75.2832 191.9932 c
75.3008 191.8682 75.4063 191.7744 75.5332 191.7744 c
79.6387 191.749 83.1094 193.6279 85.1621 197.3428 C
85.4316 194.4678 85.4336 192.6572 84.5215 189.6182 c
84.4863 189.501 84.5391 189.376 84.6465 189.3193 c
84.7559 189.2646 84.8887 189.292 84.9629 189.3896 c
92.3203 198.7822 88.7988 215.0127 82.9844 221.7471 C
88.5156 217.7646 93.4004 209.1123 93.3242 197.3525 c
93.3223 197.2314 93.4082 197.126 93.5293 197.1025 c
93.6484 197.0791 93.7676 197.1436 93.8125 197.2568 c
97.9219 207.5107 95.7422 226.5049 84.5313 237.1084 C
87.416 237.5068 90.3984 237.4561 93.6563 236.417 c
93.7715 236.3799 93.8965 236.4307 93.9551 236.5361 c
94.0137 236.6416 93.9902 236.7744 93.8965 236.8525 c
89.8047 240.3076 84.082 241.3936 78.6309 241.3936 C
83.3281 235.8936 81.7676 224.8408 74.2773 224.8408 c
68.9268 224.8408 66.499 233.1396 70.6279 237.6221 c
70.7061 237.708 70.7158 237.835 70.6533 237.9326 c
70.5889 238.0303 70.4678 238.0713 70.3564 238.0342 c
65.5771 236.3779 60.4111 232.2451 60.4111 227.0166 c
60.4111 221.9756 65.2236 217.6221 72.2148 217.9658 C
63.3936 215.4619 54.1611 218.2334 49.3311 224.2197 c
49.2568 224.3115 49.126 224.3408 49.0205 224.2861 c
48.9131 224.2334 48.8584 224.1123 48.8877 223.9951 c
51.6787 213.2803 60.8545 208.7959 72.3281 210.29 C
63.0459 206.5322 49.0771 209.8076 42.9033 217.5986 c
42.8311 217.6904 42.7041 217.7217 42.5967 217.6709 c
42.4912 217.6221 42.4326 217.5049 42.4561 217.3896 c
43.8271 210.7744 47.3193 205.8291 53.0791 203.874 C
f
*U
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 6)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-3358.5 3778.5 m
-3257.1816 3778.5 L
-3257.1816 3770.7832 L
-3358.5 3770.7832 L
-3358.5 3778.5 L
n
u
0 O
0.698207 0.674464 0.638605 0.739437 0.137255 0.121569 0.12549 Xa
-3257.3 3772.2073 m
-3257.1504 3772.2439 -3257.2041 3771.8247 -3257.1816 3771.7495 C
-3257.4319 3771.8423 -3257.2937 3772.3159 -3257.3 3772.2073 C
f
-3259.7693 3773.1582 m
-3259.7256 3772.9871 L
-3260.0896 3773.4063 L
-3259.7693 3773.1582 L
f
-3262.0784 3773.1504 m
-3261.8601 3773.8643 -3261.2417 3773.0352 -3260.8303 3773.2888 C
-3260.7625 3773.4524 L
-3260.5769 3772.8772 L
-3261.0769 3772.9683 -3261.7263 3773.3499 -3262.0784 3773.1504 C
f
-3263.3096 3771.6072 m
-3263.2336 3771.8843 -3263.5759 3771.8455 -3263.0225 3771.6936 C
-3263.0503 3771.6631 -3263.0583 3771.6455 -3263.0745 3771.6233 C
-3263.1243 3771.6272 -3263.1929 3771.6262 -3263.3096 3771.6072 C
f
-3263.0745 3771.6233 m
-3262.8313 3771.6033 -3263.2336 3771.3904 -3263.0745 3771.6233 C
-3263.0745 3771.6233 L
f
-3264.1975 3771.7822 m
-3263.8772 3771.5342 L
-3263.9441 3771.3704 -3264.2292 3771.3333 -3264.1233 3771.2134 C
-3264.4519 3771.3496 -3264.3843 3771.5127 -3264.1975 3771.7822 C
f
-3264.5012 3772.303 m
-3264.3352 3772.1982 L
-3264.3643 3772.1294 -3264.4082 3772.105 -3264.5012 3772.303 C
f
-3263.9832 3771.9768 m
-3264.3352 3772.1982 L
-3264.2888 3772.313 -3264.2839 3772.5447 -3264.1736 3772.1184 C
-3264.2024 3772.3296 -3264.1328 3772.1262 -3263.9832 3771.9768 C
f
-3263.7839 3772.0852 m
-3263.6042 3772.2407 -3263.3721 3772.3384 -3263.6936 3772.5852 C
-3263.0808 3772.4871 -3263.1711 3771.9856 -3263.7839 3772.0852 C
f
-3262.1963 3773.8887 m
-3261.9561 3774.0984 L
-3261.7483 3773.8584 L
-3261.8521 3773.9771 -3262.2112 3773.6653 -3262.1963 3773.8887 C
f
-3266.1929 3771.4126 m
-3266.2129 3771.5647 -3266.0852 3771.8174 -3266.0613 3772.0122 C
-3265.8247 3771.8374 L
-3265.9463 3771.7334 -3266.1768 3771.6375 -3266.1929 3771.4126 C
f
-3266.0613 3772.0122 m
-3266.4153 3772.2727 L
-3266.0991 3772.303 -3266.0413 3772.1792 -3266.0613 3772.0122 C
f
-3264.5583 3773.0955 m
-3263.9768 3772.5479 L
-3264.6704 3773.1033 L
-3264.5583 3773.0955 L
f
-3267.5449 3771.3936 m
-3267.3442 3771.0422 L
-3267.7017 3771.5735 L
-3267.5449 3771.3936 L
f
-3268.4417 3771.4551 m
-3268.2932 3771.1638 -3268.6453 3770.9624 -3268.4883 3770.7832 C
-3268.7319 3770.8352 -3268.9399 3771.0852 -3269.1272 3771.3103 C
-3268.9282 3771.1848 -3268.7161 3771.2168 -3268.4417 3771.4551 C
f
-3269.4417 3771.6375 m
-3269.3423 3771.5679 -3269.2393 3771.4431 -3269.1272 3771.3103 C
-3269.2329 3771.3772 -3269.3369 3771.4744 -3269.4417 3771.6375 C
f
-3267.0183 3772.1975 m
-3267.0457 3772.1055 -3267.0984 3771.8655 -3267.2969 3771.7639 C
-3267.1577 3772.1912 L
-3267.1152 3772.1936 -3267.0671 3772.1951 -3267.0183 3772.1975 C
f
-3267.1528 3772.2046 m
-3267.1577 3772.1912 L
-3267.3088 3772.1814 -3267.4136 3772.1719 -3267.4585 3772.167 c
-3267.4199 3772.1707 -3267.3279 3772.1824 -3267.1528 3772.2046 C
f
-3266.9832 3772.1992 m
-3266.9961 3772.1982 -3267.0056 3772.1975 -3267.0183 3772.1975 C
-3267.0049 3772.24 -3266.9968 3772.2534 -3266.9832 3772.1992 C
f
-3265.4863 3772.709 m
-3265.6943 3772.948 -3266.1279 3773.2039 -3265.7083 3773.5686 C
-3265.5591 3773.2759 -3265.7993 3773.0686 -3265.4863 3772.709 c
f
-3266.8103 3772.7334 m
-3266.4343 3772.8311 L
-3266.4417 3772.7183 -3266.5095 3772.5535 -3266.4065 3772.4351 C
-3266.8103 3772.7334 L
f
-3266.9944 3772.8694 m
-3266.8103 3772.7334 L
-3266.9497 3772.6975 L
-3266.9944 3772.8694 L
f
-3268.7976 3772.0376 m
-3268.96 3772.2239 -3269.1377 3772.2393 -3269.3384 3772.2693 C
-3269.1233 3772.3533 -3268.9009 3772.3992 -3268.6897 3772.3972 C
-3268.6599 3772.2632 -3268.5671 3772.0222 -3268.7976 3772.0376 C
f
-3267.9983 3772.1563 m
-3268.0095 3772.1663 -3268.0239 3772.1707 -3268.0344 3772.1807 C
-3268.0122 3772.2173 -3267.9944 3772.2283 -3267.9983 3772.1563 C
f
-3271.3142 3772.2664 m
-3271.3032 3772.2896 -3271.2937 3772.3196 -3271.2825 3772.344 C
-3271.28 3772.3196 -3271.2783 3772.2952 -3271.2751 3772.27 C
-3271.3142 3772.2664 L
f
-3268.6536 3772.4771 m
-3268.4919 3772.5598 -3268.3953 3772.4551 -3268.3032 3772.3242 C
-3268.4241 3772.3662 -3268.5522 3772.3943 -3268.6897 3772.3972 C
-3268.7031 3772.4583 -3268.7056 3772.4983 -3268.6536 3772.4771 C
f
-3269.9929 3771.8374 m
-3269.9087 3771.9272 -3269.8132 3772.0032 -3269.7129 3772.0723 C
-3269.7952 3771.9373 -3269.9631 3771.7263 -3269.9929 3771.8374 C
f
-3268.0889 3772.0623 m
-3268.0808 3772.0559 -3268.0735 3772.0479 -3268.0647 3772.0432 C
-3268.1177 3771.9524 -3268.1111 3771.9966 -3268.0889 3772.0623 C
f
-3268.0889 3772.0623 m
-3268.1721 3772.1243 -3268.2375 3772.2295 -3268.3032 3772.3242 C
-3268.2048 3772.2896 -3268.1135 3772.2439 -3268.0344 3772.1807 C
-3268.0544 3772.1504 -3268.0745 3772.104 -3268.0889 3772.0623 C
f
-3271.9128 3775.0095 m
-3271.8843 3774.6133 -3271.4592 3774.2471 -3271.0923 3774.6719 C
-3270.7312 3774.375 -3270.9673 3773.0723 -3271.2825 3772.344 C
-3271.2937 3772.5166 -3271.2937 3772.6763 -3271.6653 3772.9104 C
-3271.5352 3773.1262 -3270.8408 3773.4163 -3271.1543 3773.7747 C
-3271.6465 3773.9783 -3271.5576 3773.6343 -3271.7969 3773.4253 C
-3271.5935 3773.9182 -3272.4231 3774.1431 -3272.3159 3774.8687 C
-3271.8843 3774.6133 L
-3271.8762 3774.7263 -3272.0327 3774.9063 -3271.9128 3775.0095 C
f
-3270.5745 3772.3843 m
-3270.4216 3772.3352 L
-3270.5959 3772.2664 -3270.7207 3772.1079 -3270.9504 3771.7976 C
-3271.2048 3771.9915 -3271.2576 3772.1382 -3271.2751 3772.27 C
-3270.5222 3772.3252 L
-3270.5745 3772.3843 L
f
-3269.7351 3772.3335 m
-3269.8545 3772.7644 -3270.2217 3772.948 -3269.9968 3773.4143 C
-3269.5481 3773.3843 -3269.6824 3773.0542 -3269.4143 3772.8672 C
-3270.1384 3772.9744 -3269.2063 3772.6272 -3269.7295 3772.3831 C
-3269.5872 3772.3096 -3269.4592 3772.2871 -3269.3384 3772.2693 C
-3269.4688 3772.2173 -3269.5945 3772.1519 -3269.7129 3772.0723 C
-3269.7063 3772.0823 -3269.7017 3772.0896 -3269.6963 3772.0991 C
-3269.6929 3772.0984 L
-3269.6929 3772.1006 -3269.6936 3772.1016 -3269.6936 3772.104 C
-3269.6624 3772.1582 -3269.6521 3772.1912 -3269.6873 3772.1604 C
-3269.6897 3772.1653 -3269.6985 3772.167 -3269.7024 3772.1692 C
-3269.7073 3772.2283 -3269.7207 3772.2808 -3269.7351 3772.3311 C
-3269.9448 3772.2422 -3269.7681 3772.22 -3269.7024 3772.1692 C
-3269.7 3772.1472 -3269.6943 3772.1272 -3269.6936 3772.104 C
-3269.6943 3772.1023 -3269.6953 3772.1006 -3269.6963 3772.0991 C
-3270.4216 3772.3352 L
-3270.2681 3772.3953 -3270.0759 3772.3831 -3269.7351 3772.3335 C
f
-3266.0952 3774.4951 m
-3266.1177 3774.4573 -3266.1167 3774.4263 -3266.1184 3774.3953 C
-3266.1653 3774.448 -3266.1831 3774.4839 -3266.0952 3774.4951 C
f
-3266.3936 3774.2351 m
-3266.3408 3774.1753 -3266.2969 3774.0032 -3266.1255 3774.0471 C
-3265.9768 3774.1763 -3266.1262 3774.2534 -3266.1184 3774.3953 C
-3266.0151 3774.2808 -3265.7568 3774.0862 -3266.0808 3773.8762 C
-3266.1321 3773.9351 L
-3266.4241 3773.7871 -3266.7993 3773.2495 -3266.7483 3773.1902 C
-3266.6631 3773.5784 -3266.5879 3773.8542 -3266.3936 3774.2351 C
f
-3268.0852 3773.3943 m
-3268.6892 3773.6055 L
-3268.3816 3773.9783 L
-3268.3972 3773.7544 L
-3268.0537 3773.8423 -3268.1279 3773.5667 -3268.0852 3773.3943 C
f
-3271.3833 3772.052 m
-3271.3032 3771.5967 L
-3271.6521 3772.24 L
-3271.3833 3772.052 L
f
-3272.1682 3772.1062 m
-3272.1392 3771.7112 L
-3272.3464 3771.9495 L
-3272.1682 3772.1062 L
f
-3316.4617 3777.0166 m
-3316.6392 3777.1287 L
-3316.5552 3777.0942 -3316.5012 3777.0564 -3316.4617 3777.0166 C
f
-3315.1768 3777.0435 m
-3315.1453 3776.8484 L
-3315.2048 3776.9558 -3315.2292 3777.0352 -3315.1768 3777.0435 C
f
-3291.4456 3772.1511 m
-3291.7041 3771.7815 -3291.9929 3771.2083 -3291.9617 3771.6536 C
-3291.8823 3772.0872 L
-3291.7017 3772.0095 -3291.5632 3772.0576 -3291.4456 3772.1511 C
f
-3304.6479 3774.7415 m
-3304.6233 3774.7832 -3304.5977 3774.8286 -3304.5723 3774.8728 C
-3304.5095 3774.7246 -3304.4504 3774.5872 -3304.3977 3774.4583 C
-3304.4729 3774.5471 -3304.5583 3774.6416 -3304.6479 3774.7415 C
f
-3304.8303 3776.5366 m
-3305.1711 3776.2566 L
-3305.0945 3776.3542 -3304.9849 3776.448 -3304.8303 3776.5366 C
f
-3323.4792 3777.4768 m
-3323.6863 3777.9182 L
-3323.3623 3777.9163 -3323.5049 3777.6936 -3323.4792 3777.4768 C
f
-3280.2073 3772.2664 m
-3280.4304 3772.0967 -3280.6079 3772.0254 -3280.7639 3772.0044 C
-3280.4951 3772.2534 -3280.2783 3772.6272 -3280.2073 3772.2664 C
f
-3315.9561 3772.4126 m
-3316.0647 3772.4912 -3316.1111 3772.5796 -3316.1079 3772.6763 C
-3315.9961 3772.6023 -3315.9329 3772.5193 -3315.9561 3772.4126 C
f
-3281.4082 3772.0059 m
-3281.3689 3772.0496 -3281.3303 3772.0713 -3281.2903 3772.1079 C
-3281.1272 3772.0352 -3280.9631 3771.9768 -3280.7639 3772.0044 C
-3280.9624 3771.8196 -3281.1897 3771.7046 -3281.4082 3772.0059 C
f
-3348.9297 3777.1172 m
-3348.9482 3777.0984 -3348.9705 3777.0884 -3348.9873 3777.0652 C
-3348.9929 3777.1243 -3348.9673 3777.1272 -3348.9297 3777.1172 C
f
-3356.3442 3772.74 m
-3356.2712 3772.7124 -3356.1521 3772.7119 -3356.0398 3772.7063 C
-3356.0945 3772.6763 -3356.1863 3772.6792 -3356.3442 3772.74 c
f
-3275.3264 3771.917 m
-3275.1599 3771.8887 -3275.3 3771.8694 -3275.3264 3771.917 C
-3275.3264 3771.917 L
f
-3274.5168 3773.6331 m
-3274.5522 3773.6814 -3274.5791 3773.7439 -3274.5833 3773.844 C
-3274.5696 3773.74 -3274.5464 3773.6736 -3274.5168 3773.6331 c
f
-3283.0664 3774.7063 m
-3283.0713 3774.7063 -3283.0752 3774.7046 -3283.0808 3774.7046 C
-3283.0313 3774.7896 -3283.0398 3774.7732 -3283.0664 3774.7063 C
f
-3275.0759 3772.1143 m
-3275.1384 3772.0613 -3275.2104 3772.0166 -3275.2888 3771.9856 C
-3275.2544 3772.0193 -3275.1897 3772.0613 -3275.0759 3772.1143 C
f
-3275.1096 3771.9092 m
-3275.0522 3771.9287 -3275.0071 3771.9395 -3274.9641 3771.9512 C
-3274.9431 3771.8792 -3274.9617 3771.8335 -3275.1096 3771.9092 C
f
-3275.5583 3771.9407 m
-3275.4631 3771.9336 -3275.3743 3771.9539 -3275.2888 3771.9856 C
-3275.3215 3771.9558 -3275.3352 3771.9319 -3275.3264 3771.917 C
-3275.3752 3771.9236 -3275.4441 3771.9326 -3275.5583 3771.9407 c
f
-3335.2932 3775.9558 m
-3335.3042 3775.9424 -3335.3169 3775.9336 -3335.3289 3775.9153 C
-3335.4968 3776.0952 -3335.4231 3776.0667 -3335.2932 3775.9558 C
f
-3295.7783 3776.6563 m
-3295.7705 3776.6519 -3295.7664 3776.6404 -3295.7593 3776.636 C
-3295.7671 3776.6311 -3295.7769 3776.625 -3295.7839 3776.6199 C
-3295.7783 3776.6563 L
f
-3296.3762 3776.979 m
-3296.1216 3776.4392 -3295.9768 3776.5056 -3295.7839 3776.6199 C
-3295.9817 3775.3694 L
-3296.3762 3776.979 L
f
*u
-3319.5383 3777.1416 m
-3319.1184 3777.532 L
-3319.6252 3778.1736 -3319.9919 3777.9524 -3319.5977 3778.5 C
-3319.5383 3777.1416 -3317.9656 3778.3616 -3317.9072 3777.0039 C
-3317.6304 3777.2896 L
-3317.7097 3777.2766 -3317.7224 3777.3562 -3317.8008 3777.3433 C
-3317.2625 3777.9934 -3317.4009 3776.3616 -3316.7073 3776.5542 C
-3316.4656 3776.6582 -3316.2969 3776.855 -3316.4617 3777.0166 C
-3315.9231 3776.6807 L
-3315.7664 3776.7073 -3315.8047 3776.9431 -3315.9607 3776.917 C
-3315.1392 3776.8086 L
-3315.1453 3776.8484 L
-3315.0281 3776.636 -3314.7625 3776.3064 -3314.6328 3776.1663 C
-3314.4241 3776.3616 -3314.7375 3776.3103 -3314.6841 3776.479 C
-3314.2292 3776.1504 L
-3314.0439 3776.5032 -3314.4209 3776.844 -3314.7351 3776.7935 C
-3314.3103 3778.1494 -3314.3577 3776.4524 -3313.4409 3777.2444 C
-3313.8704 3777.4163 L
-3313.5935 3778.1863 -3313.2583 3777.9072 -3312.7727 3778.3875 C
-3312.8879 3778.1367 -3313.7449 3777.1775 -3313.2512 3776.8391 C
-3313.1121 3776.9414 -3312.9287 3776.99 -3312.6624 3776.7168 C
-3312.6599 3777.2 -3312.3999 3777.0811 -3312.0745 3777.0535 C
-3312.0967 3777.6936 L
-3311.7449 3777.5088 -3311.7727 3777.1831 -3311.5657 3776.8953 C
-3311.1736 3776.9583 -3311.0923 3777.4536 -3311 3777.8711 C
-3310.3721 3777.9727 -3311.4336 3777.0767 -3310.6904 3776.9558 C
-3310.1682 3777.2007 -3309.8015 3776.9392 -3309.1768 3776.5564 C
-3308.8113 3776.7776 -3309.2407 3776.948 -3309.1096 3777.1311 C
-3308.7856 3776.6206 L
-3308.7063 3776.6331 -3308.7319 3776.7896 -3308.7449 3776.8687 C
-3308.4719 3776.6707 -3308.7224 3776.229 -3308.2932 3776.0559 C
-3308.1775 3775.3511 -3307.4121 3777.0852 -3306.8809 3776.2854 C
-3306.75 3776.4673 -3306.9441 3776.6775 -3306.9041 3776.9253 C
-3306.1753 3776.3999 -3306.2793 3776.5435 -3305.6809 3775.8367 C
-3305.1711 3776.2566 L
-3305.5457 3775.7766 -3305.0671 3775.2083 -3304.6479 3774.7415 C
-3304.7808 3774.5095 -3304.8943 3774.3064 -3304.9705 3774.2095 C
-3304.3015 3773.8662 L
-3304.2207 3773.9712 -3304.2881 3774.1912 -3304.3977 3774.4583 C
-3304.3521 3774.4055 -3304.3088 3774.3533 -3304.2751 3774.3047 C
-3304.0359 3774.5413 -3304.1599 3774.9104 -3304.3313 3775.2678 C
-3304.4128 3775.1416 -3304.4937 3775.0071 -3304.5723 3774.8728 C
-3304.7375 3775.2615 -3304.8921 3775.6919 -3304.8577 3776.0667 C
-3304.8142 3775.9927 -3304.7305 3775.9292 -3304.6384 3775.8936 C
-3304.6816 3775.9993 -3304.7092 3776.0935 -3304.6892 3776.1575 c
-3304.6665 3776.2246 -3304.5967 3776.0833 -3304.4873 3775.9199 C
-3304.3352 3776.6331 L
-3304.2983 3776.3499 L
-3303.4231 3776.7959 L
-3302.7969 3776.0784 -3302.2522 3775.021 -3301.2583 3774.7271 C
-3301.5049 3775.25 -3301.3113 3775.5811 -3301.3247 3776.2007 C
-3301.5959 3775.5447 -3302.0945 3776.479 -3302.6096 3776.3462 c
-3302.3408 3776.4153 -3302.3999 3776.7112 -3302.4683 3776.813 C
-3301.5496 3776.2168 L
-3301.5703 3776.7239 -3301.3545 3776.5967 -3301.1145 3776.8064 C
-3301.2959 3775.8047 -3300.4297 3776.1392 -3300.0559 3775.8323 C
-3300.0327 3776.1682 -3300.1223 3776.5122 -3300.5784 3776.4304 C
-3300.0752 3777.1848 -3299.9282 3775.2544 -3299.4343 3775.8953 C
-3299.5457 3775.9031 -3299.6057 3775.8518 -3299.6497 3776.0232 C
-3299.3896 3775.7239 -3298.7537 3775.9612 -3298.9033 3776.2534 C
-3299.0144 3776.2603 L
-3298.2751 3776.3792 -3296.7639 3776.2678 -3296.6536 3775.417 C
-3296.6462 3775.5276 -3296.7505 3776.4424 -3296.7952 3776.6143 C
-3295.4761 3773.7527 L
-3295.5923 3774.4832 -3295.1462 3776.2224 -3295.7593 3776.636 C
-3295.5833 3776.74 -3295.3655 3776.8616 -3294.9944 3776.6033 C
-3295.1145 3776.4993 -3295.2937 3775.5471 -3295.1296 3775.48 C
-3294.6792 3776.2932 -3294.8169 3775.9153 -3294.2617 3776.6084 C
-3294.4417 3776.4524 -3294.2417 3775.3064 -3293.9573 3775.3433 C
-3294.0017 3775.5144 -3293.9336 3776.4734 -3294.0376 3776.5928 C
-3293.3296 3775.4683 L
-3293.5063 3775.6707 -3293.3608 3776.4214 -3293.2024 3776.74 C
-3293.2759 3776.5193 -3292.5903 3776.76 -3292.4016 3776.6487 C
-3292.7017 3776.3875 L
-3291.9023 3776.5579 -3291.9121 3774.8064 -3291.1191 3774.8655 C
-3291.2151 3775.0974 -3291.3562 3776.2952 -3290.9529 3776.4363 C
-3290.7681 3775.8606 -3290.1345 3773.6663 -3289.4329 3773.2227 C
-3289.2983 3773.552 L
-3288.76 3773.1768 L
-3289.0952 3774.0435 -3290.0359 3775.8672 -3290.5496 3776.5767 C
-3290.2505 3776.8374 -3290.4663 3776.9656 -3290.0183 3776.9351 C
-3289.8601 3777.2439 -3290.2625 3777.4031 -3290.3943 3777.4214 C
-3289.3513 3777.6206 L
-3289.3977 3776.948 -3288.5537 3776.9463 -3288.5935 3776.3862 C
-3289.7263 3777.0833 L
-3289.7722 3776.4119 -3289.0713 3775.1753 -3288.3323 3775.2932 C
-3288.1443 3775.5613 -3288.4729 3776.49 -3288.4575 3776.7144 C
-3288.3616 3776.4832 -3287.7561 3776.2722 -3287.6882 3776.4363 C
-3288.0017 3776.7959 L
-3287.5903 3777.0486 -3287.3303 3775.9048 -3286.8359 3776.5464 C
-3286.6653 3776.5896 -3286.3264 3777.4119 -3286.2969 3777.0144 C
-3286.5752 3776.2471 -3286.6296 3773.8743 -3286.4441 3773.2979 C
-3286.3843 3773.3499 -3285.5481 3774.0313 -3285.3533 3774.4104 C
-3285.0723 3775.0122 -3285.7751 3775.844 -3285.5359 3776.3606 C
-3285.5256 3776.1768 -3285.3704 3775.9502 -3285.3057 3775.8772 C
-3285.1265 3776.0342 -3285.3799 3776.4463 -3284.9905 3776.3633 C
-3284.9255 3775.6824 -3284.1985 3776.4207 -3284.8064 3775.7871 C
-3284.4255 3775.5923 -3284.4016 3775.9282 -3283.9543 3775.8975 C
-3284.0967 3775.4573 -3283.5527 3774.3992 -3283.1711 3774.2039 C
-3283.1936 3774.3772 -3283.1079 3774.6033 -3283.0664 3774.7063 C
-3282.2856 3774.7678 -3281.8665 3775.0774 -3281.1384 3775.0833 C
-3281.0713 3775.2483 -3280.72 3775.448 -3280.8696 3775.7415 C
-3280.7649 3775.6206 -3280.6687 3775.3894 -3280.4441 3775.3733 C
-3280.0095 3775.9624 -3280.9448 3775.4646 -3280.6135 3776.1736 C
-3280.5852 3775.7776 -3280.0327 3775.6262 -3279.7129 3775.3792 C
-3279.8113 3774.7671 -3280.4519 3775.2615 -3280.7722 3775.5088 C
-3280.7737 3774.6653 -3280.2161 3773.7815 -3279.4551 3773.3911 C
-3278.8503 3773.1814 -3279.1929 3773.9363 -3279.0879 3773.8167 C
-3277.9519 3773.9639 -3278.1201 3772.3433 -3277.1768 3772.9524 C
-3276.8025 3773.4895 -3277.1599 3774.021 -3277.0769 3774.4092 C
-3277.5696 3774.6128 -3277.8333 3774.0679 -3278.1672 3774.0896 C
-3277.7561 3774.344 L
-3277.9128 3774.5232 -3278.2417 3774.6582 -3278.4209 3774.5032 C
-3278.1072 3774.9856 -3276.5017 3774.5952 -3275.6252 3775.0413 C
-3275.4695 3774.8616 -3275.2007 3774.6743 -3275.3279 3774.4583 C
-3275.6052 3774.5332 L
-3275.8601 3774.0999 -3275.0833 3773.9336 -3275.4343 3773.7312 C
-3275.0623 3773.4263 -3274.6453 3772.9473 -3274.1216 3773.1924 C
-3274.0232 3773.8054 L
-3274.0344 3773.6262 -3274.3655 3773.4407 -3274.5127 3773.6272 c
-3274.2944 3773.355 -3273.7097 3774.4573 -3273.4705 3773.6543 C
-3273.8376 3773.2295 L
-3273.4641 3772.9214 -3273.0024 3772.2703 -3272.5383 3772.4639 C
-3272.7495 3771.8584 -3272.6453 3772.5332 -3272.9751 3771.8247 C
-3272.6892 3772.7063 -3274.1624 3771.7876 -3273.7031 3772.7134 C
-3274.0415 3771.8916 -3274.2888 3772.3655 -3274.7312 3771.6638 C
-3274.7175 3771.8662 -3274.5745 3772.0513 -3274.9641 3771.9512 C
-3274.9817 3772.0103 -3275.0232 3772.0852 -3275.0496 3772.1294 C
-3275.0615 3772.1243 -3275.0657 3772.1206 -3275.0759 3772.1143 C
-3275.0681 3772.1223 -3275.0623 3772.1311 -3275.0544 3772.1382 C
-3275.0713 3772.1687 -3275.0728 3772.1753 -3275.0464 3772.1462 C
-3274.9536 3772.2356 -3274.8784 3772.3416 -3274.8479 3772.4539 C
-3275.0413 3772.9182 -3275.6609 3772.9038 -3275.8704 3773.1443 C
-3276.1016 3773.0479 -3275.7737 3772.9119 -3275.8999 3772.6963 C
-3276.2129 3773.0559 L
-3276.2439 3772.6072 -3276.8271 3772.3096 -3276.2825 3772.0464 C
-3276.7727 3772.0264 L
-3277.0613 3771.7747 -3277.4583 3771.6743 -3277.7031 3771.8633 C
-3277.9343 3771.7664 -3278.2871 3772.3606 -3278.0857 3772.0088 C
-3278.8545 3772.2871 L
-3278.8616 3772.1753 L
-3279.6201 3772.1184 -3280.4231 3772.9192 -3281.2903 3772.1079 C
-3281.5457 3772.2212 -3281.8096 3772.3599 -3282.2368 3772.2327 C
-3282.3201 3771.844 L
-3282.6479 3771.979 -3283.3047 3771.4551 -3283.4456 3771.8599 C
-3283.7993 3770.8142 -3285.0369 3771.6316 -3285.6135 3771.4463 C
-3285.6353 3771.9536 L
-3286.0322 3771.9253 -3286.4128 3772.0696 -3286.9055 3772.2727 C
-3286.8752 3772.7207 L
-3287.3 3773.0886 -3287.9673 3772.4019 -3288.6392 3772.448 C
-3288.5935 3772.2766 -3288.4231 3772.3213 -3288.3025 3772.4253 C
-3289.1052 3771.4119 -3289.9961 3773.1614 -3290.7241 3772.4236 C
-3290.9055 3772.5872 -3291.0369 3772.5313 -3291.1641 3772.4192 C
-3291.1472 3772.4175 -3291.1321 3772.4092 -3291.1191 3772.3953 C
-3291.1377 3772.3904 -3291.1653 3772.3887 -3291.1936 3772.3894 C
-3291.2737 3772.3123 -3291.3562 3772.2227 -3291.4456 3772.1511 C
-3291.3696 3772.26 -3291.2969 3772.3496 -3291.2336 3772.3911 C
-3291.3735 3772.4004 -3291.5857 3772.4558 -3291.7937 3772.5686 C
-3291.8823 3772.0872 L
-3291.8992 3772.0935 -3291.9128 3772.0923 -3291.9304 3772.1006 C
-3292.1345 3771.9231 -3292.0945 3772.3286 -3291.9856 3772.6912 C
-3292.0903 3772.77 -3292.1863 3772.8655 -3292.2607 3772.9812 C
-3292.4265 3772.2039 -3292.8064 3773.2432 -3293.0327 3772.4143 C
-3293.1729 3772.8184 -3294.0784 3772.7183 -3294.1892 3773.5696 C
-3294.1963 3773.4583 -3294.2576 3773.4055 -3294.1453 3773.3982 C
-3294.3772 3773.3015 -3294.6089 3773.2046 -3294.8169 3773.4446 C
-3294.9153 3772.8323 L
-3295.4216 3773.6553 L
-3295.7292 3773.2822 -3295.8567 3773.0652 -3295.5513 3772.5942 C
-3296.2888 3773.3196 -3296.1497 3772.8672 -3296.7769 3773.5852 C
-3296.7463 3773.1895 L
-3296.9705 3773.2046 -3297.3289 3773.7356 -3297.4641 3773.4082 C
-3297.9656 3772.6553 -3299.9456 3773.3042 -3301.2329 3772.604 C
-3300.9832 3773.77 -3301.8313 3772.0823 -3301.8823 3772.9856 C
-3301.9573 3772.7102 -3302.1367 3772.5542 -3301.9282 3772.3152 C
-3302.5852 3772.5852 -3302.9153 3771.8772 -3303.3689 3772.6392 C
-3303.4441 3772.3623 -3303.2283 3772.2356 -3303.2952 3772.0713 C
-3303.3479 3772.1311 -3303.5039 3772.3113 -3303.5723 3772.1462 c
-3303.6392 3771.9822 -3303.4761 3771.9153 -3303.3721 3771.7952 C
-3304.0432 3771.8416 -3304.1111 3772.6912 -3304.1599 3773.4883 C
-3304.5 3773.1111 -3304.6697 3773.1638 -3304.9153 3773.6873 C
-3305.0337 3773.4263 -3305.2312 3773.1536 -3304.8142 3773.0598 C
-3305.0488 3773.0215 -3306.2473 3772.6775 -3306.2712 3773.3167 C
-3306.3447 3773.1543 -3306.5991 3773.2693 -3306.6609 3773.3433 C
-3307.1873 3773.3047 -3307.2336 3773.2471 -3307.7505 3773.3079 C
-3307.6072 3773.4119 L
-3307.8113 3774.1831 -3308.0369 3773.584 -3308.4536 3773.6768 C
-3308.4417 3773.5984 L
-3309.3972 3773.0415 -3308.8542 3773.8643 -3309.7969 3773.229 C
-3309.7456 3773.709 L
-3309.8335 3774.7407 -3310.5808 3773.1006 -3311.1279 3773.4951 C
-3310.9304 3773.7693 L
-3311.2292 3774.1223 -3311.7656 3772.3662 -3312.0657 3772.2371 C
-3312.1311 3772.1472 -3311.9624 3772.0935 -3311.8711 3772.0276 C
-3312.6567 3771.4182 -3311.9729 3772.6553 -3312.5583 3772.8015 C
-3312.6663 3772.4624 -3312.4192 3771.9392 -3312.8132 3771.8762 C
-3313.0095 3771.6023 -3313.9561 3772.9768 -3314.4937 3772.3267 C
-3314.3752 3772.5879 -3314.2576 3772.8484 -3314.5295 3773.0447 C
-3314.9463 3773.1382 -3315.6563 3772.0579 -3316.0327 3772.8816 C
-3316.0857 3772.8096 -3316.1057 3772.7415 -3316.1079 3772.6763 C
-3316.4265 3772.8887 -3317.1433 3773.0291 -3317.3352 3773.4756 C
-3317.6296 3771.8191 -3319.3159 3774.2815 -3319.3088 3772.7534 C
-3320.2888 3772.8352 L
-3320.2632 3772.6792 L
-3320.8896 3772.5784 -3321.1111 3772.9446 -3321.3313 3773.3113 C
-3321.4761 3773.2073 -3321.3704 3773.0642 -3321.3584 3772.9846 C
-3322.2737 3772.6763 -3322.3647 3772.7415 -3323.1321 3773.5032 C
-3323.2119 3773.0071 L
-3323.4199 3773.2952 -3324.5352 3772.2295 -3325.4329 3772.8079 C
-3325.4241 3772.751 -3325.4055 3772.6553 -3325.3342 3772.5852 C
-3326.3442 3773.167 -3327.7522 3771.2112 -3328.1223 3773.0159 C
-3328.7888 3773.4607 L
-3327.9265 3773.6006 -3328.9172 3774.2444 -3328.5625 3774.5435 C
-3328.9016 3774.6494 -3329.4392 3773.9993 -3329.0225 3773.9063 C
-3328.9573 3773.9966 L
-3328.8042 3773.0559 -3330.0288 3773.6631 -3330.0056 3773.0222 C
-3331.7024 3773.0696 -3333.3562 3772.5479 -3334.9456 3772.5078 C
-3334.7625 3773.2393 L
-3335.3169 3773.1975 L
-3335.4624 3773.0276 -3335.5122 3772.625 -3335.1167 3772.6553 C
-3335.3247 3772.2407 -3335.78 3773.0032 -3335.7913 3773.1614 C
-3336.5657 3772.8655 -3335.4888 3772.3086 -3335.7263 3772.2913 C
-3336.0488 3772.3455 L
-3335.9761 3772.4312 L
-3336.2375 3772.73 -3336.2607 3773.0471 -3336.7361 3773.0112 C
-3337.0369 3772.8643 -3336.8904 3772.5598 -3337.0088 3772.532 C
-3337.0081 3772.479 -3337.0481 3772.4551 -3337.1904 3772.5103 C
-3337.8889 3772.448 L
-3337.6096 3773.0254 L
-3337.9192 3773.3103 -3338.2664 3772.9951 -3337.9441 3773.6494 c
-3338.4172 3772.6404 -3340.5496 3773.2871 -3340.8401 3772.9744 C
-3341.2737 3773.3953 -3341.7017 3773.3875 -3342.2319 3773.3367 C
-3342.1001 3773.4573 -3342.0212 3774.1062 -3342.4785 3774.0271 C
-3342.3113 3772.6873 -3343.3159 3773.4456 -3343.6855 3772.4812 C
-3343.3552 3773.1206 -3344.9856 3772.6392 -3344.4673 3773.5471 C
-3344.8489 3773.4382 -3344.4905 3773.0454 -3344.78 3772.73 C
-3345.6882 3773.2493 -3346.7815 3772.3926 -3347.9041 3772.5679 C
-3347.9216 3772.7444 -3347.7336 3773.0127 -3347.9744 3773.2747 C
-3348.5671 3772.3953 L
-3348.7888 3772.4812 -3348.7712 3773.4104 -3349.1763 3772.8 C
-3349.1191 3772.948 -3349.0337 3773.1707 -3349.1824 3773.2271 C
-3351.3816 3772.3704 -3353.6763 3773.9292 -3355.9097 3772.3191 C
-3355.6072 3772.6604 -3355.8088 3772.6936 -3356.0398 3772.7063 C
-3355.8896 3772.7876 -3356.0432 3773.1404 -3356.0137 3773.3792 C
-3356.9487 3772.7168 L
-3357.1191 3773.3784 -3357.9512 3772.7615 -3358.0488 3773.3943 C
-3357.7527 3773.28 L
-3358.1465 3774.0271 -3357.2017 3774.9395 -3357.2593 3775.8975 C
-3356.8184 3775.0486 -3356.0967 3777.1543 -3355.3733 3775.9395 C
-3355.2136 3776.1353 -3355.5095 3776.2483 -3355.4241 3776.4702 C
-3355.2407 3776.0598 -3355.0193 3775.9744 -3354.6089 3776.1582 C
-3354.6553 3776.26 L
-3353.5024 3776.1599 -3353.0081 3776.5647 -3351.7129 3776.8342 C
-3351.8088 3776.3606 L
-3351.5305 3776.4236 -3351.4719 3776.5723 -3351.3416 3776.6912 C
-3351.0222 3775.9727 -3352.1233 3776.6504 -3351.8323 3775.8584 C
-3351.4631 3776.8223 -3349.8696 3775.8728 -3349.6201 3776.9683 C
-3349.1919 3776.9744 -3349.7456 3776.4199 -3349.3176 3776.4263 C
-3349.2041 3776.7227 L
-3349.0959 3776.3408 L
-3348.8152 3776.4038 -3348.6736 3776.7747 -3348.6631 3777.0254 C
-3348.7312 3776.9956 -3348.8567 3777.0955 -3348.9297 3777.1172 C
-3348.5657 3777.4663 -3347.9033 3776.9983 -3347.7783 3777.1118 C
-3348.1897 3776.9292 L
-3347.0212 3776.6519 -3345.5945 3777.0413 -3344.4656 3776.4382 C
-3344.5513 3776.2151 L
-3343.6892 3775.8015 -3343.8608 3776.4607 -3342.9143 3776.2693 C
-3342.9487 3776.3223 L
-3342.7593 3776.0999 -3342.5063 3775.9871 -3342.2473 3776.0127 C
-3342.4863 3776.2747 -3341.7976 3776.521 -3342.1111 3776.8113 C
-3341.1763 3776.3672 -3341.6487 3776.4624 -3341.0313 3775.6316 C
-3340.8889 3776.0032 L
-3340.6785 3775.667 -3340.6609 3775.49 -3340.1882 3775.3943 C
-3340.5759 3775.7124 -3339.8865 3775.959 -3340.3208 3776.3799 C
-3339.3289 3777.1912 -3338.8479 3775.5613 -3338.3928 3776.7471 C
-3337.9373 3775.7207 -3339.2512 3776.1775 -3338.9961 3775.9575 C
-3339.2097 3775.6223 -3338.6201 3775.1902 -3338.3088 3775.2932 C
-3337.9919 3775.3167 -3337.77 3776.6072 -3336.9729 3776.5872 C
-3337.0522 3776.5823 -3337.0576 3776.6604 -3337.1367 3776.6553 C
-3336.8384 3776.917 -3336.5522 3776.3008 -3336.1863 3776.7263 C
-3335.9812 3776.105 -3335.7112 3776.7615 -3335.6521 3775.9702 C
-3336.3833 3776.1536 L
-3335.9688 3775.9463 -3335.5801 3775.02 -3334.8972 3775.4695 C
-3334.9504 3775.6287 -3335.1536 3775.8391 -3335.2932 3775.9558 C
-3335.0935 3776.1895 -3334.9087 3775.8015 -3334.7017 3776.0413 C
-3334.7607 3776.8335 -3335.5903 3776.2134 -3336.0344 3776.8174 C
-3335.8201 3777.1519 -3335.1943 3776.2439 -3335.4175 3777.1016 c
-3335.0967 3776.0112 -3334.6321 3777.24 -3334.0923 3776.4063 C
-3334.1279 3776.8806 L
-3334.0425 3776.8064 -3333.8655 3776.5823 -3333.7083 3776.5942 C
-3333.9929 3777.2095 L
-3333.5559 3776.6848 -3333.1504 3777.6692 -3332.7312 3777.3831 C
-3333.6089 3777.3975 -3332.9282 3776.8113 -3333.2993 3776.4646 C
-3332.2168 3775.8296 -3332.6768 3777.7063 -3331.4648 3777.4783 C
-3331.6289 3777.5454 -3332.0808 3777.1936 -3331.8242 3776.9734 C
-3331.5935 3777.0713 -3331.2888 3777.2534 -3331.1472 3777.5032 C
-3330.3442 3777.4038 -3331.2705 3777.0144 -3330.9287 3776.7224 C
-3330.6553 3777.3008 -3330.5344 3776.4871 -3330.1824 3776.3022 C
-3330.1799 3776.7847 L
-3329.2649 3777.0942 -3329.9373 3775.7791 -3329.1135 3776.1536 C
-3329.4617 3776.8223 L
-3329.0322 3776.6494 L
-3329.1208 3777.1982 L
-3328.6536 3776.7913 -3328.5081 3776.896 -3328.0503 3777.0503 C
-3328.1567 3776.7112 -3327.9905 3776.1753 -3327.5852 3776.1599 C
-3327.3088 3776.4463 -3327.74 3776.6184 -3327.1655 3776.5496 C
-3327.2952 3776.8511 -3327.4373 3777.23 -3327.6873 3776.7864 C
-3327.7129 3776.9436 -3327.8152 3777.0884 -3327.8416 3777.2444 C
-3327.5439 3777.5735 -3327.0935 3777.3191 -3326.8855 3777.3142 C
-3326.9656 3777.2964 -3327.0613 3777.2703 -3327.1104 3777.2024 C
-3326.2776 3776.5332 L
-3326.1465 3776.7144 -3326.2505 3776.8599 -3326.3535 3777.0032 C
-3326.1848 3776.9502 -3326.0681 3776.7283 -3325.8201 3776.6873 C
-3325.8843 3777.0791 -3325.8689 3777.4839 -3326.22 3777.6687 C
-3325.4265 3777.2334 L
-3325.3735 3777.4038 -3325.0193 3777.7024 -3325.1223 3777.8462 C
-3324.6824 3778.0767 -3324.0432 3777.0852 -3323.46 3777.3894 C
-3323.4297 3777.3135 -3323.3689 3777.2407 -3323.2449 3777.1848 C
-3322.6968 3777.2732 -3322.2112 3777.7544 -3321.5615 3777.2173 C
-3321.1929 3777.9199 L
-3320.6841 3777.7603 -3321.6919 3777.0342 -3320.8447 3776.7693 C
-3320.2449 3776.5447 -3320.6208 3777.3687 -3320.4104 3777.5642 C
-3320.1121 3777.2102 -3319.5935 3776.4888 -3319.0425 3777.0613 C
-3319.2249 3777.1936 -3319.3679 3777.0896 -3319.5383 3777.1416 C
f
1 D
-3313.2632 3776.8303 m
-3313.3848 3776.9312 -3313.6272 3777.2439 -3313.7161 3776.959 C
-3313.5776 3776.4063 -3313.4705 3776.6707 -3313.2632 3776.8303 C
f
-3303.7241 3775.6692 m
-3303.8145 3775.8279 -3303.9543 3775.7493 -3304.1121 3775.5667 C
-3303.9976 3775.5271 -3303.8679 3775.5447 -3303.7241 3775.6692 C
f
-3277.1511 3772.3096 m
-3277.1563 3772.3174 -3277.1599 3772.3232 -3277.1641 3772.3333 C
-3277.4353 3772.1453 -3277.3391 3772.22 -3277.1511 3772.3096 C
f
0 D
-3276.5879 3772.5193 m
-3276.5313 3772.4524 -3276.5352 3772.3848 -3276.5591 3772.3174 C
-3276.5984 3772.4392 -3276.7249 3772.448 -3276.8689 3772.4136 C
-3276.8289 3772.5398 -3276.7561 3772.6272 -3276.5879 3772.5193 C
f
1 D
-3337.0713 3772.709 m
-3336.9617 3772.8352 L
-3337.2092 3772.9744 -3337.1399 3772.8484 -3337.0713 3772.709 C
f
*U
0 D
-3304.8057 3776.3286 m
-3304.8401 3776.2471 -3304.8496 3776.1575 -3304.8577 3776.0667 C
-3304.9055 3776.1475 -3304.9065 3776.2415 -3304.8057 3776.3286 C
f
-3323.4409 3777.3953 m
-3323.4473 3777.3911 -3323.4536 3777.3926 -3323.46 3777.3894 C
-3323.4705 3777.4182 -3323.4761 3777.448 -3323.4792 3777.4768 C
-3323.4409 3777.3953 L
f
-3285.3123 3776.6096 m
-3285.4282 3776.5398 -3285.4929 3776.4524 -3285.5359 3776.3606 C
-3285.5422 3776.4783 -3285.4895 3776.5784 -3285.3123 3776.6096 C
f
-3273.6033 3771.6992 m
-3273.9641 3771.8247 L
-3273.7896 3771.8008 -3273.7273 3771.9063 -3273.6392 3771.9832 C
-3273.6472 3771.8704 -3273.7161 3771.7073 -3273.6033 3771.6992 C
f
-3270.4719 3774.6848 m
-3270.4192 3774.6255 -3270.3601 3774.6782 -3270.3081 3774.6184 C
-3270.3225 3774.3943 L
-3270.5471 3774.4087 -3270.7041 3774.5896 -3270.4719 3774.6848 C
f
-3273.2693 3773.3022 m
-3273.2407 3773.7083 -3273.0144 3773.5703 -3272.7617 3773.4951 C
-3272.7769 3773.4966 -3272.7913 3773.5 -3272.8064 3773.4951 C
-3272.7319 3772.9282 -3273.0012 3773.1152 -3273.2693 3773.3022 C
f
-3272.7031 3773.4812 m
-3272.6252 3773.4624 -3272.5457 3773.4524 -3272.4695 3773.4712 C
-3272.4399 3773.2439 -3272.5642 3773.4236 -3272.7031 3773.4812 C
f
-3275.8735 3772.25 m
-3275.7537 3772.3542 -3275.7983 3771.7312 -3275.7305 3771.896 C
-3275.5967 3771.3799 -3276.5295 3772.521 -3275.8735 3772.25 C
f
-3273.0647 3774.6392 m
-3273.1553 3774.1382 L
-3273.2969 3774.5422 L
-3273.0647 3774.6392 L
f
-3275.0601 3774.271 m
-3274.6563 3774.4104 L
-3274.6624 3774.3264 -3274.6111 3774.2776 -3274.5481 3774.24 C
-3274.7969 3774.2224 -3275.0696 3774.1233 -3275.0601 3774.271 C
f
-3274.5481 3774.24 m
-3274.4185 3774.2493 -3274.2952 3774.2383 -3274.2231 3774.1563 C
-3274.2932 3774.1614 -3274.4441 3774.1782 -3274.5481 3774.24 C
f
-3273.6167 3774.7896 m
-3273.7361 3774.6851 L
-3274.0212 3774.6487 L
-3273.6167 3774.7896 L
f
-3279.4009 3774.1753 m
-3279.8416 3774.3184 L
-3279.8865 3774.49 -3279.7664 3774.5952 -3279.6023 3774.5271 C
-3279.4968 3774.4072 -3279.3333 3774.3408 -3279.4009 3774.1753 C
f
-3278.0681 3775.5471 m
-3278.1873 3775.4431 -3278.1953 3775.3311 -3278.2625 3775.1663 C
-3278.2759 3775.7871 L
-3278.0681 3775.5471 L
f
-3279.3533 3775.6919 m
-3279.3972 3775.8643 -3279.9929 3776.1863 -3279.4343 3776.1475 C
-3279.3896 3775.9768 -3278.9482 3775.8335 -3279.3533 3775.6919 C
f
-3285.9937 3774.9063 m
-3285.8816 3774.8982 L
-3285.8977 3773.8799 L
-3285.9937 3774.9063 L
f
-3291.8464 3777.3433 m
-3291.3242 3777.5872 -3291.7224 3776.7144 -3291.2505 3777.0193 C
-3291.1279 3776.7783 -3291.6362 3776.7703 -3291.5105 3776.5623 C
-3291.8257 3776.8167 -3291.9912 3776.6736 -3291.8464 3777.3433 C
f
-3291.5105 3776.5623 m
-3291.46 3776.5222 -3291.4065 3776.4734 -3291.3496 3776.4082 C
-3291.4409 3776.4712 -3291.4839 3776.52 -3291.5105 3776.5623 C
f
-3357.5745 3772.1924 m
-3357.9104 3771.98 L
-3357.6936 3772.3223 L
-3357.5745 3772.1924 L
f
-3358.2192 3772.948 m
-3358.2983 3772.2991 L
-3358.5 3772.8862 L
-3358.4241 3772.8574 -3358.2769 3772.8015 -3358.2192 3772.948 C
f
-3312.3303 3778.1375 m
-3312.3047 3777.9812 L
-3312.3567 3777.8123 -3312.4353 3777.8 -3312.5928 3777.7732 C
-3312.3303 3778.1375 L
f
-3316.8848 3777.6519 m
-3316.8064 3777.6653 L
-3316.9529 3777.0784 L
-3316.8848 3777.6519 L
f
-3320.7073 3778.4004 m
-3320.5513 3778.4253 -3320.3679 3778.2942 -3320.2112 3778.3196 C
-3320.5513 3778.4253 -3320.7495 3777.6692 -3320.7073 3778.4004 C
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat)0 A
u
1 Ap
0 J 0 j 1 w 10 M []0 d0 XR
-7203.4036 7651 m
-7230.5408 7651 L
-7230.5408 7630.9818 L
-7203.4036 7630.9818 L
-7203.4036 7651 L
n
0 Ap
0 O
0.518791 0.330968 0.203952 0.000275 0.513725 0.6 0.694118 Xa
4 M-7231 7651 m
-7203 7651 L
-7203 7644.2663 L
-7231 7644.2663 L
-7231 7651 L
f
0.203555 0.110079 0.104128 0 0.784314 0.823529 0.847059 Xa
-7231 7644.2687 m
-7203 7644.2687 L
-7203 7643.1079 L
-7231 7643.1079 L
-7231 7644.2687 L
f
0.371405 0.218784 0.109804 0 0.627451 0.701961 0.792157 Xa
-7203 7643.1079 m
-7203 7630.9818 L
-7231 7630.9818 L
-7231 7643.1079 L
-7203 7643.1079 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)0 A
u
0 J 0 j 1 w 10 M []0 d0 XR
-7231 7651 m
-7203 7651 L
-7203 7623 L
-7231 7623 L
-7231 7651 L
n
u
q
-7203.4592 7627.0187 m
-7227.0369 7627.0187 l
-7207.0187 7647.0369 l
-7203.4592 7647.0369 l
-7203.4592 7627.0187 l
h
W
n
0 O
0.518791 0.330968 0.203952 0.000275 0.513725 0.6 0.694118 Xa
4 M-7203 7627.0187 m
-7231 7627.0187 L
-7231 7633.7523 L
-7203 7633.7523 L
-7203 7627.0187 L
f
0.203555 0.110079 0.104128 0 0.784314 0.823529 0.847059 Xa
-7203 7633.7499 m
-7231 7633.7499 L
-7231 7634.9108 L
-7203 7634.9108 L
-7203 7633.7499 L
f
0.371405 0.218784 0.109804 0 0.627451 0.701961 0.792157 Xa
-7231 7634.9108 m
-7231 7647.0369 L
-7203 7647.0369 L
-7203 7634.9108 L
-7231 7634.9108 L
f
Q
0 A
q
0 J 0 j 1 w 10 M []0 d0 XR
-7227.0369 7650.5964 m
-7227.0369 7627.0187 l
-7207.0187 7647.0369 l
-7207.0187 7650.5964 l
-7227.0369 7650.5964 l
h
W
n
0 O
0.518791 0.330968 0.203952 0.000275 0.513725 0.6 0.694118 Xa
4 M-7227.0369 7623 m
-7227.0369 7651 L
-7220.3032 7651 L
-7220.3032 7623 L
-7227.0369 7623 L
f
0.203555 0.110079 0.104128 0 0.784314 0.823529 0.847059 Xa
-7220.3056 7623 m
-7220.3056 7651 L
-7219.1448 7651 L
-7219.1448 7623 L
-7220.3056 7623 L
f
0.371405 0.218784 0.109804 0 0.627451 0.701961 0.792157 Xa
-7219.1448 7651 m
-7207.0187 7651 L
-7207.0187 7623 L
-7219.1448 7623 L
-7219.1448 7651 L
f
Q
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 5)0 A
u
0 J 0 j 1 w 10 M []0 d0 XR
-7231 7651 m
-7203 7651 L
-7203 7623 L
-7231 7623 L
-7231 7651 L
n
u
q
-7206.9631 7650.5408 m
-7206.9631 7646.9813 l
-7226.9813 7626.9631 l
-7226.9813 7650.5408 l
-7206.9631 7650.5408 l
h
W
n
0 O
0.518791 0.330968 0.203952 0.000275 0.513725 0.6 0.694118 Xa
4 M-7206.9631 7651 m
-7206.9631 7623 L
-7213.6968 7623 L
-7213.6968 7651 L
-7206.9631 7651 L
f
0.203555 0.110079 0.104128 0 0.784314 0.823529 0.847059 Xa
-7213.6944 7651 m
-7213.6944 7623 L
-7214.8552 7623 L
-7214.8552 7651 L
-7213.6944 7651 L
f
0.371405 0.218784 0.109804 0 0.627451 0.701961 0.792157 Xa
-7214.8552 7623 m
-7226.9813 7623 L
-7226.9813 7651 L
-7214.8552 7651 L
-7214.8552 7623 L
f
Q
0 A
q
0 J 0 j 1 w 10 M []0 d0 XR
-7203.4036 7646.9813 m
-7206.9631 7646.9813 l
-7226.9813 7626.9631 l
-7203.4036 7626.9631 l
-7203.4036 7646.9813 l
h
W
n
0 O
0.518791 0.330968 0.203952 0.000275 0.513725 0.6 0.694118 Xa
4 M-7231 7646.9813 m
-7203 7646.9813 L
-7203 7640.2477 L
-7231 7640.2477 L
-7231 7646.9813 L
f
0.203555 0.110079 0.104128 0 0.784314 0.823529 0.847059 Xa
-7231 7640.2501 m
-7203 7640.2501 L
-7203 7639.0892 L
-7231 7639.0892 L
-7231 7640.2501 L
f
0.371405 0.218784 0.109804 0 0.627451 0.701961 0.792157 Xa
-7203 7639.0892 m
-7203 7626.9631 L
-7231 7626.9631 L
-7231 7639.0892 L
-7203 7639.0892 L
f
Q
U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Calligraphi) -
(c Brush Tool/ 10 pt. Round/ Adobe Calligraphic Brush Tool/ 3 p) -
(t. Oval/ Adobe Calligraphic Brush Tool/ Touch Calligraphic Bru) -
(sh/ Adobe ArtOnPath Brush Tool/ Charcoal - Feather/ Adobe Patt) -
(ernOnPath Brush Tool/ Silver/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Charcoal - Feather)
(1 / Unnamed 6/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(10 pt. Round)
(1 10 10 100 100 0 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Oval)
(1 3 3 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Touch Calligraphic Brush)
(1 12 12 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.749721 0.679194 0.670497 0.901457 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 1 1 1 Xa
(White)
Pc
0.749721 0.679194 0.670497 0.901457 0 0 0 Xa
(Black)
Pc
0 0.993347 1 0 1 0 0 Xa
(RGB Red)
Pc
0.06183 0 0.965423 0 1 1 0 Xa
(RGB Yellow)
Pc
0.626581 0 1 0 0 1 0 Xa
(RGB Green)
Pc
0.51809 0 0.125704 0 0 1 1 Xa
(RGB Cyan)
Pc
0.883879 0.768521 0 0 0 0 1 Xa
(RGB Blue)
Pc
0.271061 0.816068 0 0 1 0 1 Xa
(RGB Magenta)
Pc
0.168917 0.979644 0.927825 0.067292 0.756863 0.152941 0.176471 Xa
(R=193 G=39 B=45)
Pc
0.00296 0.992859 0.971923 0.000885 0.929412 0.109804 0.141176 Xa
(R=237 G=28 B=36)
Pc
0 0.799161 0.966949 0.000122 0.945098 0.352941 0.141176 Xa
(R=241 G=90 B=36)
Pc
0.000214 0.500908 0.986023 0 0.968627 0.576471 0.117647 Xa
(R=247 G=147 B=30)
Pc
0 0.348547 0.872557 0 0.984314 0.690196 0.231373 Xa
(R=251 G=176 B=59)
Pc
0.045441 0 0.932189 0 0.988235 0.933333 0.129412 Xa
(R=252 G=238 B=33)
Pc
0.188754 0 0.984192 0 0.85098 0.878431 0.129412 Xa
(R=217 G=224 B=33)
Pc
0.500359 0.001617 0.993011 0 0.54902 0.776471 0.247059 Xa
(R=140 G=198 B=63)
Pc
0.746639 0 0.99765 0.000092 0.223529 0.709804 0.290196 Xa
(R=57 G=181 B=74)
Pc
0.864073 0.176333 1 0.038239 0 0.572549 0.270588 Xa
(R=0 G=146 B=69)
Pc
0.903288 0.334081 0.988586 0.260441 0 0.407843 0.215686 Xa
(R=0 G=104 B=55)
Pc
0.762325 0 0.749203 0 0.133333 0.709804 0.45098 Xa
(R=34 G=181 B=115)
Pc
0.784115 0.0907 0.457252 0.000275 0 0.662745 0.615686 Xa
(R=0 G=169 B=157)
Pc
0.697261 0.147799 0 0 0.160784 0.670588 0.886275 Xa
(R=41 G=171 B=226)
Pc
0.874906 0.526604 0 0 0 0.443137 0.737255 Xa
(R=0 G=113 B=188)
Pc
0.991974 0.964538 0.034211 0.004913 0.180392 0.192157 0.572549 Xa
(R=46 G=49 B=146)
Pc
1 1 0.261753 0.244419 0.105882 0.078431 0.392157 Xa
(R=27 G=20 B=100)
Pc
0.74554 0.984558 0.009857 0.002289 0.4 0.176471 0.568627 Xa
(R=102 G=45 B=145)
Pc
0.494453 0.992615 0.013214 0.001068 0.576471 0.152941 0.560784 Xa
(R=147 G=39 B=143)
Pc
0.348455 1 0.371618 0.108034 0.619608 0 0.364706 Xa
(R=158 G=0 B=93)
Pc
0.119234 1 0.4925 0.008789 0.831373 0.078431 0.352941 Xa
(R=212 G=20 B=90)
Pc
0 0.970886 0.203769 0 0.929412 0.117647 0.47451 Xa
(R=237 G=30 B=121)
Pc
0.228824 0.273991 0.399542 0 0.780392 0.698039 0.6 Xa
(R=199 G=178 B=153)
Pc
0.398596 0.428931 0.525505 0.068055 0.6 0.52549 0.458824 Xa
(R=153 G=134 B=117)
Pc
0.504417 0.530724 0.609705 0.236027 0.45098 0.388235 0.341176 Xa
(R=115 G=99 B=87)
Pc
0.576074 0.60415 0.637018 0.419196 0.32549 0.278431 0.254902 Xa
(R=83 G=71 B=65)
Pc
0.226596 0.383764 0.636469 0.01181 0.776471 0.611765 0.427451 Xa
(R=198 G=156 B=109)
Pc
0.315404 0.491493 0.741054 0.09897 0.65098 0.486275 0.321569 Xa
(R=166 G=124 B=82)
Pc
0.362402 0.574334 0.839933 0.226139 0.54902 0.384314 0.223529 Xa
(R=140 G=98 B=57)
Pc
0.391608 0.640558 0.93286 0.355779 0.458824 0.298039 0.141176 Xa
(R=117 G=76 B=36)
Pc
0.415717 0.700191 0.970581 0.491493 0.376471 0.219608 0.07451 Xa
(R=96 G=56 B=19)
Pc
0.477058 0.734737 0.837186 0.681422 0.258824 0.129412 0.043137 Xa
(R=66 G=33 B=11)
Pc
Bb
2 (White, Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(White, Black)
Pc
Bb
2 (Gold Dust) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Gold Dust)
Pc
Bb
2 (Blue Sky) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Blue Sky)
Pc
(Jive) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Jive)
Pc
0.558129 0 0.199985 0 0.396078 0.784314 0.815686 Xa
(C=56 M=0 Y=20 K=0)
Pc
0.51107 0.430915 0 0 0.513725 0.545098 0.772549 Xa
(C=51 M=43 Y=0 K=0)
Pc
0.264256 0.41297 0 0 0.729412 0.607843 0.788235 Xa
(C=26 M=41 Y=0 K=0)
Pc
0.749721 0.679194 0.670497 0.901457 0 0 0 Xa
(R=0 G=0 B=0)
Pc
0.72607 0.666682 0.65243 0.782345 0.101961 0.101961 0.101961 Xa
(R=26 G=26 B=26)
Pc
0.694331 0.632349 0.621027 0.583551 0.2 0.2 0.2 Xa
(R=51 G=51 B=51)
Pc
0.653956 0.580194 0.568231 0.366552 0.301961 0.301961 0.301961 Xa
(R=77 G=77 B=77)
Pc
0.597711 0.511803 0.507713 0.201297 0.4 0.4 0.4 Xa
(R=102 G=102 B=102)
Pc
0.516228 0.432044 0.432074 0.075471 0.501961 0.501961 0.501961 Xa
(R=128 G=128 B=128)
Pc
0.426154 0.347417 0.353185 0.009857 0.6 0.6 0.6 Xa
(R=153 G=153 B=153)
Pc
0.30695 0.241886 0.247776 0 0.701961 0.701961 0.701961 Xa
(R=179 G=179 B=179)
Pc
0.194675 0.150179 0.156374 0 0.8 0.8 0.8 Xa
(R=204 G=204 B=204)
Pc
0.084993 0.061036 0.066285 0 0.901961 0.901961 0.901961 Xa
(R=230 G=230 B=230)
Pc
0.037079 0.024628 0.024628 0 0.94902 0.94902 0.94902 Xa
(R=242 G=242 B=242)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(Layer 2) Ln
0 A
u
u
*u
0 O
0.994629 0.970306 0.311711 0.54995 0.027451 0 0.258824 Xa
0 J 0 j 1 w 10 M []0 d0 XR
658.1416 -823.0811 m
658.5371 -820.7695 658.998 -818.4111 659.5273 -816.002 c
660.0547 -813.5938 660.7305 -810.8887 661.5566 -807.8838 c
662.3809 -804.8818 663.3887 -801.3994 664.5762 -797.4395 c
665.7646 -793.4795 667.249 -788.7939 669.0313 -783.3818 C
667.9746 -783.4482 666.9023 -783.5469 665.8135 -783.6787 c
664.7246 -783.8115 663.6191 -783.9434 662.4971 -784.0752 C
662.5625 -782.4258 663.3389 -781.1221 664.8242 -780.1641 c
666.3086 -779.208 668.2715 -778.498 670.7139 -778.0361 c
671.1748 -776.6494 671.6553 -775.2139 672.1494 -773.7295 c
672.6445 -772.2441 673.1553 -770.6943 673.6846 -769.0762 c
674.2119 -767.46 674.7734 -765.8096 675.3672 -764.126 c
675.9609 -762.4434 676.5703 -760.6787 677.1992 -758.8301 c
677.8252 -756.9824 678.4688 -755.1016 679.1289 -753.1865 C
679.3926 -752.4609 679.6895 -751.5537 680.0205 -750.4639 c
680.3496 -749.375 680.5156 -748.3359 680.5156 -747.3457 c
680.5156 -746.8184 680.4316 -746.4551 680.2676 -746.2568 c
680.1025 -746.0586 679.7236 -745.96 679.1289 -745.96 c
677.5449 -745.96 676.0107 -746.6035 674.5254 -747.8906 c
673.041 -749.1777 671.7197 -750.8105 670.5654 -752.791 c
669.4102 -754.7705 668.502 -756.8174 667.8438 -758.9287 c
667.1826 -761.042 666.8535 -762.9229 666.8535 -764.5713 c
666.8535 -765.166 666.9023 -765.7598 667.002 -766.3535 c
667.1006 -766.9482 667.2148 -767.4766 667.3486 -767.9375 C
665.1699 -767.9375 663.6357 -767.3936 662.7451 -766.3047 c
661.8535 -765.2148 661.4082 -763.8789 661.4082 -762.2949 c
661.4082 -760.0518 662.0674 -757.8076 663.3887 -755.5625 c
664.708 -753.3193 666.4082 -751.2559 668.4863 -749.375 c
670.5654 -747.4941 672.7441 -745.9941 675.0205 -744.8711 c
677.2979 -743.749 679.3594 -743.1875 681.208 -743.1875 c
682.9902 -743.1875 684.1934 -743.6826 684.8223 -744.6729 c
685.4482 -745.6631 685.7627 -746.752 685.7627 -747.9395 c
685.7627 -748.667 685.6787 -749.3926 685.5146 -750.1182 c
685.3496 -750.8447 685.168 -751.5381 684.9707 -752.1963 C
677.248 -777.3428 L
678.1719 -777.2773 679.1123 -777.2285 680.0693 -777.1943 c
681.0254 -777.1621 682 -777.1445 682.9902 -777.1445 c
686.0918 -777.1445 689.0449 -777.2285 691.8506 -777.3926 c
694.6553 -777.5576 697.3115 -777.7725 699.8203 -778.0361 C
701.1396 -773.8125 702.4434 -769.6553 703.7305 -765.5615 c
705.0176 -761.4707 706.2061 -757.8896 707.2949 -754.8203 c
708.3838 -751.751 709.2256 -749.5898 709.8193 -748.3359 C
710.082 -747.8086 710.4453 -747.1475 710.9082 -746.3555 c
711.3691 -745.5635 711.9805 -744.8379 712.7402 -744.1777 c
713.498 -743.5186 714.3389 -743.1875 715.2646 -743.1875 C
714.3389 -745.6299 713.2842 -748.749 712.0967 -752.543 c
710.9082 -756.3389 709.7031 -760.4805 708.4824 -764.9678 c
707.2607 -769.457 706.0576 -773.9443 704.8691 -778.4316 C
706.1885 -778.498 707.459 -778.5801 708.6807 -778.6797 c
709.9014 -778.7783 711.1064 -778.8281 712.2939 -778.8281 C
710.8418 -780.3467 709.4229 -781.2529 708.0371 -781.5498 c
706.6514 -781.8477 705.2979 -781.9961 703.9785 -781.9961 C
703.3848 -784.4385 702.8232 -786.7969 702.2949 -789.0742 c
701.7666 -791.3516 701.3057 -793.5137 700.9092 -795.5586 C
699.7217 -801.1689 698.8799 -805.9541 698.3848 -809.9141 c
697.8896 -813.874 697.6426 -817.0742 697.6426 -819.5166 c
697.6426 -820.3086 697.6582 -820.9844 697.6914 -821.5459 c
697.7246 -822.1064 697.7734 -822.6182 697.8398 -823.0811 C
695.2666 -822.8164 693.4844 -822.0908 692.4941 -820.9023 c
691.5039 -819.7148 691.0098 -817.8662 691.0098 -815.3584 c
691.0098 -813.6436 691.207 -811.4824 691.6035 -808.874 c
691.999 -806.2676 692.5938 -803.4463 693.3857 -800.4102 c
693.9131 -798.4297 694.6387 -795.8066 695.5635 -792.5391 c
696.4863 -789.2725 697.5088 -785.792 698.6318 -782.0947 C
694.6055 -782.0947 691.2402 -782.1289 688.5342 -782.1934 c
685.8271 -782.2607 683.4854 -782.3271 681.5049 -782.3916 c
679.5254 -782.458 677.5449 -782.5898 675.5654 -782.7881 C
674.377 -786.6162 673.1895 -790.4111 672.001 -794.1729 c
670.8135 -797.9346 669.7246 -801.3848 668.7344 -804.5186 c
667.7441 -807.6533 666.918 -810.3096 666.2598 -812.4873 c
665.5986 -814.666 665.1699 -816.084 664.9727 -816.7451 C
664.3115 -818.9873 663.2725 -820.6055 661.8535 -821.5957 c
660.4336 -822.5859 659.1963 -823.0811 658.1416 -823.0811 C
f
*U
*u
716.1553 -819.1211 m
714.1084 -819.1211 712.376 -818.4434 710.958 -817.0908 c
709.5391 -815.7373 708.8291 -813.6758 708.8291 -810.9033 c
708.8291 -808.5273 709.3584 -805.9707 710.4131 -803.2314 c
711.4688 -800.4932 712.9209 -797.7861 714.7695 -795.1133 c
716.6162 -792.4404 718.7119 -789.999 721.0557 -787.7871 c
723.3975 -785.5771 725.873 -783.8115 728.4805 -782.4912 c
731.0869 -781.1709 733.6787 -780.5107 736.252 -780.5107 c
738.8262 -780.5107 740.9707 -781.1885 742.6875 -782.54 c
744.4023 -783.8936 745.2617 -785.6924 745.2617 -787.9355 c
745.2617 -789.5859 744.8154 -790.708 743.9248 -791.3018 c
743.0342 -791.8955 741.8613 -792.1924 740.4102 -792.1924 C
740.542 -791.665 740.6582 -791.0879 740.7568 -790.46 c
740.8555 -789.834 740.9053 -789.2568 740.9053 -788.7275 c
740.9053 -787.21 740.542 -785.9063 739.8164 -784.8174 c
739.0889 -783.7285 737.8359 -783.1836 736.0547 -783.1836 c
734.2061 -783.1836 732.3252 -783.8271 730.4111 -785.1143 c
728.4961 -786.4014 726.6494 -788.1182 724.8672 -790.2627 c
723.085 -792.4082 721.501 -794.7344 720.1152 -797.2422 c
718.7295 -799.751 717.6406 -802.2256 716.8486 -804.667 c
716.0566 -807.1094 715.6602 -809.2871 715.6602 -811.2012 c
715.6602 -813.7744 716.5518 -815.0615 718.333 -815.0615 c
719.8506 -815.0615 721.501 -814.3535 723.2832 -812.9336 c
725.0654 -811.5146 726.8965 -809.7002 728.7773 -807.4883 c
730.6592 -805.2773 732.4561 -802.9834 734.1729 -800.6074 c
735.8887 -798.2314 737.4063 -796.0537 738.7275 -794.0742 C
738.9902 -793.6777 739.1563 -793.4795 739.2227 -793.4795 C
739.6182 -793.5459 740.1289 -793.6777 740.7568 -793.876 c
741.3838 -794.0742 741.9277 -794.3379 742.3906 -794.668 c
742.8516 -794.999 743.083 -795.4277 743.083 -795.9551 c
743.083 -796.5488 742.7861 -797.3574 742.1924 -798.3799 c
741.5986 -799.4043 740.9375 -800.5752 740.2119 -801.8945 c
739.4854 -803.2158 738.8262 -804.5527 738.2324 -805.9043 c
737.6387 -807.2578 737.3418 -808.5273 737.3418 -809.7158 c
737.3418 -810.7061 737.6045 -811.6807 738.1338 -812.6367 c
738.6611 -813.5938 739.5195 -814.0713 740.707 -814.0713 c
742.4893 -814.0713 744.8311 -812.7695 747.7363 -810.1611 c
750.6396 -807.5547 753.5771 -803.6445 756.5469 -798.4297 C
757.5371 -799.4199 L
756.1514 -802.9834 754.3691 -806.1191 752.1914 -808.8252 c
750.0137 -811.5322 747.6865 -813.6436 745.2119 -815.1611 c
742.7373 -816.6787 740.3115 -817.4375 737.9355 -817.4375 c
735.4932 -817.4375 733.6934 -816.7109 732.54 -815.2598 c
731.3848 -813.8086 730.8076 -812.2246 730.8076 -810.5078 c
730.8076 -810.1113 730.8398 -809.666 730.9063 -809.1709 c
730.9717 -808.6768 731.0381 -808.166 731.1045 -807.6367 C
728.2656 -811.4648 725.6748 -814.3359 723.333 -816.25 c
720.9893 -818.1631 718.5967 -819.1211 716.1553 -819.1211 c
f
*U
*u
758.8232 -842.1875 m
757.1729 -842.1875 755.7207 -841.7422 754.4678 -840.8516 c
753.2148 -839.96 752.5859 -838.6563 752.5859 -836.9404 c
752.5859 -834.8281 753.1152 -832.9463 754.1699 -831.2979 c
755.2256 -829.6475 756.6455 -828.1299 758.4277 -826.7441 c
760.209 -825.3574 762.2539 -824.0371 764.5654 -822.7842 c
766.875 -821.5293 769.2832 -820.2744 771.792 -819.0215 c
772.7158 -816.5791 773.6563 -813.8584 774.6143 -810.8545 c
775.5703 -807.8516 776.4775 -804.5352 777.3359 -800.9043 C
775.2236 -804.3369 772.9639 -807.29 770.5547 -809.7656 c
768.1445 -812.2402 765.5879 -813.4775 762.8828 -813.4775 c
761.6279 -813.4775 760.3906 -813.1982 759.1699 -812.6367 c
757.9482 -812.0762 756.9424 -811.2012 756.1504 -810.0127 c
755.3584 -808.8252 754.9629 -807.3076 754.9629 -805.459 c
754.9629 -803.6113 755.2744 -801.4658 755.9033 -799.0234 c
756.5293 -796.583 757.3047 -794.207 758.2295 -791.8955 c
759.1533 -789.5859 760.1104 -787.6729 761.1006 -786.1533 c
762.0908 -784.6367 762.9473 -783.877 763.6748 -783.877 c
763.9375 -783.877 764.417 -783.9756 765.1104 -784.1738 c
765.8027 -784.3721 766.4619 -784.6533 767.0898 -785.0156 c
767.7168 -785.3789 768.0303 -785.7578 768.0303 -786.1533 C
767.4365 -787.0127 766.7764 -788.2324 766.0508 -789.8164 c
765.3232 -791.4004 764.6152 -793.167 763.9219 -795.1133 c
763.2285 -797.0605 762.6504 -798.959 762.1895 -800.8057 c
761.7266 -802.6543 761.4961 -804.2383 761.4961 -805.5576 c
761.4961 -806.7461 761.7598 -807.7031 762.2881 -808.4287 c
762.8154 -809.1563 763.7393 -809.5176 765.0605 -809.5176 c
766.3135 -809.5176 767.7168 -808.9082 769.2676 -807.6865 c
770.8184 -806.4658 772.3691 -804.8984 773.9209 -802.9834 c
775.4707 -801.0703 776.9063 -799.0234 778.2275 -796.8457 C
778.4258 -796.1201 778.6064 -795.3779 778.7715 -794.6182 c
778.9355 -793.8604 779.084 -793.084 779.2178 -792.292 c
779.415 -791.3682 779.8936 -790.2959 780.6533 -789.0742 c
781.4111 -787.8535 782.6162 -787.2432 784.2666 -787.2432 c
784.5957 -787.2432 784.9258 -787.2598 785.2568 -787.292 c
785.5859 -787.3262 785.9492 -787.4082 786.3457 -787.54 C
786.3457 -788.5967 786.0313 -790.5596 785.4053 -793.4307 c
784.7773 -796.3018 783.8857 -799.6514 782.7314 -803.4785 c
781.5762 -807.3076 780.207 -811.2344 778.623 -815.2598 C
781.7246 -814.0713 784.7617 -812.1084 787.7314 -809.3691 c
790.7012 -806.6309 793.1104 -802.9834 794.958 -798.4297 C
796.2451 -799.4199 L
795.2559 -802.5879 793.7529 -805.3447 791.7412 -807.6865 c
789.7266 -810.0303 787.4668 -812.042 784.959 -813.7256 c
782.4502 -815.4082 779.9756 -816.8096 777.5342 -817.9326 C
775.8174 -822.1553 773.9531 -826.1162 771.9404 -829.8125 c
769.9268 -833.5078 767.8154 -836.4951 765.6045 -838.7725 c
763.3926 -841.0488 761.1328 -842.1875 758.8232 -842.1875 c
f
1 D
758.3281 -839.0195 m
759.3184 -839.0195 760.9844 -837.7158 763.3281 -835.1094 c
765.6699 -832.501 768.1621 -827.9316 770.8027 -821.3975 C
768.0957 -822.8486 765.5879 -824.2842 763.2783 -825.7041 c
760.9678 -827.123 759.1201 -828.6572 757.7344 -830.3076 c
756.3486 -831.957 755.6553 -833.8721 755.6553 -836.0498 c
755.6553 -836.5771 755.8535 -837.2041 756.249 -837.9307 c
756.6455 -838.6563 757.3389 -839.0195 758.3281 -839.0195 c
f
*U
*u
0 D
798.917 -817.4375 m
797.7939 -817.4375 796.6553 -817.1563 795.502 -816.5967 c
794.3457 -816.0352 793.3887 -815.127 792.6309 -813.874 c
791.873 -812.6211 791.4922 -811.0371 791.4922 -809.1221 c
791.4922 -806.9434 792.0215 -804.5029 793.0762 -801.7959 c
794.1309 -799.0898 795.5508 -796.4004 797.333 -793.7275 c
799.1152 -791.0547 801.1602 -788.5791 803.4707 -786.3027 c
805.7803 -784.0254 808.1895 -782.2109 810.6982 -780.8574 c
813.2061 -779.5049 815.6807 -778.8281 818.123 -778.8281 c
819.5088 -778.8281 820.5811 -779.0752 821.3408 -779.5703 c
822.0986 -780.0654 822.4795 -780.8418 822.4795 -781.8965 c
822.4795 -782.1611 822.4619 -782.3916 822.4297 -782.5898 c
822.3955 -782.7881 822.3457 -783.0195 822.2813 -783.2832 C
821.9502 -782.7549 821.4717 -782.376 820.8457 -782.1445 c
820.2178 -781.9141 819.4424 -781.7979 818.5195 -781.7979 c
816.4063 -781.7979 814.3438 -782.4414 812.332 -783.7285 c
810.3174 -785.0156 808.4707 -786.6982 806.7881 -788.7773 c
805.1045 -790.8564 803.6348 -793.084 802.3818 -795.46 c
801.1279 -797.8359 800.1543 -800.1299 799.4619 -802.3398 c
798.7686 -804.5527 798.4219 -806.416 798.4219 -807.9336 c
798.4219 -809.3867 798.752 -810.542 799.4121 -811.3984 c
800.0713 -812.2568 800.9297 -812.6855 801.9863 -812.6855 c
803.7686 -812.6855 805.9287 -811.5645 808.4707 -809.3193 c
811.0107 -807.0771 813.6016 -803.9092 816.2422 -799.8154 c
818.8809 -795.7246 821.2568 -790.9395 823.3701 -785.4609 c
824.8213 -781.6338 826.3232 -777.7393 827.875 -773.7783 c
829.4248 -769.8184 830.9932 -766.0068 832.5771 -762.3447 c
834.1611 -758.6816 835.6953 -755.4141 837.1807 -752.543 c
838.666 -749.6719 840.084 -747.3955 841.4375 -745.7119 c
842.79 -744.0293 843.9951 -743.1875 845.0508 -743.1875 c
845.5791 -743.1875 846.041 -743.4023 846.4375 -743.8311 c
846.833 -744.2617 847.0313 -744.8057 847.0313 -745.4648 c
847.0313 -746.5215 846.4863 -748.3203 845.3975 -750.8604 c
844.3086 -753.4014 842.8887 -756.4385 841.1406 -759.9688 c
839.3916 -763.5 837.5596 -767.3438 835.6465 -771.502 c
833.7314 -775.6602 831.8994 -779.8848 830.1514 -784.1738 c
828.4023 -788.4648 826.9834 -792.6055 825.8945 -796.5986 c
824.8057 -800.5928 824.2607 -804.2383 824.2607 -807.5381 c
824.2607 -809.3867 824.3604 -810.7725 824.5586 -811.6953 c
824.7559 -812.6211 825.415 -813.082 826.5381 -813.082 c
827.9238 -813.082 829.541 -812.4873 831.3896 -811.2998 c
833.2363 -810.1113 835.085 -808.4287 836.9336 -806.251 c
838.7803 -804.0732 840.3984 -801.4658 841.7842 -798.4297 C
842.9727 -799.3203 L
841.7178 -802.6865 840.002 -805.7061 837.8242 -808.3789 c
835.6465 -811.0527 833.3193 -813.165 830.8447 -814.7148 c
828.3701 -816.2656 826.0088 -817.042 823.7666 -817.042 c
821.3232 -817.042 819.624 -816.2324 818.668 -814.6162 c
817.71 -813 817.2324 -811.334 817.2324 -809.6172 c
817.2324 -808.4951 817.3965 -807.0107 817.7275 -805.1621 c
818.0566 -803.3145 818.5195 -801.2686 819.1133 -799.0234 C
817 -802.5225 814.7568 -805.6738 812.3809 -808.4785 c
810.0049 -811.2842 807.6787 -813.4775 805.4014 -815.0615 c
803.125 -816.6455 800.9619 -817.4375 798.917 -817.4375 c
f
*U
*u
850.5947 -818.8242 m
846.5674 -818.8242 843.5479 -817.7178 841.5361 -815.5068 c
839.5234 -813.2969 838.5166 -810.5742 838.5166 -807.3398 c
838.5166 -804.3701 839.2588 -801.2354 840.7441 -797.9346 c
842.2285 -794.6357 844.209 -791.5342 846.6836 -788.6289 c
849.1592 -785.7256 851.8809 -783.3662 854.8516 -781.5498 c
857.8213 -779.7354 860.7568 -778.8281 863.6621 -778.8281 c
865.1797 -778.8281 866.583 -779.2236 867.8701 -780.0156 c
869.1572 -780.8076 869.8008 -782.4258 869.8008 -784.8672 c
869.8008 -787.376 869.0576 -789.7344 867.5732 -791.9453 c
866.0879 -794.1572 864.1406 -796.1201 861.7314 -797.8359 c
859.3223 -799.5527 856.6826 -800.9541 853.8115 -802.043 c
850.9404 -803.1318 848.085 -803.8096 845.248 -804.0732 C
845.1152 -804.7334 845.0166 -805.3594 844.9512 -805.9541 c
844.8848 -806.5479 844.8525 -807.1094 844.8525 -807.6367 c
844.8525 -808.627 844.9668 -809.6172 845.1992 -810.6064 c
845.4297 -811.5967 845.8428 -812.5049 846.4365 -813.3291 c
847.0303 -814.1553 847.8379 -814.7969 848.8623 -815.2598 c
849.8848 -815.7207 851.1543 -815.9531 852.6738 -815.9531 c
855.5107 -815.9531 858.3164 -815.1436 861.0879 -813.5273 c
863.8604 -811.9111 866.4346 -809.7822 868.8105 -807.1416 c
871.1865 -804.5029 873.1992 -801.5977 874.8496 -798.4297 C
876.0371 -799.3203 L
874.2549 -803.2813 871.9941 -806.7129 869.2559 -809.6172 c
866.5166 -812.5215 863.5459 -814.7803 860.3457 -816.3984 c
857.1436 -818.0146 853.8936 -818.8242 850.5947 -818.8242 c
f
1 D
845.7432 -802.1914 m
847.5254 -801.5977 849.5381 -800.7236 851.7822 -799.5684 c
854.0254 -798.4141 856.1875 -797.0439 858.2666 -795.46 c
860.3457 -793.876 862.0615 -792.1279 863.415 -790.2129 c
864.7666 -788.2988 865.4443 -786.2871 865.4443 -784.1738 c
865.4443 -783.4482 865.3115 -782.8867 865.0488 -782.4912 c
864.7842 -782.0947 864.2227 -781.8965 863.3652 -781.8965 c
861.7813 -781.8965 860.0986 -782.5078 858.3164 -783.7285 c
856.5342 -784.9502 854.8174 -786.5498 853.168 -788.5293 c
851.5176 -790.5098 850.0332 -792.6875 848.7129 -795.0635 c
847.3926 -797.4395 846.4023 -799.8154 845.7432 -802.1914 C
f
*U
*u
0 D
904.8447 -816.4482 m
902.5342 -816.4482 900.8018 -815.8535 899.6475 -814.666 c
898.4922 -813.4775 897.915 -811.96 897.915 -810.1113 c
897.915 -808.7256 898.1631 -807.2744 898.6572 -805.7559 c
899.1523 -804.2383 899.6309 -802.6709 900.0928 -801.0537 c
900.5537 -799.4365 900.7861 -797.8701 900.7861 -796.3506 c
900.7861 -794.5039 900.4053 -793.2324 899.6475 -792.5391 c
898.8877 -791.8467 897.9473 -791.5 896.8262 -791.5 c
894.7793 -791.5 892.7002 -792.3408 890.5889 -794.0244 c
888.4766 -795.707 886.4316 -797.8525 884.4512 -800.459 c
882.4707 -803.0674 880.623 -805.7559 878.9072 -808.5273 c
877.1904 -811.2998 875.6729 -813.7744 874.3535 -815.9531 C
873.2969 -815.9531 872.291 -815.7705 871.334 -815.4082 c
870.3779 -815.0449 869.6348 -814.5 869.1064 -813.7744 C
869.1064 -813.4453 869.4531 -812.4229 870.1455 -810.7061 c
870.8389 -808.9902 871.6475 -806.8789 872.5713 -804.3701 c
873.4951 -801.8623 874.3193 -799.2881 875.0459 -796.6475 c
875.7715 -794.0088 876.1348 -791.5986 876.1348 -789.4209 c
876.5313 -788.96 877.1572 -788.4971 878.0166 -788.0352 c
878.873 -787.5742 879.7637 -787.3418 880.6895 -787.3418 c
882.4707 -787.3418 883.3623 -788.2002 883.3623 -789.916 c
883.3623 -790.9727 883.0654 -792.7373 882.4707 -795.2119 c
881.877 -797.6875 881.1172 -800.2783 880.1943 -802.9834 C
881.9766 -800.2783 883.9717 -797.5879 886.1836 -794.915 c
888.3945 -792.2422 890.7529 -790.0146 893.2617 -788.2324 c
895.7695 -786.4512 898.2773 -785.5596 900.7861 -785.5596 c
903.3604 -785.5596 905.2246 -786.4844 906.3799 -788.332 c
907.5332 -790.1807 908.1123 -792.2266 908.1123 -794.4697 c
908.1123 -796.5166 907.7813 -798.4141 907.1221 -800.1621 c
906.4619 -801.9121 905.7861 -803.5947 905.0928 -805.2109 c
904.3994 -806.8291 904.0527 -808.4629 904.0527 -810.1113 c
904.0527 -811.498 904.333 -812.4727 904.8945 -813.0322 c
905.4551 -813.5938 906.165 -813.874 907.0234 -813.874 c
908.6719 -813.874 910.3223 -813.0986 911.9736 -811.5469 c
913.6221 -809.9971 915.2236 -808.0332 916.7744 -805.6572 c
918.3242 -803.2813 919.6953 -800.8721 920.8828 -798.4297 C
921.9717 -799.7168 L
920.5859 -802.9512 919.0342 -805.8223 917.3193 -808.3301 c
915.6025 -810.8389 913.7207 -812.8184 911.6758 -814.2695 c
909.6299 -815.7207 907.3525 -816.4482 904.8447 -816.4482 c
f
*U
*u
957.6104 -823.0811 m
953.9795 -823.0811 951.2402 -822.4697 949.3936 -821.249 c
947.5449 -820.0273 946.6211 -817.998 946.6211 -815.1611 c
946.6211 -814.9629 946.7852 -814.8643 947.1162 -814.8643 c
947.5771 -814.8643 948.4033 -815.0273 949.5908 -815.3584 c
950.7793 -815.6885 953.0566 -815.8535 956.4219 -815.8535 c
962.0977 -815.8535 967.3447 -815.21 972.1631 -813.9229 c
976.9805 -812.6367 981.1553 -810.8711 984.6865 -808.627 c
988.2168 -806.3838 990.9561 -803.8594 992.9033 -801.0537 c
994.8496 -798.249 995.8242 -795.3604 995.8242 -792.3906 c
995.8242 -789.6855 995.0645 -787.5068 993.5469 -785.8564 c
992.0283 -784.208 990.0332 -782.9531 987.5576 -782.0947 c
985.083 -781.2383 982.3926 -780.6592 979.4893 -780.3623 c
976.584 -780.0654 973.7129 -779.917 970.876 -779.917 c
969.6221 -779.917 968.3516 -779.9336 967.0645 -779.9658 c
965.7773 -780 964.5723 -780.0156 963.4512 -780.0156 C
961.9326 -785.3613 960.4473 -790.7422 958.9961 -796.1523 c
957.5439 -801.5654 956.0586 -806.8125 954.541 -811.8936 C
952.8906 -811.8936 951.5049 -811.4326 950.3828 -810.5078 c
949.2598 -809.584 948.7002 -808.4629 948.7002 -807.1416 c
948.7002 -806.3496 948.8643 -805.4268 949.1953 -804.3701 c
949.5244 -803.3145 949.8213 -802.3574 950.0859 -801.499 c
950.4824 -800.1797 951.1748 -797.9688 952.165 -794.8662 c
953.1553 -791.7646 954.3584 -788.1338 955.7783 -783.9756 c
957.1973 -779.8174 958.7646 -775.4619 960.4814 -770.9082 c
962.1963 -766.3535 963.9619 -761.8984 965.7773 -757.543 c
967.5918 -753.1865 969.3574 -749.3262 971.0742 -745.96 C
968.3018 -746.4219 965.9756 -747.083 964.0947 -747.9395 c
962.2139 -748.7979 960.7441 -749.5732 959.6895 -750.2666 c
958.6328 -750.959 957.873 -751.3057 957.4121 -751.3057 c
957.0811 -751.3057 956.6699 -751.1572 956.1748 -750.8604 c
955.6797 -750.5635 955.2344 -750.2012 954.8379 -749.7715 c
954.4424 -749.3428 954.2441 -748.9639 954.2441 -748.6328 C
957.5439 -747.2471 960.9922 -745.9941 964.5898 -744.8711 c
968.1865 -743.749 972.5596 -743.1875 977.707 -743.1875 c
979.8848 -743.1875 982.2939 -743.3701 984.9346 -743.7324 c
987.5732 -744.0957 990.082 -744.8213 992.458 -745.9102 c
994.834 -746.999 996.7803 -748.583 998.2988 -750.6621 c
999.8164 -752.7412 1000.5762 -755.498 1000.5762 -758.9287 c
1000.5762 -762.1631 999.8828 -764.918 998.4971 -767.1953 c
997.1113 -769.4727 995.2949 -771.3535 993.0518 -772.8379 c
990.8076 -774.3232 988.3652 -775.4961 985.7266 -776.3525 c
983.0859 -777.2109 980.4795 -777.8379 977.9053 -778.2334 C
982.7891 -778.498 986.7314 -779.1914 989.7354 -780.3125 c
992.7383 -781.4355 995.0156 -782.7725 996.5664 -784.3223 c
998.1172 -785.874 999.1563 -787.5068 999.6855 -789.2227 c
1000.2129 -790.9395 1000.4775 -792.5889 1000.4775 -794.1729 c
1000.4775 -798.001 999.4873 -801.4658 997.5068 -804.5674 c
995.5273 -807.6709 992.9189 -810.376 989.6865 -812.6855 c
986.4521 -814.9951 982.9199 -816.9258 979.0928 -818.4775 c
975.2646 -820.0273 971.4707 -821.1826 967.708 -821.9424 c
963.9463 -822.7002 960.5801 -823.0811 957.6104 -823.0811 c
f
1 D
964.0449 -777.7393 m
967.6738 -777.6074 971.2881 -777.1943 974.8857 -776.501 c
978.4824 -775.8086 981.7666 -774.7041 984.7363 -773.1846 c
987.7061 -771.667 990.0977 -769.6875 991.9141 -767.2451 c
993.7285 -764.8037 994.6367 -761.7676 994.6367 -758.1367 c
994.6367 -754.7061 993.8271 -752.0654 992.2109 -750.2168 c
990.5928 -748.3701 988.5137 -747.083 985.9736 -746.3555 c
983.4326 -745.6299 980.7422 -745.2666 977.9053 -745.2666 c
977.5742 -745.2666 977.2617 -745.2666 976.9648 -745.2666 c
976.668 -745.2666 976.3535 -745.3008 976.0244 -745.3662 C
973.6484 -749.9863 971.4854 -755.0674 969.54 -760.6113 c
967.5918 -766.1563 965.7607 -771.8652 964.0449 -777.7393 C
f
*U
*u
0 D
1012.3555 -817.4375 m
1010.1113 -817.4375 1008.3125 -816.4307 1006.96 -814.418 c
1005.6064 -812.4063 1004.9307 -810.0791 1004.9307 -807.4385 c
1004.9307 -805.5254 1005.2432 -803.3145 1005.8711 -800.8057 c
1006.498 -798.2979 1007.2725 -795.8232 1008.1973 -793.3809 c
1009.1211 -790.9395 1010.0791 -788.9258 1011.0684 -787.3418 c
1012.0586 -785.7578 1012.916 -784.9658 1013.6426 -784.9658 c
1013.9717 -784.9658 1014.5332 -785.1484 1015.3252 -785.5107 c
1016.1172 -785.874 1016.7764 -786.3516 1017.3057 -786.9453 C
1016.5791 -788.0684 1015.6875 -789.7842 1014.6328 -792.0938 c
1013.5762 -794.4053 1012.6523 -796.8799 1011.8604 -799.5186 c
1011.0684 -802.1592 1010.6729 -804.6016 1010.6729 -806.8447 c
1010.6729 -807.374 1010.7373 -808.1816 1010.8711 -809.2705 c
1011.002 -810.3594 1011.332 -811.334 1011.8604 -812.1904 c
1012.3877 -813.0488 1013.1797 -813.4775 1014.2363 -813.4775 c
1015.4893 -813.4775 1016.7764 -812.834 1018.0977 -811.5469 c
1019.417 -810.2607 1020.7539 -808.5947 1022.1074 -806.5479 c
1023.459 -804.5029 1024.7627 -802.291 1026.0176 -799.915 c
1027.2705 -797.5391 1028.4434 -795.2617 1029.5322 -793.084 c
1030.6211 -790.9063 1031.5273 -789.0908 1032.2549 -787.6387 C
1032.6504 -787.7051 1033.2275 -787.8369 1033.9873 -788.0352 c
1034.7451 -788.2324 1035.4385 -788.4971 1036.0664 -788.8271 c
1036.6924 -789.1582 1037.0068 -789.6191 1037.0068 -790.2129 c
1037.0068 -790.4775 1036.6758 -791.3516 1036.0166 -792.8359 c
1035.3564 -794.3213 1034.5811 -796.1377 1033.6904 -798.2813 c
1032.7988 -800.4268 1032.0225 -802.5879 1031.3633 -804.7656 c
1030.7031 -806.9434 1030.374 -808.8584 1030.374 -810.5078 c
1030.374 -811.6953 1030.6211 -812.6533 1031.1162 -813.3789 c
1031.6113 -814.1055 1032.4531 -814.4678 1033.6406 -814.4678 c
1035.0264 -814.4678 1036.71 -813.8408 1038.6895 -812.5869 c
1040.6699 -811.334 1042.6826 -809.502 1044.7285 -807.0918 c
1046.7734 -804.6836 1048.5898 -801.7959 1050.1738 -798.4297 C
1051.4609 -799.3203 L
1050.0742 -802.8848 1048.2588 -806.0371 1046.0156 -808.7754 c
1043.7715 -811.5146 1041.3955 -813.6436 1038.8877 -815.1611 c
1036.3789 -816.6787 1033.9375 -817.4375 1031.5615 -817.4375 c
1029.8447 -817.4375 1028.4756 -817.1064 1027.4531 -816.4482 c
1026.4287 -815.7871 1025.7041 -814.8965 1025.2754 -813.7744 c
1024.8447 -812.6533 1024.6318 -811.4326 1024.6318 -810.1113 c
1024.6318 -809.3193 1024.6963 -808.5127 1024.8301 -807.6865 c
1024.9609 -806.8613 1025.127 -806.0205 1025.3242 -805.1621 C
1024.1367 -807.3398 1022.8496 -809.3691 1021.4639 -811.25 c
1020.0781 -813.1309 1018.625 -814.6318 1017.1074 -815.7549 c
1015.5889 -816.876 1014.0049 -817.4375 1012.3555 -817.4375 c
f
*U
*u
1065.418 -817.042 m
1063.1738 -817.042 1061.4082 -816.4482 1060.1211 -815.2598 c
1058.835 -814.0713 1058.1914 -812.5215 1058.1914 -810.6064 c
1058.1914 -808.627 1058.6523 -806.5479 1059.5771 -804.3701 c
1060.501 -802.1914 1061.4082 -800.0313 1062.2998 -797.8857 c
1063.1904 -795.7412 1063.6357 -793.8105 1063.6357 -792.0938 c
1063.6357 -789.9824 1063.0254 -788.415 1061.8047 -787.3916 c
1060.582 -786.3691 1059.3447 -785.4287 1058.0918 -784.5693 C
1056.5732 -788.4648 1054.9893 -792.1602 1053.3398 -795.6582 c
1051.6895 -799.1572 1050.3359 -801.7959 1049.2813 -803.5781 C
1048.3896 -801.8945 L
1049.3135 -800.1797 1050.5186 -797.6719 1052.0039 -794.3711 c
1053.4883 -791.0713 1054.9561 -787.3096 1056.4092 -783.085 C
1055.748 -782.4258 1055.4189 -781.6338 1055.4189 -780.709 c
1055.4189 -778.7285 1055.9785 -777.1123 1057.1016 -775.8574 c
1058.2236 -774.6045 1059.0479 -773.9766 1059.5771 -773.9766 c
1060.3027 -773.9766 1060.7158 -774.291 1060.8145 -774.917 c
1060.9131 -775.5449 1060.9629 -776.0234 1060.9629 -776.3525 c
1060.9629 -776.6836 1060.7803 -777.3271 1060.4189 -778.2832 c
1060.0547 -779.2412 1059.874 -779.8174 1059.874 -780.0156 c
1059.874 -780.9404 1060.3848 -781.7822 1061.4082 -782.54 c
1062.4307 -783.2998 1063.6016 -784.1582 1064.9229 -785.1143 c
1066.2422 -786.0723 1067.4131 -787.2275 1068.4375 -788.5791 c
1069.46 -789.9326 1069.9717 -791.665 1069.9717 -793.7764 c
1069.9717 -795.7568 1069.5586 -797.7705 1068.7344 -799.8154 c
1067.9082 -801.8623 1067.084 -803.8096 1066.2598 -805.6572 c
1065.4336 -807.5049 1065.0225 -809.1221 1065.0225 -810.5078 c
1065.0225 -811.6953 1065.3193 -812.4873 1065.9131 -812.8838 c
1066.5068 -813.2793 1067.2002 -813.4775 1067.9922 -813.4775 c
1069.5762 -813.4775 1071.21 -812.9824 1072.8926 -811.9932 c
1074.5752 -811.0029 1076.209 -809.75 1077.793 -808.2305 c
1079.377 -806.7129 1080.7959 -805.1123 1082.0498 -803.4297 c
1083.3027 -801.7461 1084.2275 -800.1797 1084.8223 -798.7266 C
1086.1094 -799.7168 L
1084.8545 -802.4893 1083.1387 -805.2109 1080.9609 -807.8838 c
1078.7832 -810.5576 1076.3574 -812.752 1073.6846 -814.4678 c
1071.0117 -816.1836 1068.2549 -817.042 1065.418 -817.042 c
f
*U
*u
1114.7188 -816.4482 m
1112.4082 -816.4482 1110.6758 -815.8535 1109.5215 -814.666 c
1108.3662 -813.4775 1107.7891 -811.96 1107.7891 -810.1113 c
1107.7891 -808.7256 1108.0371 -807.2744 1108.5313 -805.7559 c
1109.0264 -804.2383 1109.5049 -802.6709 1109.9668 -801.0537 c
1110.4277 -799.4365 1110.6602 -797.8701 1110.6602 -796.3506 c
1110.6602 -794.5039 1110.2793 -793.2324 1109.5215 -792.5391 c
1108.7617 -791.8467 1107.8213 -791.5 1106.7002 -791.5 c
1104.6533 -791.5 1102.5742 -792.3408 1100.4629 -794.0244 c
1098.3506 -795.707 1096.3057 -797.8525 1094.3252 -800.459 c
1092.3447 -803.0674 1090.4971 -805.7559 1088.7813 -808.5273 c
1087.0645 -811.2998 1085.5469 -813.7744 1084.2275 -815.9531 C
1083.1709 -815.9531 1082.165 -815.7705 1081.208 -815.4082 c
1080.252 -815.0449 1079.5088 -814.5 1078.9805 -813.7744 C
1078.9805 -813.4453 1079.3271 -812.4229 1080.0195 -810.7061 c
1080.7129 -808.9902 1081.5215 -806.8789 1082.4453 -804.3701 c
1083.3691 -801.8623 1084.1934 -799.2881 1084.9199 -796.6475 c
1085.6455 -794.0088 1086.0088 -791.5986 1086.0088 -789.4209 c
1086.4053 -788.96 1087.0313 -788.4971 1087.8906 -788.0352 c
1088.7471 -787.5742 1089.6377 -787.3418 1090.5635 -787.3418 c
1092.3447 -787.3418 1093.2363 -788.2002 1093.2363 -789.916 c
1093.2363 -790.9727 1092.9395 -792.7373 1092.3447 -795.2119 c
1091.751 -797.6875 1090.9912 -800.2783 1090.0684 -802.9834 C
1091.8506 -800.2783 1093.8457 -797.5879 1096.0576 -794.915 c
1098.2686 -792.2422 1100.627 -790.0146 1103.1357 -788.2324 c
1105.6436 -786.4512 1108.1514 -785.5596 1110.6602 -785.5596 c
1113.2344 -785.5596 1115.0986 -786.4844 1116.2539 -788.332 c
1117.4072 -790.1807 1117.9863 -792.2266 1117.9863 -794.4697 c
1117.9863 -796.5166 1117.6553 -798.4141 1116.9961 -800.1621 c
1116.3359 -801.9121 1115.6602 -803.5947 1114.9668 -805.2109 c
1114.2734 -806.8291 1113.9268 -808.4629 1113.9268 -810.1113 c
1113.9268 -811.498 1114.207 -812.4727 1114.7686 -813.0322 c
1115.3291 -813.5938 1116.0391 -813.874 1116.8975 -813.874 c
1118.5459 -813.874 1120.1963 -813.0986 1121.8477 -811.5469 c
1123.4961 -809.9971 1125.0977 -808.0332 1126.6484 -805.6572 c
1128.1982 -803.2813 1129.5693 -800.8721 1130.7568 -798.4297 C
1131.8457 -799.7168 L
1130.46 -802.9512 1128.9082 -805.8223 1127.1934 -808.3301 c
1125.4766 -810.8389 1123.5947 -812.8184 1121.5498 -814.2695 c
1119.5039 -815.7207 1117.2266 -816.4482 1114.7188 -816.4482 c
f
*U
*u
1139.5674 -818.8242 m
1135.54 -818.8242 1132.5205 -817.7178 1130.5088 -815.5068 c
1128.4961 -813.2969 1127.4893 -810.5742 1127.4893 -807.3398 c
1127.4893 -804.3701 1128.2314 -801.2354 1129.7168 -797.9346 c
1131.2012 -794.6357 1133.1816 -791.5342 1135.6563 -788.6289 c
1138.1318 -785.7256 1140.8535 -783.3662 1143.8242 -781.5498 c
1146.7939 -779.7354 1149.7295 -778.8281 1152.6348 -778.8281 c
1154.1523 -778.8281 1155.5557 -779.2236 1156.8428 -780.0156 c
1158.1299 -780.8076 1158.7734 -782.4258 1158.7734 -784.8672 c
1158.7734 -787.376 1158.0303 -789.7344 1156.5459 -791.9453 c
1155.0605 -794.1572 1153.1133 -796.1201 1150.7041 -797.8359 c
1148.2949 -799.5527 1145.6553 -800.9541 1142.7842 -802.043 c
1139.9131 -803.1318 1137.0576 -803.8096 1134.2207 -804.0732 C
1134.0879 -804.7334 1133.9893 -805.3594 1133.9238 -805.9541 c
1133.8574 -806.5479 1133.8252 -807.1094 1133.8252 -807.6367 c
1133.8252 -808.627 1133.9395 -809.6172 1134.1719 -810.6064 c
1134.4023 -811.5967 1134.8154 -812.5049 1135.4092 -813.3291 c
1136.0029 -814.1553 1136.8105 -814.7969 1137.835 -815.2598 c
1138.8574 -815.7207 1140.127 -815.9531 1141.6465 -815.9531 c
1144.4834 -815.9531 1147.2891 -815.1436 1150.0605 -813.5273 c
1152.833 -811.9111 1155.4072 -809.7822 1157.7832 -807.1416 c
1160.1592 -804.5029 1162.1719 -801.5977 1163.8223 -798.4297 C
1165.0098 -799.3203 L
1163.2275 -803.2813 1160.9668 -806.7129 1158.2285 -809.6172 c
1155.4893 -812.5215 1152.5186 -814.7803 1149.3184 -816.3984 c
1146.1162 -818.0146 1142.8662 -818.8242 1139.5674 -818.8242 c
f
1 D
1134.7158 -802.1914 m
1136.498 -801.5977 1138.5107 -800.7236 1140.7549 -799.5684 c
1142.998 -798.4141 1145.1602 -797.0439 1147.2393 -795.46 c
1149.3184 -793.876 1151.0342 -792.1279 1152.3877 -790.2129 c
1153.7393 -788.2988 1154.417 -786.2871 1154.417 -784.1738 c
1154.417 -783.4482 1154.2842 -782.8867 1154.0215 -782.4912 c
1153.7568 -782.0947 1153.1953 -781.8965 1152.3379 -781.8965 c
1150.7539 -781.8965 1149.0713 -782.5078 1147.2891 -783.7285 c
1145.5068 -784.9502 1143.79 -786.5498 1142.1406 -788.5293 c
1140.4902 -790.5098 1139.0059 -792.6875 1137.6855 -795.0635 c
1136.3652 -797.4395 1135.375 -799.8154 1134.7158 -802.1914 C
f
*U
*u
0 D
1170.0576 -817.4375 m
1167.2197 -817.4375 1165.1895 -816.4629 1163.9697 -814.5176 c
1162.7471 -812.5713 1162.1377 -810.1455 1162.1377 -807.2412 c
1162.1377 -804.0732 1162.7314 -800.3105 1163.9199 -795.9551 c
1165.1074 -791.5986 1166.6748 -787.0127 1168.6221 -782.1934 c
1170.5684 -777.377 1172.6973 -772.6738 1175.0078 -768.0859 c
1177.3174 -763.5 1179.627 -759.3252 1181.9375 -755.5625 c
1184.2471 -751.8008 1186.376 -748.7979 1188.3232 -746.5537 c
1190.2695 -744.3105 1191.8037 -743.1875 1192.9268 -743.1875 c
1193.6523 -743.1875 1194.2461 -743.6006 1194.709 -744.4248 c
1195.1699 -745.251 1195.5332 -746.2412 1195.7979 -747.3955 c
1196.0605 -748.5508 1196.1934 -749.5898 1196.1934 -750.5137 c
1196.1934 -752.2959 1195.748 -754.6221 1194.8574 -757.4932 c
1193.9668 -760.3643 1192.7119 -763.5664 1191.0957 -767.0967 c
1189.4775 -770.6279 1187.5635 -774.1914 1185.3535 -777.7881 c
1183.1416 -781.3867 1180.7324 -784.834 1178.126 -788.1338 c
1175.5186 -791.4346 1172.7637 -794.2715 1169.8594 -796.6475 C
1169.4639 -798.4297 1169.1494 -800.1621 1168.9189 -801.8457 c
1168.6875 -803.5283 1168.5732 -805.1289 1168.5732 -806.6465 c
1168.5732 -811.7295 1170.0234 -814.2695 1172.9287 -814.2695 c
1174.5127 -814.2695 1176.1123 -813.5938 1177.7305 -812.2402 c
1179.3467 -810.8887 1180.8984 -809.1563 1182.3838 -807.043 c
1183.8682 -804.9316 1185.1709 -802.6865 1186.2939 -800.3105 c
1186.9531 -796.8799 1187.9424 -793.2002 1189.2637 -789.2725 c
1190.583 -785.3467 1192.1006 -781.4014 1193.8174 -777.4414 c
1195.5332 -773.4814 1197.3477 -769.6875 1199.2627 -766.0566 c
1201.1768 -762.4277 1203.0576 -759.1934 1204.9063 -756.3545 c
1206.7529 -753.5176 1208.4697 -751.2734 1210.0537 -749.623 c
1211.6377 -747.9736 1212.9248 -747.1475 1213.915 -747.1475 c
1214.6406 -747.1475 1215.2344 -747.5605 1215.6973 -748.3857 c
1216.1582 -749.2109 1216.5215 -750.2012 1216.7861 -751.3555 c
1217.0488 -752.5107 1217.1816 -753.5498 1217.1816 -754.4736 c
1217.1816 -756.6514 1216.6201 -759.5068 1215.499 -763.0371 c
1214.376 -766.5684 1212.7764 -770.3477 1210.6973 -774.373 c
1208.6182 -778.3994 1206.1094 -782.376 1203.1729 -786.3027 c
1200.2354 -790.2295 1196.9521 -793.6777 1193.3232 -796.6475 C
1192.9268 -798.4297 1192.6133 -800.1621 1192.3818 -801.8457 c
1192.1504 -803.5283 1192.0361 -805.1289 1192.0361 -806.6465 c
1192.0361 -811.7295 1193.4863 -814.2695 1196.3916 -814.2695 c
1198.1738 -814.2695 1199.9385 -813.4775 1201.6885 -811.8936 c
1203.4365 -810.3096 1205.0869 -808.3145 1206.6387 -805.9043 c
1208.1885 -803.4961 1209.5244 -801.0039 1210.6475 -798.4297 C
1212.1328 -799.2217 L
1209.4922 -804.832 1206.6211 -809.2705 1203.5195 -812.5371 c
1200.417 -815.8047 1197.085 -817.4375 1193.5205 -817.4375 c
1190.3525 -817.4375 1188.1748 -816.25 1186.9873 -813.874 c
1185.7988 -811.498 1185.3691 -808.5273 1185.7002 -804.9639 C
1183.3887 -808.8584 1180.9307 -811.9111 1178.3242 -814.1211 c
1175.7158 -816.332 1172.9609 -817.4375 1170.0576 -817.4375 c
f
1 D
1170.751 -793.2822 m
1173.0605 -790.9727 1175.3047 -788.3164 1177.4824 -785.3125 c
1179.6611 -782.3096 1181.6904 -779.1914 1183.5713 -775.957 c
1185.4521 -772.7236 1187.1182 -769.5879 1188.5713 -766.5518 c
1190.0215 -763.5166 1191.1445 -760.7939 1191.9365 -758.3838 c
1192.7285 -755.9756 1193.125 -754.1113 1193.125 -752.791 c
1193.125 -752.1318 1193.041 -751.7021 1192.877 -751.5039 c
1192.7119 -751.3057 1192.5635 -751.207 1192.4316 -751.207 c
1191.9023 -751.207 1190.9961 -752.0479 1189.709 -753.7314 c
1188.4219 -755.4141 1186.9199 -757.6758 1185.2051 -760.5127 c
1183.4873 -763.3516 1181.7402 -766.5859 1179.958 -770.2148 c
1178.1758 -773.8457 1176.4756 -777.6396 1174.8594 -781.5996 c
1173.2412 -785.5596 1171.8721 -789.4551 1170.751 -793.2822 C
f
1194.2139 -793.2822 m
1197.1172 -790.3779 1199.7734 -787.1777 1202.1836 -783.6787 c
1204.5918 -780.1816 1206.6875 -776.6836 1208.4697 -773.1846 c
1210.252 -769.6875 1211.6377 -766.4863 1212.6279 -763.582 c
1213.6182 -760.6787 1214.1133 -758.4014 1214.1133 -756.751 c
1214.1133 -756.0918 1214.0293 -755.6621 1213.8652 -755.4639 c
1213.7002 -755.2656 1213.5518 -755.167 1213.4199 -755.167 c
1212.7598 -755.167 1211.6533 -756.2402 1210.1035 -758.3838 c
1208.5518 -760.5303 1206.8027 -763.418 1204.8564 -767.0469 c
1202.9092 -770.6777 1200.9951 -774.7686 1199.1143 -779.3232 c
1197.2334 -783.877 1195.5996 -788.5293 1194.2139 -793.2822 C
f
*U
U
u
*u
0 D
986.1055 -550.584 m
967.7695 -550.584 953.9336 -547.498 944.6055 -541.334 c
935.2695 -535.1621 930.6055 -524.9121 930.6055 -510.584 c
930.6055 -509.584 931.4336 -509.084 933.1055 -509.084 c
935.4336 -509.084 939.6055 -509.9121 945.6055 -511.584 c
951.6055 -513.248 963.1055 -514.084 980.1055 -514.084 c
1008.7695 -514.084 1035.2695 -510.834 1059.6055 -504.334 c
1083.9336 -497.834 1105.0195 -488.9199 1122.8555 -477.584 c
1140.6836 -466.2559 1154.5195 -453.5059 1164.3555 -439.334 c
1174.1836 -425.1699 1179.1055 -410.584 1179.1055 -395.584 c
1179.1055 -381.9199 1175.2695 -370.9199 1167.6055 -362.584 c
1159.9336 -354.2559 1149.8555 -347.9199 1137.3555 -343.584 c
1124.8555 -339.2559 1111.2695 -336.334 1096.6055 -334.834 c
1081.9336 -333.334 1067.4336 -332.584 1053.1055 -332.584 c
1046.7695 -332.584 1040.3555 -332.6699 1033.8555 -332.834 c
1027.3555 -333.0059 1021.2695 -333.084 1015.6055 -333.084 C
1007.9336 -360.084 1000.4336 -387.2559 993.1055 -414.584 c
985.7695 -441.9199 978.2695 -468.4199 970.6055 -494.084 C
962.2695 -494.084 955.2695 -491.7559 949.6055 -487.084 c
943.9336 -482.4199 941.1055 -476.7559 941.1055 -470.084 c
941.1055 -466.084 941.9336 -461.4199 943.6055 -456.084 c
945.2695 -450.7559 946.7695 -445.9199 948.1055 -441.584 c
950.1055 -434.9199 953.6055 -423.7559 958.6055 -408.084 c
963.6055 -392.4199 969.6836 -374.084 976.8555 -353.084 c
984.0195 -332.084 991.9336 -310.084 1000.6055 -287.084 c
1009.2695 -264.084 1018.1836 -241.584 1027.3555 -219.584 c
1036.5195 -197.584 1045.4336 -178.084 1054.1055 -161.084 C
1040.1055 -163.4199 1028.3555 -166.7559 1018.8555 -171.084 c
1009.3555 -175.4199 1001.9336 -179.334 996.6055 -182.834 c
991.2695 -186.334 987.4336 -188.084 985.1055 -188.084 c
983.4336 -188.084 981.3555 -187.334 978.8555 -185.834 c
976.3555 -184.334 974.1055 -182.5059 972.1055 -180.334 c
970.1055 -178.1699 969.1055 -176.2559 969.1055 -174.584 C
985.7695 -167.584 1003.1836 -161.2559 1021.3555 -155.584 c
1039.5195 -149.9199 1061.6055 -147.084 1087.6055 -147.084 c
1098.6055 -147.084 1110.7695 -148.0059 1124.1055 -149.834 c
1137.4336 -151.6699 1150.1055 -155.334 1162.1055 -160.834 c
1174.1055 -166.334 1183.9336 -174.334 1191.6055 -184.834 c
1199.2695 -195.334 1203.1055 -209.2559 1203.1055 -226.584 c
1203.1055 -242.9199 1199.6055 -256.834 1192.6055 -268.334 c
1185.6055 -279.834 1176.4336 -289.334 1165.1055 -296.834 c
1153.7695 -304.334 1141.4336 -310.2559 1128.1055 -314.584 c
1114.7695 -318.9199 1101.6055 -322.084 1088.6055 -324.084 C
1113.2695 -325.4199 1133.1836 -328.9199 1148.3555 -334.584 c
1163.5195 -340.2559 1175.0195 -347.0059 1182.8555 -354.834 c
1190.6836 -362.6699 1195.9336 -370.9199 1198.6055 -379.584 c
1201.2695 -388.2559 1202.6055 -396.584 1202.6055 -404.584 c
1202.6055 -423.9199 1197.6055 -441.4199 1187.6055 -457.084 c
1177.6055 -472.7559 1164.4336 -486.4199 1148.1055 -498.084 c
1131.7695 -509.748 1113.9336 -519.498 1094.6055 -527.334 c
1075.2695 -535.1621 1056.1055 -540.998 1037.1055 -544.834 c
1018.1055 -548.6621 1001.1055 -550.584 986.1055 -550.584 c
f
1 D
1018.6055 -321.584 m
1036.9336 -320.9199 1055.1836 -318.834 1073.3555 -315.334 c
1091.5195 -311.834 1108.1055 -306.2559 1123.1055 -298.584 c
1138.1055 -290.9199 1150.1836 -280.9199 1159.3555 -268.584 c
1168.5195 -256.2559 1173.1055 -240.9199 1173.1055 -222.584 c
1173.1055 -205.2559 1169.0195 -191.9199 1160.8555 -182.584 c
1152.6836 -173.2559 1142.1836 -166.7559 1129.3555 -163.084 c
1116.5195 -159.4199 1102.9336 -157.584 1088.6055 -157.584 c
1086.9336 -157.584 1085.3555 -157.584 1083.8555 -157.584 c
1082.3555 -157.584 1080.7695 -157.7559 1079.1055 -158.084 C
1067.1055 -181.4199 1056.1836 -207.084 1046.3555 -235.084 c
1036.5195 -263.084 1027.2695 -291.9199 1018.6055 -321.584 C
f
*U
U
u
*u
0 D
728.7222 -706.9531 m
730.7222 -695.2813 733.0503 -683.3672 735.7222 -671.2031 c
738.3862 -659.0391 741.8003 -645.375 745.9722 -630.2031 c
750.1362 -615.0391 755.2222 -597.4531 761.2222 -577.4531 c
767.2222 -557.4531 774.7222 -533.7896 783.7222 -506.4536 C
778.3862 -506.7896 772.9722 -507.2896 767.4722 -507.9536 c
761.9722 -508.6255 756.3862 -509.2896 750.7222 -509.9536 C
751.0503 -501.6255 754.9722 -495.0396 762.4722 -490.2036 c
769.9722 -485.3755 779.8862 -481.7896 792.2222 -479.4536 c
794.5503 -472.4536 796.9722 -465.2036 799.4722 -457.7036 c
801.9722 -450.2036 804.5503 -442.3755 807.2222 -434.2036 c
809.8862 -426.0396 812.7222 -417.7036 815.7222 -409.2036 c
818.7222 -400.7036 821.8003 -391.7896 824.9722 -382.4536 c
828.1362 -373.1255 831.3862 -363.6255 834.7222 -353.9536 C
836.0503 -350.2896 837.5503 -345.7036 839.2222 -340.2036 c
840.8862 -334.7036 841.7222 -329.4536 841.7222 -324.4536 c
841.7222 -321.7896 841.3003 -319.9536 840.4722 -318.9536 c
839.6362 -317.9536 837.7222 -317.4536 834.7222 -317.4536 c
826.7222 -317.4536 818.9722 -320.7036 811.4722 -327.2036 c
803.9722 -333.7036 797.3003 -341.9536 791.4722 -351.9536 c
785.6362 -361.9536 781.0503 -372.2896 777.7222 -382.9536 c
774.3862 -393.6255 772.7222 -403.1255 772.7222 -411.4536 c
772.7222 -414.4536 772.9722 -417.4536 773.4722 -420.4536 c
773.9722 -423.4536 774.5503 -426.1255 775.2222 -428.4536 C
764.2222 -428.4536 756.4722 -425.7036 751.9722 -420.2036 c
747.4722 -414.7036 745.2222 -407.9536 745.2222 -399.9536 c
745.2222 -388.6255 748.5503 -377.2896 755.2222 -365.9536 c
761.8862 -354.6255 770.4722 -344.2036 780.9722 -334.7036 c
791.4722 -325.2036 802.4722 -317.6255 813.9722 -311.9536 c
825.4722 -306.2896 835.8862 -303.4536 845.2222 -303.4536 c
854.2222 -303.4536 860.3003 -305.9536 863.4722 -310.9536 c
866.6362 -315.9536 868.2222 -321.4536 868.2222 -327.4536 c
868.2222 -331.1255 867.8003 -334.7896 866.9722 -338.4536 c
866.1362 -342.1255 865.2222 -345.6255 864.2222 -348.9536 C
825.2222 -475.9536 L
829.8862 -475.6255 834.6362 -475.3755 839.4722 -475.2036 c
844.3003 -475.0396 849.2222 -474.9536 854.2222 -474.9536 c
869.8862 -474.9536 884.8003 -475.3755 898.9727 -476.2036 c
913.1367 -477.0396 926.5508 -478.1255 939.2227 -479.4536 C
945.8867 -458.1255 952.4727 -437.1255 958.9727 -416.4536 c
965.4727 -395.7896 971.4727 -377.7036 976.9727 -362.2036 c
982.4727 -346.7036 986.7227 -335.7896 989.7227 -329.4536 C
991.0508 -326.7896 992.8867 -323.4536 995.2227 -319.4536 c
997.5508 -315.4536 1000.6367 -311.7896 1004.4727 -308.4536 c
1008.3008 -305.1255 1012.5508 -303.4536 1017.2227 -303.4536 C
1012.5508 -315.7896 1007.2227 -331.5396 1001.2227 -350.7036 c
995.2227 -369.8755 989.1367 -390.7896 982.9727 -413.4536 c
976.8008 -436.1255 970.7227 -458.7896 964.7227 -481.4536 C
971.3867 -481.7896 977.8008 -482.2036 983.9727 -482.7036 c
990.1367 -483.2036 996.2227 -483.4536 1002.2227 -483.4536 C
994.8867 -491.1255 987.7227 -495.7036 980.7227 -497.2036 c
973.7227 -498.7036 966.8867 -499.4536 960.2227 -499.4536 C
957.2227 -511.7896 954.3867 -523.7036 951.7227 -535.2036 c
949.0508 -546.7031 946.7227 -557.625 944.7227 -567.9531 C
938.7227 -596.2891 934.4727 -620.4531 931.9727 -640.4531 c
929.4727 -660.4531 928.2227 -676.6172 928.2227 -688.9531 c
928.2227 -692.9531 928.3008 -696.3672 928.4727 -699.2031 c
928.6367 -702.0313 928.8867 -704.6172 929.2227 -706.9531 C
916.2227 -705.6172 907.2227 -701.9531 902.2227 -695.9531 c
897.2227 -689.9531 894.7227 -680.6172 894.7227 -667.9531 c
894.7227 -659.2891 895.7227 -648.375 897.7227 -635.2031 c
899.7227 -622.0391 902.7227 -607.7891 906.7227 -592.4531 c
909.3867 -582.4531 913.0508 -569.2031 917.7227 -552.7031 c
922.3867 -536.2036 927.5508 -518.6255 933.2227 -499.9536 C
912.8867 -499.9536 895.8867 -500.1255 882.2222 -500.4536 c
868.5503 -500.7896 856.7222 -501.1255 846.7222 -501.4536 c
836.7222 -501.7896 826.7222 -502.4536 816.7222 -503.4536 C
810.7222 -522.7896 804.7222 -541.9531 798.7222 -560.9531 c
792.7222 -579.9531 787.2222 -597.375 782.2222 -613.2031 c
777.2222 -629.0391 773.0503 -642.4531 769.7222 -653.4531 c
766.3862 -664.4531 764.2222 -671.6172 763.2222 -674.9531 C
759.8862 -686.2813 754.6362 -694.4531 747.4722 -699.4531 c
740.3003 -704.4531 734.0503 -706.9531 728.7222 -706.9531 C
f
*U
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
